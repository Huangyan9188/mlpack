
Statistic
- compose
- loop over data

MutableStatistic
- compose, decompose
- loop over data

DualTreeRunner
  - intimately tied with expansion pattern
    - local best first prefers a different tree layout from breadth-first
  - functions
    - prune
    - prioritize
    - basecase
    - and in some cases:
      - prune action
        - n-point: global statistic
        - kde: summarized downward contribution
          - is per-query downward contribution ever necessary?
          - no -- the information can be stored for arbitrary sets, so
          it can be summarized as a statistic, okay, i'm satisfied
      - decompose (where does this go?)
  - data
    - q: hierarchy, bound, static stat, mutable stat, result
    - r: hierarchy, bound, static stat
    - global stat (compose function)
  - notes
    - propagate bounds information and results: mutable statistic updates
    must be atomic

Array

- some ideas for me
  - "stream" interface
    - backend: separate files versus single files
    - think about in-RAM
      - linked list of blocks sounds okay
  - small-cache interface
    - allocate all memory necessary
    - blocks have no alignment
    - read blocks on first use
    - explicit ranged writebacks
