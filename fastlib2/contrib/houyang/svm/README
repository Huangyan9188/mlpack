@author Hua Ouyang
@file README

Support Vector Machines (Multiclass classification; Regression; Quantile estimation)

Files in this folder:
README: this file
# Source codes:
build.py: build scripts
svm_main.cc: contains main function of SVM
svm.h: contains classification/regression/quantile estimation main routines
opt_smo.h: sequential minimal optimization
opt_sgd.h: stochastic gradient descent optimization

# Unit test data:
c_traindata2.csv: training data for a 2 classes toy problem. 10 samples in each class.
c_testdata2.csv: testing data for a 2 classes toy problem. 10 samples in each class.
c_traindata3.csv: training data for a 3 classes toy problem. 10 samples in each class.
c_testdata3.csv: testing data for a 3 classes toy problem. 10 samples in each class.

r_traindata.csv: training data for regression, 100 samples of a 1-dim sinc function.
r_testdata.csv: testing data for regression, 100 samples of a 1-dim sinc function.

# Generated files:
artificialdata.csv: artificial data if no training/testing data file provided
svm_model: SVM model file
predicted_values: predicted result

Explanation of arguments:
0. learner_name (REQUIRED): the name of the support vecotr learner, values: "svm_c" for classification, "svm_r" for regression, "svm_q" for quantile estimation
1. mode (REQUIRED) : the mode of svm_main, values: "cv", "train", "train_test", "test".
2. opt (optional): the optimization method, values: "smo" for Sequential Minimal Optimization and "sgd" for Stochastic Gradient Descent. Default value: "smo".
3. k_cv (optional): the number of folds for cross validation, only required under "cv" mode.
4. cv_data (optional): file name for cross validation data, only required under "cv" mode.
5. train_data (optional): file name for training data, only required under "train" or "train_test" mode.
6. test_data (optional): file name for testing data, only required under "test" or "train_test" mode.
7. kernel (REQUIRED): kernel name, values:"linear", "gaussian".
8. sigma (optional): sigma in the gaussian kernel k(x1,x2)=exp(-(x1-x2)^2/(2sigma^2)), only required when using "guassian" kernel.
9. c (for SVM_C,optional): the weight (0~1) that controls compromise between large margins and small margin violations. Default value: 10.0.
10. c_p (for SVM_C,optional): the weight (0~1) for the positive class (y==1). Default value: c.
11. c_n (for SVM_C,optional): the weight (0~1) for the negative class (y==-1). Default value: c.
12. epsilon (for SVM_R,optional): the epsilon in SVM regression. Default value: 0.1.
13. wss (optional): working set selection scheme. 1 for 1st order expansion; 2 for 2nd order expansion. Default value: 1.
14. normalize (optional): where need to do data normalization before training/testing, values: "0" for no normalize, "1" for normalize.
15. accuracy (optional): the accuracty of optimization method ( i.e. stop optimization when f(w_{t+1})-f(w_t) <= accuracy ). Default value: 1e-5.
16. n_iter (for SGD, optional): number of iterations for SGD only. Default value: 1e4

Examples:
--------------------------------------------------- SVM Classificaation ------------------------------------------------
------Using SMO--------
a1.Support Vector Classification, Stratified cross validation mode
svm_main --learner_name=svm_c --mode=cv --k_cv=4 --cv_data=c_traindata3.csv --kernel=gaussian --sigma=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_c --mode=cv --k_cv=4 --cv_data=c_traindata3.csv --kernel=linear --c=0.02 --normalize=0

a2.Support Vector Classification, Training mode (model will be saved as "svm_model")
svm_main --learner_name=svm_c --mode=train --train_data=c_traindata3.csv --kernel=gaussian --sigma=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_c --mode=train --train_data=c_traindata3.csv --kernel=linear --c=0.02 --normalize=0

a3.Support Vector Classification, Training+testing mode
svm_main --learner_name=svm_c --mode=train_test --train_data=c_traindata3.csv --test_data=c_testdata3.csv --kernel=gaussian --sigma=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_c --mode=train_test --train_data=c_traindata2.csv --test_data=c_testdata2.csv --kernel=linear --c=0.02 --normalize=0

a4.Support Vector Classification, Testing mode (the model file "svm_model" should exist)
svm_main --learner_name=svm_c --mode=test --test_data=c_testdata3.csv --kernel=gaussian --sigma=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_c --mode=test --test_data=c_testdata3.csv --kernel=linear --c=0.02 --normalize=0

a5.Support Vector Classification, Training+testing mode, with specified optimization accuracy
svm_main --learner_name=svm_c  --accuracy=0.00001 --mode=train_test --train_data=c_traindata3.csv --test_data=c_testdata3.csv --kernel=gaussian --sigma=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_c  --accuracy=0.00001 --mode=train_test --train_data=c_traindata3.csv --test_data=c_testdata3.csv --kernel=linear --c=0.02 --normalize=0

------Using SGD--------
a6.Support Vector Classification, Training+testing mode, using stochastic gradient descent
svm_main --learner_name=svm_c --opt=sgd --n_iter=200 --mode=train_test --train_data=c_traindata3.csv --test_data=c_testdata3.csv --kernel=gaussian --sigma=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_c --opt=sgd  --n_iter=300 --mode=train_test --train_data=c_traindata2.csv --test_data=c_testdata2.csv --kernel=linear --c=0.01 --normalize=0

--------------------------------------------------- SVM Regression  -------------------------------------------------------
b1.Support Vector Regression, Cross validation mode
svm_main --learner_name=svm_r --mode=cv --k_cv=4 --cv_data=r_traindata.csv --kernel=gaussian --sigma=0.1 --epsilon=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_r --mode=cv --k_cv=4 --cv_data=r_traindata.csv --kernel=linear --epsilon=0.1 --c=10 --normalize=0

b2.Support Vector Regression, Training mode (model will be saved as "svm_model")
svm_main --learner_name=svm_r --mode=train --train_data=r_traindata.csv --kernel=gaussian --sigma=0.1 --epsilon=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_r --mode=train --train_data=r_traindata.csv --kernel=linear --epsilon=0.1 --c=10 --normalize=0

b3.Support Vector Regression, Training+testing mode
svm_main --learner_name=svm_r --mode=train_test --train_data=r_traindata.csv --test_data=r_testdata.csv --kernel=gaussian --sigma=0.1 --epsilon=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_r --mode=train_test --train_data=r_traindata.csv --test_data=r_testdata.csv --kernel=linear --epsilon=0.1 --c=10 --normalize=0

b4.Support Vector Regression, Testing mode (the model file "svm_model" should exist)
svm_main --learner_name=svm_r --mode=test --test_data=r_testdata.csv --kernel=gaussian --sigma=0.1 --epsilon=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_r --mode=test --test_data=r_testdata.csv --kernel=linear --epsilon=0.1 --c=10 --normalize=0

TODO:
b5.Support Vector Regression, Training+testing mode, using stochastic gradient descent
svm_main --learner_name=svm_r --opt=sgd --mode=train_test --train_data=r_traindata.csv --test_data=r_testdata.csv --kernel=gaussian --sigma=0.1 --epsilon=0.1 --c=10 --normalize=0
svm_main --learner_name=svm_r --opt=sgd --mode=train_test --train_data=r_traindata.csv --test_data=r_testdata.csv --kernel=linear --epsilon=0.1 --c=10 --normalize=0

--------------------------------------------------- SVM Quantile Estimation --------------------------------------------------
c1... TODO
