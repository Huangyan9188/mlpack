%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The Mathworks, Inc.
%%Title: C:\Nick\MLSP2006_figures\fig3c.eps
%%CreationDate: 04/14/2006  19:17:24
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    69   215   550   589
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  /bmap xdef pop pop} bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  {bmap} image gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    69   215   550   589
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 0204 7344 csm

  628   274  5776  4486 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 6913 5185 rf
6 w
0 4225 5356 0 0 -4225 899 4614 4 MP
PP
-5356 0 0 4225 5356 0 0 -4225 899 4614 5 MP stroke
4 w
DO
SO
6 w
0 sg
 899  389 mt 6255  389 L
 899 4614 mt 6255 4614 L
6255 4614 mt 6255  389 L
 899 4614 mt  899  389 L
 899 4614 mt 6255 4614 L
 899 4614 mt  899  389 L
1337 4614 mt 1337 4560 L
1337  389 mt 1337  442 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

1271 4759 mt 
(50) s
1784 4614 mt 1784 4560 L
1784  389 mt 1784  442 L
1684 4759 mt 
(100) s
2231 4614 mt 2231 4560 L
2231  389 mt 2231  442 L
2131 4759 mt 
(150) s
2678 4614 mt 2678 4560 L
2678  389 mt 2678  442 L
2578 4759 mt 
(200) s
3125 4614 mt 3125 4560 L
3125  389 mt 3125  442 L
3025 4759 mt 
(250) s
3572 4614 mt 3572 4560 L
3572  389 mt 3572  442 L
3472 4759 mt 
(300) s
4019 4614 mt 4019 4560 L
4019  389 mt 4019  442 L
3919 4759 mt 
(350) s
4466 4614 mt 4466 4560 L
4466  389 mt 4466  442 L
4366 4759 mt 
(400) s
4913 4614 mt 4913 4560 L
4913  389 mt 4913  442 L
4813 4759 mt 
(450) s
5360 4614 mt 5360 4560 L
5360  389 mt 5360  442 L
5260 4759 mt 
(500) s
5807 4614 mt 5807 4560 L
5807  389 mt 5807  442 L
5707 4759 mt 
(550) s
6255 4614 mt 6255 4560 L
6255  389 mt 6255  442 L
6155 4759 mt 
(600) s
 899 4614 mt  952 4614 L
6255 4614 mt 6201 4614 L
 628 4658 mt 
(-0.4) s
 899 4144 mt  952 4144 L
6255 4144 mt 6201 4144 L
 628 4188 mt 
(-0.2) s
 899 3675 mt  952 3675 L
6255 3675 mt 6201 3675 L
 798 3719 mt 
(0) s
 899 3205 mt  952 3205 L
6255 3205 mt 6201 3205 L
 698 3249 mt 
(0.2) s
 899 2736 mt  952 2736 L
6255 2736 mt 6201 2736 L
 698 2780 mt 
(0.4) s
 899 2266 mt  952 2266 L
6255 2266 mt 6201 2266 L
 698 2310 mt 
(0.6) s
 899 1797 mt  952 1797 L
6255 1797 mt 6201 1797 L
 698 1841 mt 
(0.8) s
 899 1327 mt  952 1327 L
6255 1327 mt 6201 1327 L
 798 1371 mt 
(1) s
 899  858 mt  952  858 L
6255  858 mt 6201  858 L
 698  902 mt 
(1.2) s
 899  389 mt  952  389 L
6255  389 mt 6201  389 L
 698  433 mt 
(1.4) s
 899  389 mt 6255  389 L
 899 4614 mt 6255 4614 L
6255 4614 mt 6255  389 L
 899 4614 mt  899  389 L
gs 899 389 5357 4226 rc
9 -49 9 -807 9 825 9 -817 9 808 9 -831 9 -51 9 629 
9 242 9 -44 9 58 9 -15 9 37 9 -408 8 405 9 -33 
9 12 9 15 9 -10 9 -677 9 -268 9 374 9 549 9 -338 
9 345 9 30 9 19 9 -763 9 721 9 -11 9 29 8 -28 
9 30 9 -46 9 93 9 -123 9 125 9 -72 9 2 9 1 
9 19 9 -1051 9 26 9 1032 9 -840 9 -57 9 857 9 19 
8 -521 9 541 9 2 9 18 9 -4 9 -31 9 52 9 -56 
9 -910 9 684 9 226 9 45 9 -26 9 -29 9 -811 9 806 
9 7 8 -902 9 944 9 -882 9 828 9 7 9 4 9 -339 
9 343 9 -4 9 -225 9 181 9 58 9 -936 9 915 9 10 
9 4 9 -767 8 229 9 184 9 -412 9 759 9 -4 9 -1 
9 -294 9 -685 9 1014 9 -621 9 60 9 513 9 24 9 -5 
9 -71 9 2 9 63 8 -2 9 -5 9 -559 9 580 9 -35 
9 -338 9 366 9 14 9 -7 9 -7 9 -939 9 550 9 151 
9 241 9 -693 9 -43 9 727 8 -4 9 4 9 55 9 -66 
9 18 9 -628 9 -53 9 125 9 551 9 2 9 10 9 53 
9 -553 9 564 9 -70 9 4 9 -855 9 773 8 -761 9 820 
9 5 9 -959 9 450 9 -473 9 987 9 10 9 -2 9 -1018 
9 82 9 712 9 -215 9 -126 9 -306 9 -37 9 765 8 -794 
9 258 9 -137 9 -122 9 728 9 -750 9 31 9 177 9 548 
9 -171 9 -141 9 -381 9 957 9 -992 9 300 9 705 9 -1104 
8 854 9 42 9 -7 9 221 9 -688 9 233 9 -573 9 550 
9 -451 9 451 9 183 9 10 9 -183 9 131 9 -746 9 581 
9 -236 8 -308 9 -49 9 752 9 -613 9 941 9 -534 9 -446 
9 855 9 -10 9 -274 9 48 9 236 9 -533 9 77 9 -450 
9 667 9 196 8 -647 9 416 9 -657 9 335 9 -153 9 -129 
9 -62 9 168 9 -176 9 93 9 927 9 -868 9 794 9 -238 
9 211 9 -230 9 -369 8 238 9 400 9 -157 9 -177 9 -404 
9 236 9 167 9 -134 9 -291 9 467 9 -40 9 -548 9 56 
9 684 9 186 9 -913 9 263 8 -137 9 -221 9 14 9 98 
9 -69 9 886 9 -895 9 897 9 -900 9 412 9 327 9 305 
9 -1082 9 690 9 -405 9 57 9 525 8 -770 9 904 9 -291 
9 -386 9 -122 9 -97 9 255 9 584 9 -552 9 -60 9 200 
9 -502 9 37 9 -34 9 759 9 -689 9 587 8 155 9 -826 
9 187 9 449 9 -362 9 623 9 -92 9 42 9 -814 9 512 
9 382 9 -673 9 -223 9 111 9 202 9 -266 9 636 9 -125 
8 -389 9 1302 9 421 9 -604 9 -81 9 -37 9 1087 9 -1049 
9 -102 9 204 9 -108 3402 2412 300 MP stroke
9 32 9 -12 9 690 9 -756 9 52 9 260 8 -285 9 551 
9 460 9 -1007 9 40 9 -35 9 274 9 -263 9 70 9 870 
9 -968 9 135 9 923 9 -316 9 -712 9 -86 9 115 8 -50 
9 19 9 27 9 978 9 -1035 9 69 9 -96 9 89 9 48 
9 60 9 -168 9 56 9 -3 9 779 9 -748 9 -149 9 112 
8 294 9 -122 9 -181 9 1056 9 -1058 9 -88 9 88 9 -25 
9 -14 9 -18 9 49 9 -23 9 -82 9 54 9 52 9 1083 
9 -1045 8 -3 9 1012 9 9 9 -589 9 -495 9 50 9 -27 
9 -34 9 23 9 59 9 -22 9 -62 9 283 9 -345 9 96 
9 1002 9 -966 8 -69 9 86 9 -104 9 59 9 -64 9 13 
9 10 9 1115 9 -809 9 -256 9 355 9 -436 9 1150 9 -1052 
9 -73 9 27 9 -19 8 -51 9 481 9 -404 9 36 9 -130 
9 1110 9 -381 9 -669 9 -21 9 58 9 27 9 -62 9 926 
9 -940 9 7 9 92 9 410 8 -158 9 -323 9 295 9 -252 
9 -29 9 14 9 -51 9 53 9 -81 9 105 9 91 9 -173 
9 367 9 -277 9 -9 9 -114 9 331 8 -239 9 200 9 311 
9 -488 9 1035 9 -1070 9 34 9 1047 9 -1163 9 89 9 97 
9 866 9 -528 9 272 9 -511 9 -41 9 824 9 -632 8 574 
9 -133 9 -540 9 205 9 192 9 -310 9 663 9 -48 9 -758 
9 855 9 -552 9 312 9 -505 9 776 9 -99 9 -674 9 664 
8 -54 9 -434 9 332 9 -71 9 108 9 -209 9 319 9 95 
9 32 9 -411 9 -93 9 422 9 -543 9 442 9 -465 9 617 
9 -419 8 425 9 -654 9 222 9 -444 9 623 9 124 9 -823 
9 769 9 -577 9 281 9 445 9 -20 9 52 9 -352 9 -577 
9 111 9 172 8 533 9 -617 9 -98 9 425 9 -567 9 450 
9 125 9 -350 9 124 9 235 9 -378 9 22 9 755 9 -934 
9 772 9 154 9 -802 8 227 9 -207 9 794 9 -176 9 41 
9 -351 9 412 9 -429 9 -267 9 696 9 -646 9 505 9 199 
9 -481 9 -305 9 776 9 -24 8 2 9 -302 9 -401 9 -116 
9 782 9 -13 9 -828 9 130 9 385 9 342 9 -237 9 86 
9 -142 9 24 9 -63 9 -468 9 427 8 345 9 -5 9 -20 
9 82 9 -538 9 357 9 70 9 -254 9 4 9 -116 9 498 
9 -590 9 -2 9 -298 9 824 9 -614 9 587 8 94 9 -672 
9 475 9 -323 9 453 9 21 9 74 9 -631 9 525 9 36 
9 -406 9 -166 9 454 9 -65 9 201 9 24 9 -718 8 435 
899 1638 281 MP stroke
gr


end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
