!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.7	//
A1	mlpack/kde/inverse_normal_cdf.h	39;"	d
A2	mlpack/kde/inverse_normal_cdf.h	40;"	d
A3	mlpack/kde/inverse_normal_cdf.h	41;"	d
A4	mlpack/kde/inverse_normal_cdf.h	42;"	d
A5	mlpack/kde/inverse_normal_cdf.h	43;"	d
A6	mlpack/kde/inverse_normal_cdf.h	44;"	d
ACC_covs	mlpack/hmm/mixtureDST.h	/^  ArrayList<Matrix> ACC_covs;$/;"	m	class:MixtureGauss
ACC_means	mlpack/hmm/mixtureDST.h	/^  ArrayList<Vector> ACC_means;$/;"	m	class:MixtureGauss
ACC_p	mlpack/hmm/discreteDST.h	/^  Vector ACC_p;$/;"	m	class:DiscreteDST
ACC_prior	mlpack/hmm/mixtureDST.h	/^  Vector ACC_prior;$/;"	m	class:MixtureGauss
ALLKFN_H	mlpack/allkfn/allkfn.h	10;"	d
ALLKNN_H	mlpack/allknn/allknn.h	41;"	d
ANSI_BLACK	include/fastlib/base/ansi_colors.h	67;"	d
ANSI_BLUE	include/fastlib/base/ansi_colors.h	75;"	d
ANSI_BOLD	include/fastlib/base/ansi_colors.h	47;"	d
ANSI_CLEAR	include/fastlib/base/ansi_colors.h	45;"	d
ANSI_CYAN	include/fastlib/base/ansi_colors.h	79;"	d
ANSI_GREEN	include/fastlib/base/ansi_colors.h	71;"	d
ANSI_HBLACK	include/fastlib/base/ansi_colors.h	50;"	d
ANSI_HBLUE	include/fastlib/base/ansi_colors.h	58;"	d
ANSI_HCYAN	include/fastlib/base/ansi_colors.h	62;"	d
ANSI_HGREEN	include/fastlib/base/ansi_colors.h	54;"	d
ANSI_HMAGENTA	include/fastlib/base/ansi_colors.h	60;"	d
ANSI_HRED	include/fastlib/base/ansi_colors.h	52;"	d
ANSI_HWHITE	include/fastlib/base/ansi_colors.h	64;"	d
ANSI_HYELLOW	include/fastlib/base/ansi_colors.h	56;"	d
ANSI_MAGENTA	include/fastlib/base/ansi_colors.h	77;"	d
ANSI_RED	include/fastlib/base/ansi_colors.h	69;"	d
ANSI_SEQ	include/fastlib/base/ansi_colors.h	43;"	d
ANSI_WHITE	include/fastlib/base/ansi_colors.h	81;"	d
ANSI_YELLOW	include/fastlib/base/ansi_colors.h	73;"	d
ARRAYLIST__DEBUG_INIT_OK	include/fastlib/col/arraylist.h	1211;"	d
ARRAYLIST__DEBUG_INIT_OK	include/fastlib/col/arraylist.h	44;"	d
ARRAYLIST__DEBUG_INSERT_OK	include/fastlib/col/arraylist.h	1208;"	d
ARRAYLIST__DEBUG_INSERT_OK	include/fastlib/col/arraylist.h	57;"	d
ARRAYLIST__DEBUG_POP_BACK_OK	include/fastlib/col/arraylist.h	1209;"	d
ARRAYLIST__DEBUG_POP_BACK_OK	include/fastlib/col/arraylist.h	53;"	d
ARRAYLIST__DEBUG_PUSH_BACK_OK	include/fastlib/col/arraylist.h	1210;"	d
ARRAYLIST__DEBUG_PUSH_BACK_OK	include/fastlib/col/arraylist.h	49;"	d
ARRAYLIST__DEBUG_REMOVE_OK	include/fastlib/col/arraylist.h	1207;"	d
ARRAYLIST__DEBUG_REMOVE_OK	include/fastlib/col/arraylist.h	62;"	d
ASSERT_PASS	include/fastlib/base/deprecated.h	49;"	d
ASSIGN_VIA_COPY_CONSTRUCTION	include/fastlib/base/cc.h	99;"	d
ASSIGN_VIA_RECURSION_SAFE_COPY_CONSTRUCTION	include/fastlib/base/cc.h	121;"	d
ATTACHED	include/fastlib/par/thread.h	/^  enum {UNINIT, READY, ATTACHED, DETACHED, DONE} status_;$/;"	e	enum:Thread::__anon18
A_	mlpack/quicsvd/cosine_tree.h	/^  Matrix A_;$/;"	m	class:CosineNode
A_	mlpack/quicsvd/quicsvd.h	/^  Matrix A_;$/;"	m	class:QuicSVD
Accumulate	mlpack/series_expansion/farfield_expansion_impl.h	/^void FarFieldExpansion<TKernelAux>::Accumulate(const Vector &v, double weight,$/;"	f	class:FarFieldExpansion
AccumulateCoeffs	mlpack/series_expansion/farfield_expansion_impl.h	/^void FarFieldExpansion<TKernelAux>::AccumulateCoeffs(const Matrix& data, $/;"	f	class:FarFieldExpansion
AccumulateCoeffs	mlpack/series_expansion/local_expansion_impl.h	/^void LocalExpansion<TKernelAux>::AccumulateCoeffs(const Matrix& data, $/;"	f	class:LocalExpansion
AccumulateCoeffs	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^void MultFarFieldExpansion<TKernelAux>::AccumulateCoeffs(const Matrix& data, $/;"	f	class:MultFarFieldExpansion
AccumulateCoeffs	mlpack/series_expansion/mult_local_expansion_impl.h	/^void MultLocalExpansion<TKernelAux>::AccumulateCoeffs(const Matrix& data, $/;"	f	class:MultLocalExpansion
Add	include/fastlib/col/queue.h	/^  T *Add() {$/;"	f	class:Queue
Add	include/fastlib/col/queue.h	/^  T *Add(const T& value) {$/;"	f	class:Queue
Add	include/fastlib/tree/bounds.h	/^ DHrectBound& Add(const DHrectBound& other, const Vector& size){$/;"	f	class:DHrectBound
Add	include/fastlib/tree/bounds.h	/^ DHrectBound& Add(const Vector&  other, const Vector& size){$/;"	f	class:DHrectBound
AddBack	include/fastlib/col/arraylist.h	/^  Elem *AddBack(index_t inc = 1) {$/;"	f	class:ArrayList
AddBackItem	include/fastlib/col/arraylist.h	/^  Elem *AddBackItem(const Elem &elem) {$/;"	f	class:ArrayList
AddBackUnconstructed	include/fastlib/col/arraylist.h	/^  Elem *AddBackUnconstructed(index_t inc = 1) {$/;"	f	class:ArrayList
AddExpert	include/fastlib/la/uselapack.h	/^  inline void AddExpert(double alpha, const Matrix &X, Matrix *Y) {$/;"	f	namespace:la
AddExpert	include/fastlib/la/uselapack.h	/^  inline void AddExpert(double alpha, const Vector &x, Vector *y) {$/;"	f	namespace:la
AddExpert	include/fastlib/la/uselapack.h	/^  inline void AddExpert(index_t length,$/;"	f	namespace:la
AddExpert	mlpack/fastica/lin_alg.h	/^  Matrix* AddExpert(double alpha, const Matrix* const A, Matrix* const B) {$/;"	f	namespace:linalg__private
AddExpert	mlpack/fastica/lin_alg.h	/^  Vector* AddExpert(double alpha, const Vector* const u, Vector* const v) {$/;"	f	namespace:linalg__private
AddInit	include/fastlib/la/uselapack.h	/^  inline void AddInit(const Matrix &X, const Matrix &Y, Matrix *Z) {$/;"	f	namespace:la
AddInit	include/fastlib/la/uselapack.h	/^  inline void AddInit(const Vector &x, const Vector &y, Vector *z) {$/;"	f	namespace:la
AddOverwrite	include/fastlib/la/uselapack.h	/^  inline void AddOverwrite(const Matrix &X, const Matrix &Y, Matrix *Z) {$/;"	f	namespace:la
AddOverwrite	include/fastlib/la/uselapack.h	/^  inline void AddOverwrite(const Vector &x, const Vector &y, Vector *z) {$/;"	f	namespace:la
AddOverwrite	include/fastlib/la/uselapack.h	/^  inline void AddOverwrite(index_t length,$/;"	f	namespace:la
AddPostponed	mlpack/kde/dualtree_kde_common.h	/^  static void AddPostponed(TTree *node, index_t destination, $/;"	f	class:DualtreeKdeCommon
AddPostponed	mlpack/kde/kde_stat.h	/^  void AddPostponed(const KdeStat& parent_stat) {$/;"	f	class:KdeStat
AddPostponed	mlpack/kde/kde_stat.h	/^  void AddPostponed(const VKdeStat& parent_stat) {$/;"	f	class:VKdeStat
AddTo	include/fastlib/la/uselapack.h	/^  inline void AddTo(const Matrix &X, Matrix *Y) {$/;"	f	namespace:la
AddTo	include/fastlib/la/uselapack.h	/^  inline void AddTo(const Vector &x, Vector *y) {$/;"	f	namespace:la
AddTo	include/fastlib/la/uselapack.h	/^  inline void AddTo(index_t length, const double *x, double *y) {$/;"	f	namespace:la
AddTo	mlpack/fastica/lin_alg.h	/^  Matrix* AddTo(const Matrix* const A, Matrix* const B) {$/;"	f	namespace:linalg__private
AddTo	mlpack/fastica/lin_alg.h	/^  Vector* AddTo(const Vector* const u, Vector* const v) {$/;"	f	namespace:linalg__private
Alias	include/fastlib/la/matrix.h	/^  void Alias(T *in_ptr, index_t in_length) {$/;"	f	class:GenVector
Alias	include/fastlib/la/matrix.h	/^  void Alias(T *ptr_in, index_t n_rows_in, index_t n_cols_in) {$/;"	f	class:GenMatrix
Alias	include/fastlib/la/matrix.h	/^  void Alias(const GenMatrix& other) {$/;"	f	class:GenMatrix
Alias	include/fastlib/la/matrix.h	/^  void Alias(const GenVector& other) {$/;"	f	class:GenVector
AliasColVector	include/fastlib/la/matrix.h	/^  void AliasColVector(const GenVector<T>& col_vector) {$/;"	f	class:GenMatrix
AliasMatrix	include/fastlib/data/dataset.h	/^  void AliasMatrix(const Matrix& matrix_in) {$/;"	f	class:Dataset
AliasRowVector	include/fastlib/la/matrix.h	/^  void AliasRowVector(const GenVector<T>& row_vector) {$/;"	f	class:GenMatrix
Aliaser	include/fastlib/base/otrav_impl.h	/^    Aliaser(T *obj) {$/;"	f	class:ot__private::Aliaser
Aliaser	include/fastlib/base/otrav_impl.h	/^  class Aliaser {$/;"	c	namespace:ot__private
AllNN	mlpack/allnn/allnn.h	/^  AllNN() {$/;"	f	class:AllNN
AllNN	mlpack/allnn/allnn.h	/^class AllNN {$/;"	c
AllkFN	mlpack/allkfn/allkfn.h	/^  AllkFN() {$/;"	f	class:AllkFN
AllkFN	mlpack/allkfn/allkfn.h	/^class AllkFN {$/;"	c
AllkNN	mlpack/allknn/allknn.h	/^  AllkNN() {$/;"	f	class:AllkNN
AllkNN	mlpack/allknn/allknn.h	/^class AllkNN {$/;"	c
Alloc	include/fastlib/base/ccmem.h	/^  inline T *Alloc() {$/;"	f	namespace:mem
Alloc	include/fastlib/base/ccmem.h	/^  inline T *Alloc(size_t elems) {$/;"	f	namespace:mem
Alloc	include/fastlib/col/fastalloc.h	/^  static char *Alloc() {$/;"	f	class:SlabAllocator
AllocBytes	include/fastlib/base/ccmem.h	/^  inline T *AllocBytes(size_t bytes) {$/;"	f	namespace:mem
AllocConstruct	include/fastlib/base/ccmem.h	/^  inline T *AllocConstruct(size_t elems = 1) {$/;"	f	namespace:mem
AllocConstruct	include/fastlib/base/deprecated.h	/^  inline T *AllocConstruct(const U &init, size_t elems) {$/;"	f	namespace:mem
AllocCopy	include/fastlib/base/ccmem.h	/^  inline T *AllocCopy(const T *src, size_t elems = 1) {$/;"	f	namespace:mem
AllocCopy	include/fastlib/base/ccmem.h	/^  inline T *AllocCopy(const U *src, size_t elems = 1) {$/;"	f	namespace:mem
AllocCopyBytes	include/fastlib/base/ccmem.h	/^  inline T *AllocCopyBytes(const U *src, size_t bytes) {$/;"	f	namespace:mem
AllocCopyConstruct	include/fastlib/base/ccmem.h	/^  inline T *AllocCopyConstruct(const T *src, size_t elems = 1) {$/;"	f	namespace:mem
AllocCopyConstruct	include/fastlib/base/ccmem.h	/^  inline T *AllocCopyConstruct(const U *src, size_t elems = 1) {$/;"	f	namespace:mem
AllocCopyValues	include/fastlib/base/ccmem.h	/^  inline T *AllocCopyValues(const U *src, size_t elems = 1) {$/;"	f	namespace:mem
AllocRepeatConstruct	include/fastlib/base/ccmem.h	/^  inline T *AllocRepeatConstruct(const T &init, size_t elems) {$/;"	f	namespace:mem
AllocRepeatConstruct	include/fastlib/base/ccmem.h	/^  inline T *AllocRepeatConstruct(const U &init, size_t elems) {$/;"	f	namespace:mem
AllocSlab	include/fastlib/col/fastalloc.h	/^void SlabAllocator<item_size>::AllocSlab() {$/;"	f	class:SlabAllocator
AllocZero	include/fastlib/base/ccmem.h	/^  inline T *AllocZero(size_t elems = 1) {$/;"	f	namespace:mem
AllocZeroBytes	include/fastlib/base/ccmem.h	/^  inline T *AllocZeroBytes(size_t bytes) {$/;"	f	namespace:mem
AllocZeroed	include/fastlib/base/deprecated.h	/^  inline T *AllocZeroed(size_t elems = 1) {$/;"	f	namespace:mem
AllocateDerivativeMap	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  void AllocateDerivativeMap(int dim, int order, $/;"	f	class:InversePowDistGradientKernelAux
AllocateDerivativeMap	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  void AllocateDerivativeMap(int dim, int order, $/;"	f	class:InversePowDistKernelAux
AllocateDerivativeMap	mlpack/series_expansion/kernel_aux.h	/^  void AllocateDerivativeMap(int dim, int order, $/;"	f	class:EpanKernelAux
AllocateDerivativeMap	mlpack/series_expansion/kernel_aux.h	/^  void AllocateDerivativeMap(int dim, int order, $/;"	f	class:GaussianKernelAux
AllocateDerivativeMap	mlpack/series_expansion/kernel_aux.h	/^  void AllocateDerivativeMap(int dim, int order, $/;"	f	class:GaussianKernelMultAux
Append	include/fastlib/col/col_string.h	/^  void Append(char c) {$/;"	f	class:String
Append	include/fastlib/col/col_string.h	/^  void Append(const String& str) {$/;"	f	class:String
Append	include/fastlib/col/col_string.h	/^  void Append(const char *add_str) {$/;"	f	class:String
Append	include/fastlib/col/col_string.h	/^  void Append(const char *add_str, index_t add_length) {$/;"	f	class:String
AppendCopy	include/fastlib/col/arraylist.h	/^  void AppendCopy(const ArrayList &src) {$/;"	f	class:ArrayList
AppendCopy	include/fastlib/col/arraylist.h	/^  void AppendCopy(const Elem *src, index_t size) {$/;"	f	class:ArrayList
AppendSteal	include/fastlib/col/arraylist.h	/^void ArrayList<TElem>::AppendSteal(ArrayList *src) {$/;"	f	class:ArrayList
ArgMinus	mlpack/fastica/lin_alg.h	/^  double ArgMinus(double x, double arg) {$/;"	f	namespace:linalg__private
ArrayList	include/fastlib/col/arraylist.h	/^class ArrayList {$/;"	c
AssertInitialized_	include/fastlib/la/matrix.h	/^  void AssertInitialized_() {$/;"	f	class:GenVector
AssertUninitialized_	include/fastlib/la/matrix.h	/^  void AssertUninitialized_() const {$/;"	f	class:GenMatrix
AssertUninitialized_	include/fastlib/la/matrix.h	/^  void AssertUninitialized_() const {$/;"	f	class:GenVector
Assign_	mlpack/kde/fgt_kde.h	/^  void Assign_(int nallbx, ArrayList<int> &nsides, Vector &sidelengths, $/;"	f	class:FGTKde
AttemptSplitting	mlpack/kde/gen_metric_tree_impl.h	/^  bool AttemptSplitting(Matrix& matrix, TMetricTree *node, TMetricTree **left, $/;"	f	namespace:tree_gen_metric_tree_private
AverageBoxesInit	include/fastlib/tree/bounds.h	/^  void AverageBoxesInit(const DHrectBound& box1, const DHrectBound& box2) {$/;"	f	class:DHrectBound
B1	mlpack/kde/inverse_normal_cdf.h	46;"	d
B2	mlpack/kde/inverse_normal_cdf.h	47;"	d
B3	mlpack/kde/inverse_normal_cdf.h	48;"	d
B4	mlpack/kde/inverse_normal_cdf.h	49;"	d
B5	mlpack/kde/inverse_normal_cdf.h	50;"	d
BANDWIDTH_LSCV_H	mlpack/kde/bandwidth_lscv.h	40;"	d
BASE_ANSI_COLORS_H	include/fastlib/base/ansi_colors.h	40;"	d
BASE_CCMEM_H	include/fastlib/base/ccmem.h	43;"	d
BASE_CCMEM__SIMPLE_CONSTRUCTORS	include/fastlib/base/ccmem.h	368;"	d
BASE_CCMEM__SIMPLE_CONSTRUCTORS	include/fastlib/base/ccmem.h	413;"	d
BASE_CC_H	include/fastlib/base/cc.h	39;"	d
BASE_COMMON_H	include/fastlib/base/common.h	49;"	d
BASE_COMPILER_H	include/fastlib/base/compiler.h	42;"	d
BASE_DEBUG_H	include/fastlib/base/debug.h	51;"	d
BASE_DEPRECATED_H	include/fastlib/base/deprecated.h	40;"	d
BASE_FORTRAN_H	include/fastlib/base/fortran.h	40;"	d
BASE_H	include/fastlib/base/base.h	46;"	d
BASE_OTRAV_H	include/fastlib/base/otrav.h	43;"	d
BASE_TEST_H	include/fastlib/base/test.h	42;"	d
BIG_BAD_BUF_SIZE	include/fastlib/base/ccmem.h	/^  const size_t BIG_BAD_BUF_SIZE = 64;$/;"	v
BIG_BAD_NUMBER	include/fastlib/base/debug.h	250;"	d
BIG_BAD_POINTER	include/fastlib/base/debug.h	262;"	d
BOUNDS_AUX_H	mlpack/series_expansion/bounds_aux.h	33;"	d
BackwardProcedure	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::BackwardProcedure(const Vector& seq, const Matrix& trans, const Matrix& emis, const Vector& scales, Matrix* bs) {$/;"	f	class:DiscreteHMM
BackwardProcedure	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::BackwardProcedure(int L, const Matrix& trans, const Matrix& emis_prob, const Vector& scales, Matrix* bs) {$/;"	f	class:GaussianHMM
BackwardProcedure	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::BackwardProcedure(int L, const Matrix& trans, const Matrix& emis_prob, $/;"	f	class:MixtureofGaussianHMM
BandwidthFactor	mlpack/series_expansion/kernel_aux.h	/^  double BandwidthFactor(double bandwidth_sq) const {$/;"	f	class:EpanKernelAux
BandwidthFactor	mlpack/series_expansion/kernel_aux.h	/^  double BandwidthFactor(double bandwidth_sq) const {$/;"	f	class:GaussianKernelAux
BandwidthFactor	mlpack/series_expansion/kernel_aux.h	/^  double BandwidthFactor(double bandwidth_sq) const {$/;"	f	class:GaussianKernelMultAux
BandwidthLSCV	mlpack/kde/bandwidth_lscv.h	/^class BandwidthLSCV {$/;"	c
BasicKdTree	include/fastlib/tree/kdtree.h	/^typedef BinarySpaceTree<DHrectBound<2>, Matrix> BasicKdTree;$/;"	t
BatchPredict	mlpack/svm/svm.h	/^void SVM<TKernel>::BatchPredict(int learner_typeid, Dataset& testset, String predictedvalue_filename) {$/;"	f	class:SVM
BestNodePartners	mlpack/kde/dualtree_kde_common.h	/^  static void BestNodePartners$/;"	f	class:DualtreeKdeCommon
Bias	mlpack/svm/smo.h	/^  double Bias() const {$/;"	f	class:SMO
BinarySpaceTree	include/fastlib/tree/spacetree.h	/^class BinarySpaceTree {$/;"	c
BinomialCoefficientHelper	mlpack/kde/dualtree_kde_common.h	/^  static double BinomialCoefficientHelper(double n3, double k3, double n1, $/;"	f	class:DualtreeKdeCommon
BitCopy	include/fastlib/base/ccmem.h	/^  T *BitCopy(T *dest, const T *src, size_t elems = 1) {$/;"	f	namespace:mem
BitCopyBytes	include/fastlib/base/ccmem.h	/^  T *BitCopyBytes(T *dest, const U *src, size_t bytes) {$/;"	f	namespace:mem
BitSwap	include/fastlib/base/ccmem.h	/^  void BitSwap(T *a, T *b, size_t elems = 1) {$/;"	f	namespace:mem
BitZero	include/fastlib/base/ccmem.h	/^  T *BitZero(T *array, size_t elems = 1) {$/;"	f	namespace:mem
BitZeroBytes	include/fastlib/base/ccmem.h	/^  T *BitZeroBytes(T *array, size_t bytes) {$/;"	f	namespace:mem
Bound	include/fastlib/tree/spacetree.h	/^  typedef TBound Bound;$/;"	t	class:BinarySpaceTree
Bound	mlpack/kde/general_spacetree.h	/^  typedef TBound Bound;$/;"	t	class:GeneralBinarySpaceTree
BoundProjection	mlpack/optimization/lbfgs/optimization_utils.h	/^  static void BoundProjection(Matrix *data, double lo, double hi) {$/;"	f	class:OptUtils
Boundary	include/fastlib/col/rangeset.h	/^  typedef TBoundary Boundary;$/;"	t	class:RangeSet
Broadcast	include/fastlib/par/thread.h	/^  void Broadcast() {$/;"	f	class:WaitCondition
BuildCovariance_	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::BuildCovariance_$/;"	f	class:RidgeRegression
BuildDesignMatrixFromIndexSet_	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::BuildDesignMatrixFromIndexSet_$/;"	f	class:RidgeRegression
C1	mlpack/kde/inverse_normal_cdf.h	52;"	d
C2	mlpack/kde/inverse_normal_cdf.h	53;"	d
C3	mlpack/kde/inverse_normal_cdf.h	54;"	d
C4	mlpack/kde/inverse_normal_cdf.h	55;"	d
C5	mlpack/kde/inverse_normal_cdf.h	56;"	d
C6	mlpack/kde/inverse_normal_cdf.h	57;"	d
CC_ASSIGNMENT_OPERATOR	include/fastlib/base/deprecated.h	68;"	d
COLLECTIONS_HEAP_H	include/fastlib/col/heap.h	41;"	d
COLLECTIONS_STRING_H	include/fastlib/col/col_string.h	41;"	d
COL_ARRAYLIST_H	include/fastlib/col/arraylist.h	40;"	d
COL_FASTALLOC_H	include/fastlib/col/fastalloc.h	41;"	d
COL_INTMAP_H	include/fastlib/col/intmap.h	39;"	d
COL_QUEUE_H	include/fastlib/col/queue.h	39;"	d
COL_RANGESET_H	include/fastlib/col/rangeset.h	39;"	d
COMMA	include/fastlib/base/common.h	76;"	d
COMPILER_CAST	include/fastlib/base/compiler.h	319;"	d
COMPILER_CAST	include/fastlib/base/compiler.h	321;"	d
COMPILER_DEPRECATED	include/fastlib/base/compiler.h	226;"	d
COMPILER_DEPRECATED	include/fastlib/base/compiler.h	228;"	d
COMPILER_DEPRECATED_MSG	include/fastlib/base/compiler.h	244;"	d
COMPILER_DEPRECATED_MSG	include/fastlib/base/compiler.h	246;"	d
COMPILER_FUNCTIONAL	include/fastlib/base/compiler.h	201;"	d
COMPILER_FUNCTIONAL	include/fastlib/base/compiler.h	203;"	d
COMPILER_NOINLINE	include/fastlib/base/deprecated.h	56;"	d
COMPILER_NORETURN	include/fastlib/base/deprecated.h	55;"	d
COMPILER_NO_INLINE	include/fastlib/base/compiler.h	212;"	d
COMPILER_NO_INLINE	include/fastlib/base/compiler.h	214;"	d
COMPILER_NO_RETURN	include/fastlib/base/compiler.h	153;"	d
COMPILER_NO_RETURN	include/fastlib/base/compiler.h	155;"	d
COMPILER_PRINTF	include/fastlib/base/compiler.h	177;"	d
COMPILER_PRINTF	include/fastlib/base/compiler.h	180;"	d
CONST_REF	include/fastlib/base/compiler.h	342;"	d
CONST_REF	include/fastlib/base/compiler.h	344;"	d
CONTINUOUS	include/fastlib/data/dataset.h	/^      CONTINUOUS,$/;"	e	enum:DatasetFeature::Type
C_	mlpack/svm/svm.h	/^    double C_;$/;"	m	struct:SVM::PARAMETERS
CalCosines	mlpack/quicsvd/cosine_tree.cc	/^void CosineNode::CalCosines(const Vector& center, $/;"	f	class:CosineNode
CalStats	mlpack/quicsvd/cosine_tree.cc	/^void CosineNode::CalStats() {$/;"	f	class:CosineNode
CalcBias_	mlpack/svm/smo.h	/^void SMO<TKernel>::CalcBias_() {$/;"	f	class:SMO
CalcKernelValue_	mlpack/svm/smo.h	/^  double CalcKernelValue_(index_t i, index_t j) {$/;"	f	class:SMO
CalcMultiplicativeNormConstant	include/fastlib/math/kernel.h	/^  double CalcMultiplicativeNormConstant(index_t dims) const {$/;"	f	class:GaussianStarKernel
CalcNormConstant	include/fastlib/math/kernel.h	/^  double CalcNormConstant(index_t dims) const {$/;"	f	class:EpanKernel
CalcNormConstant	include/fastlib/math/kernel.h	/^  double CalcNormConstant(index_t dims) const {$/;"	f	class:GaussianKernel
CalcNormConstant	include/fastlib/math/kernel.h	/^  double CalcNormConstant(index_t dims) const {$/;"	f	class:GaussianStarKernel
Calculate	include/fastlib/math/math_lib_impl.h	/^    static double Calculate(double d) {$/;"	f	struct:math__private::ZPowAbsImpl
Calculate	include/fastlib/math/math_lib_impl.h	/^    static double Calculate(double d) {$/;"	f	struct:math__private::ZPowImpl
CalculateEmissionProb	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::CalculateEmissionProb(const Matrix& seq, const ArrayList<Vector>& means, const ArrayList<Matrix>& inv_covs, const Vector& det, Matrix* emis_prob) {$/;"	f	class:GaussianHMM
CalculateEmissionProb	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::CalculateEmissionProb(const Matrix& seq, const ArrayList<MixtureGauss>& mixs, Matrix* emis_prob) {$/;"	f	class:MixtureofGaussianHMM
CalculateInverse	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::CalculateInverse() {$/;"	f	class:GaussianHMM
CalculateMaxDistanceSq	include/fastlib/tree/bounds.h	/^  double CalculateMaxDistanceSq() const {$/;"	f	class:DHrectBound
CalculateMidpoint	include/fastlib/tree/bounds.h	/^  void CalculateMidpoint(Point *centroid) const {$/;"	f	class:DBallBound
CalculateMidpoint	include/fastlib/tree/bounds.h	/^  void CalculateMidpoint(Vector *centroid) const {$/;"	f	class:DHrectBound
CalculateMidpointOverwrite	include/fastlib/tree/bounds.h	/^  void CalculateMidpointOverwrite(Vector *centroid) const {$/;"	f	class:DHrectBound
Center	mlpack/fastica/lin_alg.h	/^  void Center(Matrix X, Matrix* X_centered) {$/;"	f	namespace:linalg__private
ChildIndex_	include/fastlib/col/heap.h	/^  static index_t ChildIndex_(index_t i) {$/;"	f	class:MinHeap
CholeskyInit	include/fastlib/la/uselapack.h	/^  inline success_t CholeskyInit(const Matrix &A, Matrix *U) {$/;"	f	namespace:la
ChooseCenter	mlpack/quicsvd/cosine_tree.cc	/^void CosineNode::ChooseCenter(Vector* center) {$/;"	f	class:CosineNode
ClampNonNegative	include/fastlib/math/math_lib.h	/^  inline double ClampNonNegative(double d) {$/;"	f	namespace:math
ClampNonPositive	include/fastlib/math/math_lib.h	/^  inline double ClampNonPositive(double d) {$/;"	f	namespace:math
ClampRange	include/fastlib/math/math_lib.h	/^  inline double ClampRange(double value, double range_min, double range_max) {$/;"	f	namespace:math
Classifier	include/fastlib/data/crossvalidation.h	/^  typedef TClassifier Classifier;$/;"	t	class:SimpleCrossValidator
Classify	mlpack/naive_bayes/simple_nbc.h	/^  void Classify(const Matrix& test_data, Vector *results){$/;"	f	class:SimpleNaiveBayesClassifier
Clear	include/fastlib/col/arraylist.h	/^  void Clear() {$/;"	f	class:ArrayList
Clear	include/fastlib/col/queue.h	/^  void Clear() {$/;"	f	class:Queue
ClearPostponed	mlpack/kde/kde_stat.h	/^  void ClearPostponed() {      $/;"	f	class:KdeStat
ClearPostponed	mlpack/kde/kde_stat.h	/^  void ClearPostponed() {      $/;"	f	class:VKdeStat
Close	include/fastlib/file/textfile.h	/^  success_t Close() {$/;"	f	class:TextWriter
Close	include/fastlib/file/textfile.h	/^  void Close() {$/;"	f	class:TextLineReader
Cn_	mlpack/svm/smo.h	/^  double Cn_; \/\/ C_-, for SVM_C, y==-1$/;"	m	class:SMO
Cn_	mlpack/svm/svm.h	/^    double Cn_; \/\/ C for y==-1$/;"	m	struct:SVM::PARAMETERS
ColVector	mlpack/fastica/lin_alg.h	/^  Matrix* ColVector(index_t n, double value, Matrix *col_vector) {$/;"	f	namespace:linalg__private
CombineBounds	mlpack/kde/gen_metric_tree_impl.h	/^  void CombineBounds(Matrix &matrix, TMetricTree *node, TMetricTree *left,$/;"	f	namespace:tree_gen_metric_tree_private
CompareCosineNode	mlpack/quicsvd/cosine_tree.h	/^class CompareCosineNode {$/;"	c
CompareNoCase	include/fastlib/col/col_string.h	/^  int CompareNoCase(const char *s) const {$/;"	f	class:String
CompareTo	include/fastlib/col/col_string.h	/^  int CompareTo(const String& other) const$/;"	f	class:String
CompareTo	include/fastlib/col/col_string.h	/^  int CompareTo(const char* s) const$/;"	f	class:String
Compute	mlpack/kde/dualtree_kde.h	/^  void Compute(Vector *results) {$/;"	f	class:DualtreeKde
Compute	mlpack/kde/dualtree_kde_cv.h	/^  double Compute() {$/;"	f	class:DualtreeKdeCV
Compute	mlpack/kde/dualtree_vkde.h	/^  void Compute(Vector *results) {$/;"	f	class:DualtreeVKde
Compute	mlpack/kde/fft_kde.h	/^  void Compute() {$/;"	f	class:FFTKde
Compute	mlpack/kde/fgt_kde.h	/^  void Compute() {$/;"	f	class:FGTKde
Compute	mlpack/kde/inverse_normal_cdf.h	/^  static double Compute(double p) {$/;"	f	class:InverseNormalCDF
Compute	mlpack/kde/naive_kde.h	/^  void Compute() {$/;"	f	class:NaiveKde
Compute	mlpack/kde/naive_kde.h	/^  void Compute(Vector *results) {$/;"	f	class:NaiveKde
Compute	mlpack/kde/original_ifgt.h	/^  void Compute() {$/;"	f	class:OriginalIFGT
Compute	mlpack/range_search/naive_ortho_range_search.h	/^  void Compute(const GenMatrix<T> &low_coord_limits, $/;"	f	class:NaiveOrthoRangeSearch
Compute	mlpack/range_search/ortho_range_search.h	/^  void Compute(GenMatrix<T> &set_of_low_coord_limits,$/;"	f	class:OrthoRangeSearch
ComputeBFGS_	mlpack/optimization/lbfgs/lbfgs_impl.h	/^success_t Lbfgs<OptimizedFunction>::ComputeBFGS_(double *step, Matrix &grad, index_t memory) {$/;"	f	class:Lbfgs
ComputeBaseCase_	mlpack/allkfn/allkfn.h	/^  void ComputeBaseCase_(TreeType* query_node, TreeType* reference_node) {$/;"	f	class:AllkFN
ComputeBaseCase_	mlpack/allknn/allknn.h	/^  void ComputeBaseCase_(TreeType* query_node, TreeType* reference_node) {$/;"	f	class:AllkNN
ComputeCenters	mlpack/kde/original_ifgt.h	/^  double ComputeCenters() {$/;"	f	class:OriginalIFGT
ComputeDirectionalDerivatives	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  void ComputeDirectionalDerivatives(const Vector &x, $/;"	f	class:InversePowDistGradientKernelAux
ComputeDirectionalDerivatives	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  void ComputeDirectionalDerivatives(const Vector &x, $/;"	f	class:InversePowDistKernelAux
ComputeDirectionalDerivatives	mlpack/series_expansion/kernel_aux.h	/^  void ComputeDirectionalDerivatives(const Vector &x, $/;"	f	class:EpanKernelAux
ComputeDirectionalDerivatives	mlpack/series_expansion/kernel_aux.h	/^  void ComputeDirectionalDerivatives(const Vector &x, $/;"	f	class:GaussianKernelAux
ComputeDirectionalDerivatives	mlpack/series_expansion/kernel_aux.h	/^  void ComputeDirectionalDerivatives(const Vector &x, $/;"	f	class:GaussianKernelMultAux
ComputeDualNeighborsRecursion_	mlpack/allknn/allknn.h	/^  void ComputeDualNeighborsRecursion_(TreeType* query_node, TreeType* reference_node, $/;"	f	class:AllkNN
ComputeFactorials	mlpack/series_expansion/mult_series_expansion_aux.h	/^  void ComputeFactorials() {$/;"	f	class:MultSeriesExpansionAux
ComputeFactorials	mlpack/series_expansion/series_expansion_aux.h	/^  void ComputeFactorials() {$/;"	f	class:SeriesExpansionAux
ComputeFeasibilityError	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::ComputeFeasibilityError(Matrix &coordinates, double *error) {$/;"	f	class:MaxFurthestNeighbors
ComputeFeasibilityError	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::ComputeFeasibilityError(Matrix &coordinates, double *error) {$/;"	f	class:MaxVariance
ComputeGeneralKernelPCA	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::ComputeGeneralKernelPCA(DISTANCEKERNEL kernel,$/;"	f	class:KernelPCA
ComputeGradient	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::ComputeGradient(Matrix &coordinates, Matrix *gradient) {$/;"	f	class:MaxFurthestNeighbors
ComputeGradient	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::ComputeGradient(Matrix &coordinates, Matrix *gradient) {$/;"	f	class:MaxVariance
ComputeLLE	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::ComputeLLE(index_t num_of_eigenvalues,$/;"	f	class:KernelPCA
ComputeLSCVScore	mlpack/kde/bandwidth_lscv.h	/^  static void ComputeLSCVScore(const Matrix &references,$/;"	f	class:BandwidthLSCV
ComputeLagrangian	mlpack/mvu/mvu_objectives_impl.h	/^double MaxFurthestNeighbors::ComputeLagrangian(Matrix &coordinates) {$/;"	f	class:MaxFurthestNeighbors
ComputeLagrangian	mlpack/mvu/mvu_objectives_impl.h	/^double MaxVariance::ComputeLagrangian(Matrix &coordinates) {$/;"	f	class:MaxVariance
ComputeLinearModel_	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::ComputeLinearModel_$/;"	f	class:RidgeRegression
ComputeLocalOptimumBFGS	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::ComputeLocalOptimumBFGS() {$/;"	f	class:Lbfgs
ComputeLogLikelihood	mlpack/hmm/discreteHMM.cc	/^double DiscreteHMM::ComputeLogLikelihood(const Vector& data_seq) const {$/;"	f	class:DiscreteHMM
ComputeLogLikelihood	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::ComputeLogLikelihood(const ArrayList<Vector>& list_data_seq, ArrayList<double>* list_likelihood) const {$/;"	f	class:DiscreteHMM
ComputeLogLikelihood	mlpack/hmm/gaussianHMM.cc	/^double GaussianHMM::ComputeLogLikelihood(const Matrix& data_seq) const {$/;"	f	class:GaussianHMM
ComputeLogLikelihood	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::ComputeLogLikelihood(const ArrayList<Matrix>& list_data_seq, ArrayList<double>* list_likelihood) const {$/;"	f	class:GaussianHMM
ComputeLogLikelihood	mlpack/hmm/mixgaussHMM.cc	/^double MixtureofGaussianHMM::ComputeLogLikelihood(const Matrix& data_seq) const {$/;"	f	class:MixtureofGaussianHMM
ComputeLogLikelihood	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::ComputeLogLikelihood(const ArrayList<Matrix>& list_data_seq, ArrayList<double>* list_likelihood) const {$/;"	f	class:MixtureofGaussianHMM
ComputeLowerMappingIndex	mlpack/series_expansion/mult_series_expansion_aux.h	/^  void ComputeLowerMappingIndex() {$/;"	f	class:MultSeriesExpansionAux
ComputeLowerMappingIndex	mlpack/series_expansion/series_expansion_aux.h	/^  void ComputeLowerMappingIndex() {$/;"	f	class:SeriesExpansionAux
ComputeMaximumRelativeError	mlpack/kde/naive_kde.h	/^  void ComputeMaximumRelativeError(const Vector &density_estimates) {$/;"	f	class:NaiveKde
ComputeMultiindexCombination	mlpack/series_expansion/mult_series_expansion_aux.h	/^  void ComputeMultiindexCombination() {$/;"	f	class:MultSeriesExpansionAux
ComputeMultiindexCombination	mlpack/series_expansion/series_expansion_aux.h	/^  void ComputeMultiindexCombination() {$/;"	f	class:SeriesExpansionAux
ComputeMultiindexPosition	mlpack/series_expansion/mult_series_expansion_aux.h	/^  int ComputeMultiindexPosition(const ArrayList<int> &multiindex) const {$/;"	f	class:MultSeriesExpansionAux
ComputeMultiindexPosition	mlpack/series_expansion/series_expansion_aux.cc	/^int SeriesExpansionAux::ComputeMultiindexPosition$/;"	f	class:SeriesExpansionAux
ComputeMultipoleCoeffs_	mlpack/kde/fgt_kde.h	/^  void ComputeMultipoleCoeffs_(Matrix &mcoeffs, int dim,$/;"	f	class:FGTKde
ComputeNaive	mlpack/allkfn/allkfn.h	/^  void ComputeNaive(ArrayList<index_t>* resulting_neighbors,$/;"	f	class:AllkFN
ComputeNaive	mlpack/allknn/allknn.h	/^  void ComputeNaive(ArrayList<index_t>* resulting_neighbors,$/;"	f	class:AllkNN
ComputeNaive	mlpack/allnn/allnn.h	/^  void ComputeNaive(GenVector<index_t>* results, GenVector<double>* distances) {$/;"	f	class:AllNN
ComputeNaive	mlpack/disk_allnn/disk_allnn.h	/^  void ComputeNaive(GenVector<index_t>* results, GenVector<double>* distances) {$/;"	f	class:DiskAllNN
ComputeNeighborhoods	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::ComputeNeighborhoods() {$/;"	f	class:KernelPCA
ComputeNeighbors	mlpack/allkfn/allkfn.h	/^  void ComputeNeighbors(ArrayList<index_t>* resulting_neighbors,$/;"	f	class:AllkFN
ComputeNeighbors	mlpack/allknn/allknn.h	/^  void ComputeNeighbors(ArrayList<index_t>* resulting_neighbors,$/;"	f	class:AllkNN
ComputeNeighbors	mlpack/allnn/allnn.h	/^  void ComputeNeighbors(GenVector<index_t>* results, GenVector<double>* distances) {$/;"	f	class:AllNN
ComputeNeighbors	mlpack/disk_allnn/disk_allnn.h	/^  void ComputeNeighbors(GenVector<index_t>* results, GenVector<double>* distances) {$/;"	f	class:DiskAllNN
ComputeNeighborsRecursion_	mlpack/allkfn/allkfn.h	/^  void ComputeNeighborsRecursion_ (TreeType* query_node, $/;"	f	class:AllkFN
ComputeObjective	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::ComputeObjective(Matrix &coordinates, $/;"	f	class:MaxFurthestNeighbors
ComputeObjective	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::ComputeObjective(Matrix &coordinates, double *objective) {$/;"	f	class:MaxVariance
ComputePartialDerivative	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  double ComputePartialDerivative(const Matrix &derivative_map,$/;"	f	class:InversePowDistGradientKernelAux
ComputePartialDerivative	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  double ComputePartialDerivative(const Matrix &derivative_map,$/;"	f	class:InversePowDistKernelAux
ComputePartialDerivative	mlpack/series_expansion/kernel_aux.h	/^  double ComputePartialDerivative(const Matrix &derivative_map,$/;"	f	class:EpanKernelAux
ComputePartialDerivative	mlpack/series_expansion/kernel_aux.h	/^  double ComputePartialDerivative(const Matrix &derivative_map,$/;"	f	class:GaussianKernelAux
ComputePartialDerivative	mlpack/series_expansion/kernel_aux.h	/^  double ComputePartialDerivative(const Matrix &derivative_map,$/;"	f	class:GaussianKernelMultAux
ComputeProgress_	mlpack/optimization/lbfgs/lbfgs_impl.h	/^std::string Lbfgs<OptimizedFunction>::ComputeProgress_() {$/;"	f	class:Lbfgs
ComputeSVD	mlpack/quicsvd/quicsvd.cc	/^void QuicSVD::ComputeSVD(Vector* s, Matrix* U, Matrix* VT) {$/;"	f	class:QuicSVD
ComputeSingleNeighborsRecursion_	mlpack/allknn/allknn.h	/^  void ComputeSingleNeighborsRecursion_(index_t point_id, $/;"	f	class:AllkNN
ComputeSpectralRegression	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::ComputeSpectralRegression(DISTANCEKERNEL kernel,$/;"	f	class:KernelPCA
ComputeSquareError	mlpack/regression/ridge_regression_impl.h	/^double RidgeRegression::ComputeSquareError() {$/;"	f	class:RidgeRegression
ComputeTraversalMapping	mlpack/series_expansion/mult_series_expansion_aux.h	/^  void ComputeTraversalMapping() {$/;"	f	class:MultSeriesExpansionAux
ComputeUnweightedCoeffs_	mlpack/kde/original_ifgt.h	/^  void ComputeUnweightedCoeffs_(Vector &taylor_coeffs) {$/;"	f	class:OriginalIFGT
ComputeUpperMappingIndex	mlpack/series_expansion/mult_series_expansion_aux.h	/^  void ComputeUpperMappingIndex() {$/;"	f	class:MultSeriesExpansionAux
ComputeUpperMappingIndex	mlpack/series_expansion/series_expansion_aux.h	/^  void ComputeUpperMappingIndex() {$/;"	f	class:SeriesExpansionAux
ComputeViterbiStateSequence	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::ComputeViterbiStateSequence(const Vector& data_seq, Vector* state_seq) const {$/;"	f	class:DiscreteHMM
ComputeViterbiStateSequence	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::ComputeViterbiStateSequence(const Matrix& data_seq, Vector* state_seq) const {$/;"	f	class:GaussianHMM
ComputeViterbiStateSequence	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::ComputeViterbiStateSequence(const Matrix& data_seq, Vector* state_seq) const {$/;"	f	class:MixtureofGaussianHMM
ComputeWeightedCoeffs_	mlpack/kde/original_ifgt.h	/^  void ComputeWeightedCoeffs_(Vector &taylor_coeffs) {$/;"	f	class:OriginalIFGT
ComputeWolfeStep_	mlpack/optimization/lbfgs/lbfgs_impl.h	/^success_t Lbfgs<OptimizedFunction>::ComputeWolfeStep_(double *step, Matrix &direction) {$/;"	f	class:Lbfgs
ConsolidateNeighbors	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVarianceUtils::ConsolidateNeighbors(ArrayList<index_t> &from_tree_ind,$/;"	f	class:MaxVarianceUtils
Construct	include/fastlib/base/ccmem.h	/^  inline T **Construct(T **array, size_t elems = 1) {$/;"	f	namespace:mem
Construct	include/fastlib/base/ccmem.h	/^  inline T *Construct(T *array, size_t elems) {$/;"	f	namespace:mem
Construct	include/fastlib/base/ccmem.h	/^  inline T *Construct(T *ptr) {$/;"	f	namespace:mem
Construct	include/fastlib/base/deprecated.h	/^  inline T *Construct(T *ptr, const U &init) {$/;"	f	namespace:mem
Construct	include/fastlib/base/otrav.h	/^  inline T *Construct(T *array, size_t elems = 1) {$/;"	f	namespace:ot
ConstructAll	include/fastlib/base/deprecated.h	/^  inline T *ConstructAll(T *array, const U &init, size_t elems) {$/;"	f	namespace:mem
ConstructAll	include/fastlib/base/deprecated.h	/^  inline T *ConstructAll(T *array, size_t elems) {$/;"	f	namespace:mem
Contains	include/fastlib/math/math_lib.h	/^  bool Contains(double d) const {$/;"	f	struct:DRange
Contains	include/fastlib/tree/bounds.h	/^  bool Contains(const Point& point) const {$/;"	f	class:DBallBound
Contains	include/fastlib/tree/bounds.h	/^  bool Contains(const Vector& point) const {$/;"	f	class:DHrectBound
Contains	include/fastlib/tree/bounds.h	/^  bool Contains(const Vector& point, const Vector& box) const {$/;"	f	class:DHrectBound
Context	include/fastlib/par/grain.h	/^  typedef TContext Context;$/;"	t	class:ThreadedGrainRunner
ConvolveField	mlpack/series_expansion/farfield_expansion_impl.h	/^double FarFieldExpansion<TKernelAux>::ConvolveField$/;"	f	class:FarFieldExpansion
ConvolveField	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^double MultFarFieldExpansion<TKernelAux>::ConvolveField$/;"	f	class:MultFarFieldExpansion
Copier	include/fastlib/base/otrav_impl.h	/^    Copier(T *dest, const T *src) {$/;"	f	class:ot__private::Copier
Copier	include/fastlib/base/otrav_impl.h	/^    Copier(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Copier
Copier	include/fastlib/base/otrav_impl.h	/^  class Copier {$/;"	c	namespace:ot__private
Copy	include/fastlib/base/ccmem.h	/^  inline T *Copy(T *dest, const T *src, size_t elems = 1) {$/;"	f	namespace:mem
Copy	include/fastlib/base/ccmem.h	/^  inline T *Copy(T *dest, const U *src, size_t elems = 1) {$/;"	f	namespace:mem
Copy	include/fastlib/base/deprecated.h	/^  inline T *Copy(T *dest, const U *src, size_t elems = 1) {$/;"	f	namespace:mem
Copy	include/fastlib/base/otrav.h	/^  void Copy(const T &src, T *dest) {$/;"	f	namespace:ot
Copy	include/fastlib/col/arraylist.h	/^  void Copy(const Elem *src, index_t size) {$/;"	f	class:ArrayList
Copy	include/fastlib/col/col_string.h	/^  void Copy(const char *str) {$/;"	f	class:String
Copy	include/fastlib/col/col_string.h	/^  void Copy(const char *str_region_begin, index_t len) {$/;"	f	class:String
Copy	include/fastlib/la/matrix.h	/^  void Copy(const GenMatrix& other) {$/;"	f	class:GenMatrix
Copy	include/fastlib/la/matrix.h	/^  void Copy(const GenVector& other) {$/;"	f	class:GenVector
Copy	include/fastlib/la/matrix.h	/^  void Copy(const T *doubles, index_t in_length) {$/;"	f	class:GenVector
Copy	include/fastlib/la/matrix.h	/^  void Copy(const T *ptr_in, index_t n_rows_in, index_t n_cols_in) {$/;"	f	class:GenMatrix
CopyBytes	include/fastlib/base/ccmem.h	/^  inline T *CopyBytes(T *dest, const U *src, size_t bytes) {$/;"	f	namespace:mem
CopyBytes	include/fastlib/base/deprecated.h	/^  inline T *CopyBytes(T *dest, const U *src, size_t bytes) {$/;"	f	namespace:mem
CopyColumnFromMat	include/fastlib/la/matrix.h	/^   void CopyColumnFromMat(index_t col1, index_t col2, GenMatrix<T> &mat) {$/;"	f	class:GenMatrix
CopyColumnFromMat	include/fastlib/la/matrix.h	/^   void CopyColumnFromMat(index_t col1, index_t col2, index_t ncols, GenMatrix<T> &mat) {$/;"	f	class:GenMatrix
CopyConstruct	include/fastlib/base/ccmem.h	/^  inline T **CopyConstruct(T **dest, const T **src, size_t elems = 1) {$/;"	f	namespace:mem
CopyConstruct	include/fastlib/base/ccmem.h	/^  inline T *CopyConstruct(T *dest, const U *src) {$/;"	f	namespace:mem
CopyConstruct	include/fastlib/base/ccmem.h	/^  inline T *CopyConstruct(T *dest, const U *src, size_t elems) {$/;"	f	namespace:mem
CopyConstruct	include/fastlib/base/otrav.h	/^  inline T *CopyConstruct(T *dest, const T *src, size_t elems = 1) {$/;"	f	namespace:ot
CopyCoordinates	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::CopyCoordinates(Matrix *result) {$/;"	f	class:Lbfgs
CopyMatrix	include/fastlib/data/dataset.h	/^  void CopyMatrix(const Matrix& matrix_in) {$/;"	f	class:Dataset
CopyValues	include/fastlib/base/ccmem.h	/^  inline T* \/*inline*\/ CopyValues(T *dest, const U *src, size_t elems=1) {$/;"	f	namespace:mem
CopyValues	include/fastlib/la/matrix.h	/^  void CopyValues(const GenMatrix& other) {$/;"	f	class:GenMatrix
CopyValues	include/fastlib/la/matrix.h	/^  void CopyValues(const GenVector& other) {$/;"	f	class:GenVector
CopyValues	include/fastlib/la/matrix.h	/^  void CopyValues(const T *src_ptr) {$/;"	f	class:GenVector
CopyVectorExceptOneIndex_	mlpack/regression/ridge_regression_util.h	/^  static void CopyVectorExceptOneIndex_(const GenVector<T> &source,$/;"	f	class:RidgeRegressionUtil
CopyVectorToColumn	include/fastlib/la/matrix.h	/^   void CopyVectorToColumn(index_t col, GenVector<T> &vec) {$/;"	f	class:GenMatrix
CosineNode	mlpack/quicsvd/cosine_tree.cc	/^CosineNode::CosineNode(CosineNode& parent, $/;"	f	class:CosineNode
CosineNode	mlpack/quicsvd/cosine_tree.cc	/^CosineNode::CosineNode(const Matrix& A) {$/;"	f	class:CosineNode
CosineNode	mlpack/quicsvd/cosine_tree.h	/^class CosineNode {$/;"	c
CosineNodeQueue	mlpack/quicsvd/quicsvd.h	/^    CompareCosineNode> CosineNodeQueue;$/;"	t	class:QuicSVD
CosineNodeTest	mlpack/quicsvd/cosine_tree.h	/^  CosineNodeTest() {$/;"	f	class:CosineNodeTest
CosineNodeTest	mlpack/quicsvd/cosine_tree.h	/^class CosineNodeTest {$/;"	c
Cp_	mlpack/svm/smo.h	/^  double Cp_; \/\/ C_+, for SVM_C, y==1$/;"	m	class:SMO
Cp_	mlpack/svm/svm.h	/^    double Cp_; \/\/ C for y==1$/;"	m	struct:SVM::PARAMETERS
CreateIndices	mlpack/quicsvd/cosine_tree.cc	/^void CosineNode::CreateIndices(ArrayList<int>* indices) {$/;"	f	class:CosineNode
CrossValidatedRegression	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::CrossValidatedRegression(double lambda_min, $/;"	f	class:RidgeRegression
Current	include/fastlib/file/textfile.h	/^  const String& Current() const {$/;"	f	class:TextTokenizer
CurrentType	include/fastlib/file/textfile.h	/^  TokenType CurrentType() const {$/;"	f	class:TextTokenizer
D1	mlpack/kde/inverse_normal_cdf.h	59;"	d
D2	mlpack/kde/inverse_normal_cdf.h	60;"	d
D3	mlpack/kde/inverse_normal_cdf.h	61;"	d
D4	mlpack/kde/inverse_normal_cdf.h	62;"	d
DATASET_SACLER_H	mlpack/kde/dataset_scaler.h	42;"	d
DATA_AUX_H	mlpack/range_search/data_aux.h	2;"	d
DATA_CROSSVALIDATION	include/fastlib/data/crossvalidation.h	39;"	d
DATA_DATASET_H	include/fastlib/data/dataset.h	39;"	d
DBallBound	include/fastlib/tree/bounds.h	/^class DBallBound {$/;"	c
DEBUG_APPROX_DOUBLE	include/fastlib/base/debug.h	392;"	d
DEBUG_ASSERT	include/fastlib/base/debug.h	240;"	d
DEBUG_ASSERT_MSG	include/fastlib/base/debug.h	226;"	d
DEBUG_BOUNDS	include/fastlib/base/debug.h	303;"	d
DEBUG_BOUNDS_INCLUSIVE	include/fastlib/base/debug.h	320;"	d
DEBUG_DESTRUCT_OK	include/fastlib/base/otrav.h	1090;"	d
DEBUG_ERROR_IF	include/fastlib/base/debug.h	211;"	d
DEBUG_ERROR_MSG_IF	include/fastlib/base/debug.h	196;"	d
DEBUG_ERR_IF	include/fastlib/base/debug.h	213;"	d
DEBUG_ERR_MSG_IF	include/fastlib/base/debug.h	199;"	d
DEBUG_GOT_HERE	include/fastlib/base/deprecated.h	62;"	d
DEBUG_INIT_OK	include/fastlib/base/otrav.h	978;"	d
DEBUG_MATSIZE	include/fastlib/la/uselapack.h	47;"	d
DEBUG_MATSQUARE	include/fastlib/la/uselapack.h	50;"	d
DEBUG_MODIFY_OK	include/fastlib/base/otrav.h	1037;"	d
DEBUG_MSG	include/fastlib/base/deprecated.h	60;"	d
DEBUG_ONLY	include/fastlib/base/debug.h	71;"	d
DEBUG_ONLY	include/fastlib/base/debug.h	73;"	d
DEBUG_POISON_PTR	include/fastlib/base/debug.h	284;"	d
DEBUG_SAME_DOUBLE	include/fastlib/base/debug.h	374;"	d
DEBUG_SAME_INT	include/fastlib/base/debug.h	337;"	d
DEBUG_SAME_SIZE	include/fastlib/base/debug.h	357;"	d
DEBUG_VECSIZE	include/fastlib/la/uselapack.h	45;"	d
DEBUG_WARNING_IF	include/fastlib/base/debug.h	181;"	d
DEBUG_WARNING_MSG_IF	include/fastlib/base/debug.h	162;"	d
DEBUG_WARN_IF	include/fastlib/base/debug.h	183;"	d
DEBUG_WARN_MSG_IF	include/fastlib/base/debug.h	165;"	d
DEFINE_ALL_COMPARATORS	include/fastlib/base/deprecated.h	70;"	d
DEFINE_ALL_COMPARATORS_HETERO	include/fastlib/base/deprecated.h	73;"	d
DEFINE_INEQUALITY_COMPARATORS	include/fastlib/base/deprecated.h	69;"	d
DEFINE_INEQUALITY_COMPARATORS_HETERO	include/fastlib/base/deprecated.h	71;"	d
DEFLATION	mlpack/fastica/fastica.h	58;"	d
DETACHED	include/fastlib/par/thread.h	/^  enum {UNINIT, READY, ATTACHED, DETACHED, DONE} status_;$/;"	e	enum:Thread::__anon18
DHrectBound	include/fastlib/tree/bounds.h	/^class DHrectBound {$/;"	c
DISK_ALLNN_H	mlpack/disk_allnn/disk_allnn.h	9;"	d
DONE	include/fastlib/par/thread.h	/^  enum {UNINIT, READY, ATTACHED, DETACHED, DONE} status_;$/;"	e	enum:Thread::__anon18
DOUBLE	include/fastlib/file/textfile.h	/^    DOUBLE,$/;"	e	enum:TextTokenizer::TokenType
DRange	include/fastlib/math/math_lib.h	/^  DRange(double lo_in, double hi_in)$/;"	f	struct:DRange
DRange	include/fastlib/math/math_lib.h	/^struct DRange {$/;"	s
DUALTREE_KDE_COMMON_H	mlpack/kde/dualtree_kde_common.h	33;"	d
DUALTREE_KDE_CV_COMMON_H	mlpack/kde/dualtree_kde_cv_common.h	33;"	d
DUALTREE_KDE_CV_H	mlpack/kde/dualtree_kde_cv.h	91;"	d
DUALTREE_KDE_H	mlpack/kde/dualtree_kde.h	94;"	d
DUALTREE_VKDE_H	mlpack/kde/dualtree_vkde.h	90;"	d
Dataset	include/fastlib/data/dataset.h	/^class Dataset {$/;"	c
Dataset	include/fastlib/tree/spacetree.h	/^  typedef TDataset Dataset;$/;"	t	class:BinarySpaceTree
Dataset	mlpack/kde/general_spacetree.h	/^  typedef TDataset Dataset;$/;"	t	class:GeneralBinarySpaceTree
DatasetFeature	include/fastlib/data/dataset.h	/^class DatasetFeature {$/;"	c
DatasetInfo	include/fastlib/data/dataset.h	/^class DatasetInfo {$/;"	c
DatasetScaler	mlpack/kde/dataset_scaler.h	/^class DatasetScaler {$/;"	c
DebugPoison	include/fastlib/base/ccmem.h	/^  inline T *DebugPoison(T *array, size_t elems) {$/;"	f	namespace:mem
DebugPoison	include/fastlib/base/ccmem.h	/^  inline T *DebugPoison(T *ptr) {$/;"	f	namespace:mem
DebugPoisonBytes	include/fastlib/base/ccmem.h	/^  inline T *DebugPoisonBytes(T *array, size_t bytes) {$/;"	f	namespace:mem
Decode	mlpack/hmm/discreteHMM.cc	/^double DiscreteHMM::Decode(const Vector& seq, const Matrix& trans, const Matrix& emis, Matrix* pstates, Matrix* fs, Matrix* bs, Vector* scales) {$/;"	f	class:DiscreteHMM
Decode	mlpack/hmm/gaussianHMM.cc	/^double GaussianHMM::Decode(const Matrix& trans, const Matrix& emis_prob, Matrix* pstates, Matrix* fs, Matrix* bs, Vector* scales) {$/;"	f	class:GaussianHMM
Decode	mlpack/hmm/gaussianHMM.cc	/^double GaussianHMM::Decode(int L, const Matrix& trans, const Matrix& emis_prob, Matrix* pstates, Matrix* fs, Matrix* bs, Vector* scales) {$/;"	f	class:GaussianHMM
Decode	mlpack/hmm/mixgaussHMM.cc	/^double MixtureofGaussianHMM::Decode(const Matrix& trans, const Matrix& emis_prob, Matrix* pstates, $/;"	f	class:MixtureofGaussianHMM
Decode	mlpack/hmm/mixgaussHMM.cc	/^double MixtureofGaussianHMM::Decode(int L, const Matrix& trans, const Matrix& emis_prob, $/;"	f	class:MixtureofGaussianHMM
DecodeInit	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::DecodeInit(const Vector& data_seq, Matrix* state_prob_mat, Matrix* forward_prob_mat, Matrix* backward_prob_mat, Vector* scale_vec) const {$/;"	f	class:DiscreteHMM
DecodeInit	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::DecodeInit(const Matrix& data_seq, Matrix* state_prob_mat, $/;"	f	class:GaussianHMM
DecodeInit	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::DecodeInit(const Matrix& data_seq, Matrix* state_prob_mat, $/;"	f	class:MixtureofGaussianHMM
DecodeOverwrite	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::DecodeOverwrite(const Vector& data_seq, Matrix* state_prob_mat, Matrix* forward_prob_mat, Matrix* backward_prob_mat, Vector* scale_vec) const {$/;"	f	class:DiscreteHMM
DecodeOverwrite	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::DecodeOverwrite(const Matrix& data_seq, Matrix* state_prob_mat, $/;"	f	class:GaussianHMM
DecodeOverwrite	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::DecodeOverwrite(const Matrix& data_seq, Matrix* state_prob_mat, $/;"	f	class:MixtureofGaussianHMM
DeflationFixedPointICA	mlpack/fastica/fastica.h	/^  int DeflationFixedPointICA(bool stabilization_enabled,$/;"	f	class:FastICA
DeflationGaussFineTuningUpdate_	mlpack/fastica/fastica.h	/^  void DeflationGaussFineTuningUpdate_(index_t n, Matrix X, Vector* w) {$/;"	f	class:FastICA
DeflationGaussUpdate_	mlpack/fastica/fastica.h	/^  void DeflationGaussUpdate_(index_t n, Matrix X, Vector* w) {$/;"	f	class:FastICA
DeflationKurtosisFineTuningUpdate_	mlpack/fastica/fastica.h	/^  void DeflationKurtosisFineTuningUpdate_(index_t n, Matrix X, Vector* w) {$/;"	f	class:FastICA
DeflationKurtosisUpdate_	mlpack/fastica/fastica.h	/^  void DeflationKurtosisUpdate_(index_t n, Matrix X, Vector* w) {$/;"	f	class:FastICA
DeflationLogCoshFineTuningUpdate_	mlpack/fastica/fastica.h	/^  void DeflationLogCoshFineTuningUpdate_(index_t n, Matrix X, Vector* w) {$/;"	f	class:FastICA
DeflationLogCoshUpdate_	mlpack/fastica/fastica.h	/^  void DeflationLogCoshUpdate_(index_t n, Matrix X, Vector* w) {$/;"	f	class:FastICA
DeflationSkewFineTuningUpdate_	mlpack/fastica/fastica.h	/^  void DeflationSkewFineTuningUpdate_(index_t n, Matrix X, Vector* w) {$/;"	f	class:FastICA
DeflationSkewUpdate_	mlpack/fastica/fastica.h	/^  void DeflationSkewUpdate_(index_t n, Matrix X, Vector* w) {$/;"	f	class:FastICA
DenseIntMap	include/fastlib/col/intmap.h	/^class DenseIntMap {$/;"	c
Deserializer	include/fastlib/base/otrav_impl.h	/^    Deserializer(T &obj, FILE *stream) {$/;"	f	class:ot__private::Deserializer
Deserializer	include/fastlib/base/otrav_impl.h	/^  class Deserializer {$/;"	c	namespace:ot__private
Destruct	include/fastlib/base/ccmem.h	/^  inline T **Destruct(T **array, size_t elems = 1) {$/;"	f	namespace:mem
Destruct	include/fastlib/base/ccmem.h	/^  inline T *Destruct(T *array, size_t elems) {$/;"	f	namespace:mem
Destruct	include/fastlib/base/ccmem.h	/^  inline T *Destruct(T *ptr) {$/;"	f	namespace:mem
Destruct	include/fastlib/base/otrav.h	/^  inline T *Destruct(T *array, size_t elems = 1) {$/;"	f	namespace:ot
Destruct	include/fastlib/col/arraylist.h	/^  void Destruct() {$/;"	f	class:ArrayList
Destruct	include/fastlib/col/col_string.h	/^  void Destruct() {$/;"	f	class:String
Destruct	include/fastlib/la/matrix.h	/^  void Destruct() {$/;"	f	class:GenMatrix
Destruct	include/fastlib/la/matrix.h	/^  void Destruct() {$/;"	f	class:GenVector
Destruct	mlpack/allkfn/allkfn.h	/^  void Destruct() {$/;"	f	class:AllkFN
Destruct	mlpack/allkfn/allkfn_test.cc	/^  void Destruct() {$/;"	f	class:TestAllkFN
Destruct	mlpack/allknn/allknn.h	/^  void Destruct() {$/;"	f	class:AllkNN
Destruct	mlpack/allknn/allknn_test.cc	/^  void Destruct() {$/;"	f	class:TestAllkNN
Destruct	mlpack/allnn/allnn.h	/^   void Destruct() {$/;"	f	class:AllNN
Destruct	mlpack/allnn/allnn_test.cc	/^  void Destruct() {$/;"	f	class:TestAllNN
Destruct	mlpack/disk_allnn/disk_allnn_test.cc	/^  void Destruct() {$/;"	f	class:TestDiskAllNN
Destruct	mlpack/infomax_ica/test_infomax_ica.h	/^  void Destruct(){$/;"	f	class:TestInfomaxICA
Destruct	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::Destruct() {$/;"	f	class:KernelPCA
Destruct	mlpack/kernel_pca/kernel_pca_test.cc	/^  void Destruct() {$/;"	f	class:KernelPCATest
Destruct	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::Destruct() {$/;"	f	class:MaxFurthestNeighbors
Destruct	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::Destruct() {$/;"	f	class:MaxVariance
Destruct	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  void Destruct() {$/;"	f	class:TestClassSimpleNBC
Destruct	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::Destruct() {$/;"	f	class:Lbfgs
Destruct	mlpack/regression/ridge_regression_test.cc	/^  void Destruct() {$/;"	f	class:RidgeRegressionTest
DestructAll	include/fastlib/base/deprecated.h	/^  inline T *DestructAll(T *array, size_t elems) {$/;"	f	namespace:mem
Destructor	include/fastlib/base/otrav_impl.h	/^    Destructor(T *obj) {$/;"	f	class:ot__private::Destructor
Destructor	include/fastlib/base/otrav_impl.h	/^  class Destructor {$/;"	c	namespace:ot__private
Detach	include/fastlib/par/thread.h	/^  void Detach() {$/;"	f	class:Thread
DiagMatrixInit	mlpack/fastica/lin_alg.h	/^  Matrix* DiagMatrixInit(index_t n, double value, Matrix *diag_matrix) {$/;"	f	namespace:linalg__private
DiagToVector	mlpack/fastica/lin_alg.h	/^  Vector* DiagToVector(const Matrix* const diag_matrix, Vector* diag_vector) {$/;"	f	namespace:linalg__private
DirectLocalAccumulationCost	mlpack/series_expansion/mult_series_expansion_aux.h	/^  double DirectLocalAccumulationCost(int order) const {$/;"	f	class:MultSeriesExpansionAux
DirectLocalAccumulationCost	mlpack/series_expansion/series_expansion_aux.cc	/^double SeriesExpansionAux::DirectLocalAccumulationCost(int order) const {$/;"	f	class:SeriesExpansionAux
DirectLocalAccumulation_	mlpack/kde/fgt_kde.h	/^  void DirectLocalAccumulation_(ArrayList<int> &rows, int query_box_num,$/;"	f	class:FGTKde
DiscreteDST	mlpack/hmm/discreteDST.h	/^class DiscreteDST {$/;"	c
DiscreteHMM	mlpack/hmm/discreteHMM.h	/^class DiscreteHMM {$/;"	c
DiskAllNN	mlpack/disk_allnn/disk_allnn.h	/^  DiskAllNN() {$/;"	f	class:DiskAllNN
DiskAllNN	mlpack/disk_allnn/disk_allnn.h	/^class DiskAllNN {$/;"	c
Display	mlpack/mog/mog_em.h	/^  void Display(){$/;"	f	class:MoGEM
Display	mlpack/mog/mog_l2e.h	/^  void Display(){$/;"	f	class:MoGL2E
Distance	include/fastlib/tree/bounds.h	/^  static double Distance(const Vector& a, const Vector& b) {$/;"	f	class:LMetric
DistanceSqEuclidean	include/fastlib/la/la.h	/^  inline double DistanceSqEuclidean($/;"	f	namespace:la
DistanceSqEuclidean	include/fastlib/la/la.h	/^  inline double DistanceSqEuclidean(const Vector& x, const Vector& y) {$/;"	f	namespace:la
DoFastICA	mlpack/fastica/fastica.h	/^  int DoFastICA(Matrix* W, Matrix* Y) {$/;"	f	class:FastICA
DoSvmNormalize	mlpack/svm/svm_main.cc	/^void DoSvmNormalize(Dataset* dataset) {$/;"	f
Done	include/fastlib/par/thread.h	/^  void Done() {$/;"	f	class:DoneCondition
DoneCondition	include/fastlib/par/thread.h	/^  DoneCondition() { done_ = false; }$/;"	f	class:DoneCondition
DoneCondition	include/fastlib/par/thread.h	/^class DoneCondition {$/;"	c
Dot	include/fastlib/la/uselapack.h	/^  inline double Dot(const Matrix &x, const Matrix &y) {$/;"	f	namespace:la
Dot	include/fastlib/la/uselapack.h	/^  inline double Dot(const Vector &x, const Vector &y) {$/;"	f	namespace:la
Dot	include/fastlib/la/uselapack.h	/^  inline double Dot(index_t length, const double *x, const double *y) {$/;"	f	namespace:la
DotMultiplyInit	mlpack/fastica/lin_alg.h	/^  Matrix* DotMultiplyInit(const Matrix* const A, const Matrix* const B,$/;"	f	namespace:linalg__private
DotMultiplyInit	mlpack/fastica/lin_alg.h	/^  Vector* DotMultiplyInit(const Vector* const u, const Vector* const v,$/;"	f	namespace:linalg__private
DotMultiplyOverwrite	mlpack/fastica/lin_alg.h	/^  Matrix* DotMultiplyOverwrite(const Matrix* const A, Matrix* const B) {$/;"	f	namespace:linalg__private
DotMultiplyOverwrite	mlpack/fastica/lin_alg.h	/^  Vector* DotMultiplyOverwrite(const Vector* const u, Vector* const v) {$/;"	f	namespace:linalg__private
DotMultiplySum	mlpack/fastica/lin_alg.h	/^  Matrix* DotMultiplySum(const Matrix* const A, const Matrix* const B,$/;"	f	namespace:linalg__private
DualtreeKde	mlpack/kde/dualtree_kde.h	/^  DualtreeKde() {$/;"	f	class:DualtreeKde
DualtreeKde	mlpack/kde/dualtree_kde.h	/^class DualtreeKde {$/;"	c
DualtreeKdeBase_	mlpack/kde/dualtree_kde_impl.h	/^void DualtreeKde<TKernelAux>::DualtreeKdeBase_(Tree *qnode, Tree *rnode,$/;"	f	class:DualtreeKde
DualtreeKdeCV	mlpack/kde/dualtree_kde_cv.h	/^  DualtreeKdeCV() {$/;"	f	class:DualtreeKdeCV
DualtreeKdeCV	mlpack/kde/dualtree_kde_cv.h	/^class DualtreeKdeCV {$/;"	c
DualtreeKdeCVBase_	mlpack/kde/dualtree_kde_cv_impl.h	/^void DualtreeKdeCV<TKernelAux>::DualtreeKdeCVBase_(Tree *qnode, Tree *rnode,$/;"	f	class:DualtreeKdeCV
DualtreeKdeCVCanonical_	mlpack/kde/dualtree_kde_cv_impl.h	/^bool DualtreeKdeCV<TKernelAux>::DualtreeKdeCVCanonical_$/;"	f	class:DualtreeKdeCV
DualtreeKdeCVCommon	mlpack/kde/dualtree_kde_cv_common.h	/^class DualtreeKdeCVCommon {$/;"	c
DualtreeKdeCanonical_	mlpack/kde/dualtree_kde_impl.h	/^bool DualtreeKde<TKernelAux>::DualtreeKdeCanonical_$/;"	f	class:DualtreeKde
DualtreeKdeCommon	mlpack/kde/dualtree_kde_common.h	/^class DualtreeKdeCommon {$/;"	c
DualtreeVKde	mlpack/kde/dualtree_vkde.h	/^  DualtreeVKde() {$/;"	f	class:DualtreeVKde
DualtreeVKde	mlpack/kde/dualtree_vkde.h	/^class DualtreeVKde {$/;"	c
DualtreeVKdeBase_	mlpack/kde/dualtree_vkde_impl.h	/^void DualtreeVKde<TKernel>::DualtreeVKdeBase_(Tree *qnode, Tree *rnode,$/;"	f	class:DualtreeVKde
DualtreeVKdeCanonical_	mlpack/kde/dualtree_vkde_impl.h	/^bool DualtreeVKde<TKernel>::DualtreeVKdeCanonical_$/;"	f	class:DualtreeVKde
DummyRecursiveAttribute	include/fastlib/par/thread.h	/^  struct DummyRecursiveAttribute {};$/;"	s	class:Mutex
Dup	include/fastlib/base/deprecated.h	/^  inline T *Dup(const T *src, size_t elems = 1) {$/;"	f	namespace:mem
DupBytes	include/fastlib/base/deprecated.h	/^  inline T *DupBytes(const T *src, size_t bytes) {$/;"	f	namespace:mem
DupConstruct	include/fastlib/base/deprecated.h	/^  inline T *DupConstruct(const T *src, size_t elems = 1) {$/;"	f	namespace:mem
E	include/fastlib/math/math_lib.h	/^  const double E = 2.7182818284590452354;$/;"	v
END	include/fastlib/file/textfile.h	/^    END,$/;"	e	enum:TextTokenizer::TokenType
EXCLUDE	mlpack/range_search/ortho_range_search.h	/^  enum PruneStatus {SUBSUME, INCONCLUSIVE, EXCLUDE};$/;"	e	enum:OrthoRangeSearch::PruneStatus
EXPAND_EQUALS	include/fastlib/base/cc.h	193;"	d
EXPAND_GREATER_THAN	include/fastlib/base/cc.h	171;"	d
EXPAND_HETERO_EQUALS	include/fastlib/base/cc.h	274;"	d
EXPAND_HETERO_GREATER_THAN	include/fastlib/base/cc.h	251;"	d
EXPAND_HETERO_LESS_THAN	include/fastlib/base/cc.h	221;"	d
EXPAND_LESS_THAN	include/fastlib/base/cc.h	149;"	d
EXTERN_C_BEGIN	include/fastlib/base/compiler.h	50;"	d
EXTERN_C_BEGIN	include/fastlib/base/compiler.h	52;"	d
EXTERN_C_END	include/fastlib/base/compiler.h	61;"	d
EXTERN_C_END	include/fastlib/base/compiler.h	63;"	d
EXTERN_C_START	include/fastlib/base/deprecated.h	53;"	d
EigenvaluesInit	include/fastlib/la/uselapack.h	/^  inline success_t EigenvaluesInit(const Matrix &A,$/;"	f	namespace:la
Elem	include/fastlib/col/arraylist.h	/^  typedef TElem Elem;$/;"	t	class:ArrayList
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {$/;"	f	class:ot__private::Printer
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::Aliaser
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::Copier
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::Deserializer
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::Destructor
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::Freezer
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::Relocator
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::Serializer
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::TransientDestructor
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::TransientUnstructor
ElemOf	include/fastlib/base/otrav_impl.h	/^    void ElemOf(const T *array) {}$/;"	f	class:ot__private::Unstructor
EmitResults	mlpack/allnn/allnn.h	/^  void EmitResults(GenVector<index_t>* results, GenVector<double>* distances) {$/;"	f	class:AllNN
EmitResults	mlpack/disk_allnn/disk_allnn.h	/^  void EmitResults(GenVector<index_t>* results, GenVector<double>* distances) {$/;"	f	class:DiskAllNN
Empty	include/fastlib/base/cc.h	/^class Empty {};$/;"	c
EmptyStatistic	include/fastlib/tree/statistic.h	/^  EmptyStatistic() {}$/;"	f	class:EmptyStatistic
EmptyStatistic	include/fastlib/tree/statistic.h	/^class EmptyStatistic {$/;"	c
EnsureSizeAtLeast	include/fastlib/col/arraylist.h	/^  void EnsureSizeAtLeast(index_t size) {$/;"	f	class:ArrayList
Entry	include/fastlib/col/heap.h	/^  struct Entry {$/;"	s	class:MinHeap
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {$/;"	f	class:ot__private::Deserializer
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {$/;"	f	class:ot__private::Printer
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {$/;"	f	class:ot__private::Serializer
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {$/;"	f	class:ot__private::TransientUnstructor
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {$/;"	f	class:ot__private::Unstructor
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {}$/;"	f	class:ot__private::Aliaser
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {}$/;"	f	class:ot__private::Copier
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {}$/;"	f	class:ot__private::Destructor
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {}$/;"	f	class:ot__private::Freezer
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {}$/;"	f	class:ot__private::Relocator
Enum	include/fastlib/base/otrav_impl.h	/^    void Enum(T &obj) {}$/;"	f	class:ot__private::TransientDestructor
EpanKernel	include/fastlib/math/kernel.h	/^class EpanKernel {$/;"	c
EpanKernelAux	mlpack/series_expansion/kernel_aux.h	/^class EpanKernelAux {$/;"	c
EqualsNoCase	include/fastlib/col/col_string.h	/^  bool EqualsNoCase(const char *s) const {$/;"	f	class:String
EstimateBandwidth	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::EstimateBandwidth(double *bandwidth) {$/;"	f	class:KernelPCA
EstimateInit	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::EstimateInit(const Vector& seq, const Vector& states, Matrix* trans, Matrix* emis) {$/;"	f	class:DiscreteHMM
EstimateInit	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::EstimateInit(int numSymbols, int numStates, const Vector& seq, const Vector& states, Matrix* trans, Matrix* emis){$/;"	f	class:DiscreteHMM
EstimateInit	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::EstimateInit(const Matrix& seq, const Vector& states, Matrix* trans, ArrayList<Vector>* means, ArrayList<Matrix>* covs) {$/;"	f	class:GaussianHMM
EstimateInit	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::EstimateInit(int numStates, const Matrix& seq, const Vector& states, Matrix* trans, ArrayList<Vector>* means, ArrayList<Matrix>* covs) {$/;"	f	class:GaussianHMM
EstimateInit	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::EstimateInit(int NumClusters, const Matrix& seq, const Vector& states, Matrix* trans, ArrayList<MixtureGauss>* mixs) {$/;"	f	class:MixtureofGaussianHMM
EstimateInit	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::EstimateInit(int numStates, int numClusters, const Matrix& seq, const Vector& states, Matrix* trans, ArrayList<MixtureGauss>* mixs) {$/;"	f	class:MixtureofGaussianHMM
EstimateKnns	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVarianceUtils::EstimateKnns(ArrayList<index_t> &neares_neighbors,$/;"	f	class:MaxVarianceUtils
EstimateModel	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::EstimateModel(const Vector& data_seq, const Vector& state_seq) {$/;"	f	class:DiscreteHMM
EstimateModel	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::EstimateModel(int numstate, int numsymbol, const Vector& data_seq, const Vector& state_seq) {$/;"	f	class:DiscreteHMM
EstimateModel	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::EstimateModel(const Matrix& data_seq, const Vector& state_seq) {$/;"	f	class:GaussianHMM
EstimateModel	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::EstimateModel(int numstate, const Matrix& data_seq, const Vector& state_seq) {$/;"	f	class:GaussianHMM
EstimateModel	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::EstimateModel(int numcluster, const Matrix& data_seq, $/;"	f	class:MixtureofGaussianHMM
EstimateModel	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::EstimateModel(int numstate, int numcluster, $/;"	f	class:MixtureofGaussianHMM
Eval	mlpack/optimization/optimizers.cc	/^void NelderMead::Eval(double **pts) {$/;"	f	class:NelderMead
Eval	mlpack/optimization/optimizers.cc	/^void QuasiNewton::Eval(double *pt) {$/;"	f	class:QuasiNewton
Eval	mlpack/svm/svm.h	/^  double Eval(const double *a, const double *b, index_t n_features) const {$/;"	f	class:SVMRBFKernel
Eval	mlpack/svm/svm.h	/^  double Eval(const double* a, const double* b, index_t n_features) const {$/;"	f	class:SVMLinearKernel
EvalUnnorm	include/fastlib/math/kernel.h	/^  double EvalUnnorm(double dist) const {$/;"	f	class:EpanKernel
EvalUnnorm	include/fastlib/math/kernel.h	/^  double EvalUnnorm(double dist) const {$/;"	f	class:GaussianKernel
EvalUnnorm	include/fastlib/math/kernel.h	/^  double EvalUnnorm(double dist) const {$/;"	f	class:GaussianStarKernel
EvalUnnorm	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  double EvalUnnorm(const double *point) const {$/;"	f	class:InversePowDistGradientKernel
EvalUnnorm	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  double EvalUnnorm(const double *point) const {$/;"	f	class:InversePowDistKernel
EvalUnnorm	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  double EvalUnnorm(double dist) const {$/;"	f	class:InversePowDistKernel
EvalUnnormOnSq	include/fastlib/math/kernel.h	/^  double EvalUnnormOnSq(double sqdist) const {$/;"	f	class:EpanKernel
EvalUnnormOnSq	include/fastlib/math/kernel.h	/^  double EvalUnnormOnSq(double sqdist) const {$/;"	f	class:GaussianKernel
EvalUnnormOnSq	include/fastlib/math/kernel.h	/^  double EvalUnnormOnSq(double sqdist) const {$/;"	f	class:GaussianStarKernel
EvalUnnormOnSq	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  double EvalUnnormOnSq(double sqdist) const {$/;"	f	class:InversePowDistKernel
EvalUnnormOnSq_	mlpack/kde/dualtree_kde_cv_impl.h	/^void DualtreeKdeCV<TKernelAux>::EvalUnnormOnSq_$/;"	f	class:DualtreeKdeCV
EvalUnnormOnSq_	mlpack/kde/dualtree_kde_impl.h	/^double DualtreeKde<TKernelAux>::EvalUnnormOnSq_(index_t reference_point_index,$/;"	f	class:DualtreeKde
EvalUnnormOnSq_	mlpack/kde/dualtree_vkde_impl.h	/^double DualtreeVKde<TKernel>::EvalUnnormOnSq_(index_t reference_point_index,$/;"	f	class:DualtreeVKde
EvaluateField	mlpack/series_expansion/farfield_expansion_impl.h	/^double FarFieldExpansion<TKernelAux>::EvaluateField(const Matrix& data, $/;"	f	class:FarFieldExpansion
EvaluateField	mlpack/series_expansion/farfield_expansion_impl.h	/^double FarFieldExpansion<TKernelAux>::EvaluateField(const double *x_q, $/;"	f	class:FarFieldExpansion
EvaluateField	mlpack/series_expansion/local_expansion_impl.h	/^double LocalExpansion<TKernelAux>::EvaluateField(const Matrix& data, $/;"	f	class:LocalExpansion
EvaluateField	mlpack/series_expansion/local_expansion_impl.h	/^double LocalExpansion<TKernelAux>::EvaluateField(const double *x_q) const {$/;"	f	class:LocalExpansion
EvaluateField	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^double MultFarFieldExpansion<TKernelAux>::EvaluateField(const Matrix& data, $/;"	f	class:MultFarFieldExpansion
EvaluateField	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^double MultFarFieldExpansion<TKernelAux>::EvaluateField(const double *x_q, $/;"	f	class:MultFarFieldExpansion
EvaluateField	mlpack/series_expansion/mult_local_expansion_impl.h	/^double MultLocalExpansion<TKernelAux>::EvaluateField(const Matrix& data, $/;"	f	class:MultLocalExpansion
EvaluateField	mlpack/series_expansion/mult_local_expansion_impl.h	/^double MultLocalExpansion<TKernelAux>::EvaluateField(const Vector& x_q) const {$/;"	f	class:MultLocalExpansion
EvaluateLocalExpansionForAllQueries_	mlpack/kde/fgt_kde.h	/^  void EvaluateLocalExpansionForAllQueries_$/;"	f	class:FGTKde
EvaluateLocalExpansion_	mlpack/kde/fgt_kde.h	/^  double EvaluateLocalExpansion_(int row_q, Vector &x_Q, double h, $/;"	f	class:FGTKde
EvaluateMultipoleExpansion_	mlpack/kde/fgt_kde.h	/^  void EvaluateMultipoleExpansion_(ArrayList<int> &rows, int p_alpha,$/;"	f	class:FGTKde
Exit_	include/fastlib/par/thread.h	/^  void Exit_() {$/;"	f	class:Thread
ExpArg	mlpack/fastica/lin_alg.h	/^  double ExpArg(double x, double arg) {$/;"	f	namespace:linalg__private
ExpectationMaximization	mlpack/mog/mog_em.cc	/^void MoGEM::ExpectationMaximization(Matrix& data_points) {$/;"	f	class:MoGEM
ExtractAppend	include/fastlib/col/arraylist.h	/^void ArrayList<TElem>::ExtractAppend(index_t pos, index_t size,$/;"	f	class:ArrayList
ExtractCovarianceSubset_	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::ExtractCovarianceSubset_$/;"	f	class:RidgeRegression
ExtractInit	include/fastlib/col/arraylist.h	/^  void ExtractInit(index_t pos, index_t size, Elem *dest) {$/;"	f	class:ArrayList
ExtractInit	include/fastlib/col/arraylist.h	/^void ArrayList<TElem>::ExtractInit(index_t pos, index_t size,$/;"	f	class:ArrayList
ExtractSubspace_	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::ExtractSubspace_$/;"	f	class:RidgeRegression
F77_FALSE	include/fastlib/base/fortran.h	89;"	d
F77_FUNC	include/fastlib/base/fortran.h	105;"	d
F77_TRUE	include/fastlib/base/fortran.h	91;"	d
F77_UNKNOWN_ARGS	include/fastlib/base/fortran.h	108;"	d
F77_UNKNOWN_ARGS	include/fastlib/base/fortran.h	110;"	d
FAILED	include/fastlib/base/common.h	344;"	d
FARFIELD_EXPANSION	mlpack/series_expansion/farfield_expansion.h	44;"	d
FARFIELD_EXPANSION_IMPL_H	mlpack/series_expansion/farfield_expansion_impl.h	37;"	d
FASTICA_H	mlpack/fastica/fastica.h	47;"	d
FASTLIB_BASE_TYPE_H	include/fastlib/base/basic_types.h	2;"	d
FASTLIB_DISCRETE_DISTRIBUTION_H	mlpack/hmm/discreteDST.h	33;"	d
FASTLIB_DISCRETE_HMM_H	mlpack/hmm/discreteHMM.h	43;"	d
FASTLIB_FASTLIB_H	include/fastlib/fastlib.h	41;"	d
FASTLIB_GAUSSIAN_HMM_H	mlpack/hmm/gaussianHMM.h	42;"	d
FASTLIB_HMM_SUPPORT_H	mlpack/hmm/support.h	33;"	d
FASTLIB_MIXGAUSS_HMM_H	mlpack/hmm/mixgaussHMM.h	42;"	d
FASTLIB_MIXTURE_GAUSSIAN_H	mlpack/hmm/mixtureDST.h	45;"	d
FATAL	include/fastlib/base/common.h	214;"	d
FFTKde	mlpack/kde/fft_kde.h	/^  FFTKde() {}$/;"	f	class:FFTKde
FFTKde	mlpack/kde/fft_kde.h	/^class FFTKde {$/;"	c
FFT_KDE_H	mlpack/kde/fft_kde.h	54;"	d
FGTKde	mlpack/kde/fgt_kde.h	/^  FGTKde() {}$/;"	f	class:FGTKde
FGTKde	mlpack/kde/fgt_kde.h	/^class FGTKde {$/;"	c
FGT_KDE_H	mlpack/kde/fgt_kde.h	60;"	d
FILE_TEXTFILE_H	include/fastlib/file/textfile.h	42;"	d
FL_MSG_FATAL	include/fastlib/base/common.h	/^  FL_MSG_FATAL = 0,$/;"	e	enum:__anon1
FL_MSG_NONFATAL	include/fastlib/base/common.h	/^  FL_MSG_NONFATAL = 1,$/;"	e	enum:__anon1
FL_MSG_NOTIFY	include/fastlib/base/common.h	/^  FL_MSG_NOTIFY = 3$/;"	e	enum:__anon1
FL_MSG_NOTIFY_STAR	include/fastlib/base/common.h	/^  FL_MSG_NOTIFY_STAR = 2,$/;"	e	enum:__anon1
FORBID_ACCIDENTAL_COPIES	include/fastlib/base/cc.h	82;"	d
FORBID_COPY	include/fastlib/base/deprecated.h	67;"	d
FOR_ALL_PRIMITIVES_DO	include/fastlib/base/cc.h	287;"	d
FX_BOOL	include/fastlib/fx/fx.h	/^  FX_BOOL,$/;"	e	enum:__anon20
FX_BOOL_LIST	include/fastlib/fx/fx.h	/^  FX_BOOL_LIST,$/;"	e	enum:__anon20
FX_CUSTOM	include/fastlib/fx/fx.h	/^  FX_CUSTOM = -1$/;"	e	enum:__anon20
FX_DATANODE_H	include/fastlib/fx/datanode.h	42;"	d
FX_DEFAULT	include/fastlib/fx/fx.h	/^  FX_DEFAULT,$/;"	e	enum:__anon19
FX_DOUBLE	include/fastlib/fx/fx.h	/^  FX_DOUBLE,$/;"	e	enum:__anon20
FX_DOUBLE_LIST	include/fastlib/fx/fx.h	/^  FX_DOUBLE_LIST,$/;"	e	enum:__anon20
FX_ENTRY_DOC_DONE	include/fastlib/fx/fx.h	268;"	d
FX_H	include/fastlib/fx/fx.h	44;"	d
FX_INT	include/fastlib/fx/fx.h	/^  FX_INT,$/;"	e	enum:__anon20
FX_INT_LIST	include/fastlib/fx/fx.h	/^  FX_INT_LIST,$/;"	e	enum:__anon20
FX_MODULE	include/fastlib/fx/fx.h	/^  FX_MODULE,$/;"	e	enum:__anon19
FX_PARAM	include/fastlib/fx/fx.h	/^  FX_PARAM,$/;"	e	enum:__anon19
FX_PROVIDED	include/fastlib/fx/fx.h	/^  FX_PROVIDED,$/;"	e	enum:__anon19
FX_REQUIRED	include/fastlib/fx/fx.h	/^  FX_REQUIRED,$/;"	e	enum:__anon19
FX_RESERVED	include/fastlib/fx/fx.h	/^  FX_RESERVED,$/;"	e	enum:__anon19
FX_RESULT	include/fastlib/fx/fx.h	/^  FX_RESULT,$/;"	e	enum:__anon19
FX_STR	include/fastlib/fx/fx.h	/^  FX_STR = 0,$/;"	e	enum:__anon20
FX_STR_LIST	include/fastlib/fx/fx.h	/^  FX_STR_LIST,$/;"	e	enum:__anon20
FX_SUBMODULE_DOC_DONE	include/fastlib/fx/fx.h	271;"	d
FX_TIMER	include/fastlib/fx/fx.h	/^  FX_TIMER$/;"	e	enum:__anon19
FX_TIMER_H	include/fastlib/fx/stopwatch.h	42;"	d
FX_UNKNOWN	include/fastlib/fx/fx.h	/^  FX_UNKNOWN = 0,$/;"	e	enum:__anon19
FarFieldEvaluationCost	mlpack/series_expansion/mult_series_expansion_aux.h	/^  double FarFieldEvaluationCost(int order) const {$/;"	f	class:MultSeriesExpansionAux
FarFieldEvaluationCost	mlpack/series_expansion/series_expansion_aux.cc	/^double SeriesExpansionAux::FarFieldEvaluationCost(int order) const {$/;"	f	class:SeriesExpansionAux
FarFieldExpansion	mlpack/series_expansion/farfield_expansion.h	/^class FarFieldExpansion {$/;"	c
FarFieldToLocalTranslationCost	mlpack/series_expansion/mult_series_expansion_aux.h	/^  double FarFieldToLocalTranslationCost(int order) const {$/;"	f	class:MultSeriesExpansionAux
FarFieldToLocalTranslationCost	mlpack/series_expansion/series_expansion_aux.cc	/^double SeriesExpansionAux::FarFieldToLocalTranslationCost(int order) const {$/;"	f	class:SeriesExpansionAux
FastGaussTransformPreprocess_	mlpack/kde/fgt_kde.h	/^  void FastGaussTransformPreprocess_(double *interaction_radius, $/;"	f	class:FGTKde
FastICA	mlpack/fastica/fastica.h	/^  FastICA() {$/;"	f	class:FastICA
FastICA	mlpack/fastica/fastica.h	/^class FastICA {$/;"	c
FeatureSelectedRegression	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::FeatureSelectedRegression$/;"	f	class:RidgeRegression
Features	include/fastlib/file/textfile.h	/^  enum Features {$/;"	g	class:TextTokenizer
FinalizeSum_	mlpack/kde/fgt_kde.h	/^  void FinalizeSum_(double delta, int nterms, int nallbx, $/;"	f	class:FGTKde
Find	include/fastlib/col/col_string.h	/^  index_t Find(char c) const {$/;"	f	class:String
Find	include/fastlib/col/col_string.h	/^  index_t Find(const char* s) const {$/;"	f	class:String
FindBoundFromMatrix	include/fastlib/tree/kdtree_impl.h	/^  void FindBoundFromMatrix(const GenMatrix<T>& matrix,$/;"	f	namespace:tree_kdtree_private
FindByBeginCount	include/fastlib/tree/spacetree.h	/^  BinarySpaceTree* FindByBeginCount($/;"	f	class:BinarySpaceTree
FindByBeginCount	include/fastlib/tree/spacetree.h	/^  const BinarySpaceTree* FindByBeginCount($/;"	f	class:BinarySpaceTree
FindByBeginCount	mlpack/kde/general_spacetree.h	/^  GeneralBinarySpaceTree* FindByBeginCount$/;"	f	class:GeneralBinarySpaceTree
FindByBeginCount	mlpack/kde/general_spacetree.h	/^  const GeneralBinarySpaceTree* FindByBeginCount$/;"	f	class:GeneralBinarySpaceTree
FindIndexWithPrefix	mlpack/regression/dataset_preprocess.cc	/^void FindIndexWithPrefix(Dataset &dataset, char *prefix,$/;"	f
FindR	include/fastlib/col/col_string.h	/^  index_t FindR(char c) const {$/;"	f	class:String
FixLength	include/fastlib/col/col_string.h	/^  void FixLength()$/;"	f	class:String
FixedBandwidthKde	mlpack/kde/dualtree_kde_main.cc	/^void FixedBandwidthKde(Matrix &queries, Matrix &references, $/;"	f
FixedPointICA	mlpack/fastica/fastica.h	/^  int FixedPointICA(Matrix X, Matrix whitening_matrix, Matrix* W) {$/;"	f	class:FastICA
Format	include/fastlib/data/dataset.h	/^  void Format(index_t feature, index_t point, String *result) const {$/;"	f	class:Dataset
ForwardProcedure	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::ForwardProcedure(const Vector& seq, const Matrix& trans, const Matrix& emis, Vector *scales, Matrix* fs) {$/;"	f	class:DiscreteHMM
ForwardProcedure	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::ForwardProcedure(int L, const Matrix& trans, const Matrix& emis_prob, Vector *scales, Matrix* fs) {$/;"	f	class:GaussianHMM
ForwardProcedure	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::ForwardProcedure(int L, const Matrix& trans, const Matrix& emis_prob, $/;"	f	class:MixtureofGaussianHMM
Free	include/fastlib/base/ccmem.h	/^  inline void Free(T* ptr) {$/;"	f	namespace:mem
Free	include/fastlib/col/fastalloc.h	/^  static void Free(char *item) {$/;"	f	class:SlabAllocator
FreeDestruct	include/fastlib/base/ccmem.h	/^  inline void FreeDestruct(T *array, size_t elems = 1) {$/;"	f	namespace:mem
Freeze	include/fastlib/base/otrav.h	/^  inline size_t Freeze(char *block, const T &src) {$/;"	f	namespace:ot
Freezer	include/fastlib/base/otrav_impl.h	/^    Freezer(char *block, const T &src) {$/;"	f	class:ot__private::Freezer
Freezer	include/fastlib/base/otrav_impl.h	/^  class Freezer {$/;"	c	namespace:ot__private
FrozenSize	include/fastlib/base/otrav.h	/^  inline size_t FrozenSize(const T &obj) {$/;"	f	namespace:ot
FurthestColumnIndex	mlpack/kde/gen_metric_tree_impl.h	/^  index_t FurthestColumnIndex(const Vector &pivot, const Matrix &matrix, $/;"	f	namespace:tree_gen_metric_tree_private
GAUSS	mlpack/fastica/fastica.h	53;"	d
GIGABYTE	include/fastlib/base/common.h	143;"	d
GNPBaseCase_	mlpack/allnn/allnn.h	/^  void GNPBaseCase_(TreeType* query_node, TreeType* reference_node) {$/;"	f	class:AllNN
GNPBaseCase_	mlpack/disk_allnn/disk_allnn.h	/^  void GNPBaseCase_(TreeType* query_node, TreeType* reference_node) {$/;"	f	class:DiskAllNN
GNPRecursion_	mlpack/allnn/allnn.h	/^  void GNPRecursion_(TreeType* query_node, TreeType* reference_node,$/;"	f	class:AllNN
GNPRecursion_	mlpack/disk_allnn/disk_allnn.h	/^  void GNPRecursion_(TreeType* query_node, TreeType* reference_node,$/;"	f	class:DiskAllNN
GaussTransform_	mlpack/kde/fgt_kde.h	/^  void GaussTransform_(double delta, int nterms, int nallbx, $/;"	f	class:FGTKde
GaussianHMM	mlpack/hmm/gaussianHMM.h	/^class GaussianHMM {$/;"	c
GaussianKernel	include/fastlib/math/kernel.h	/^class GaussianKernel {$/;"	c
GaussianKernel	mlpack/kernel_pca/kernel_pca.h	/^  class GaussianKernel {$/;"	c	class:KernelPCA
GaussianKernelAux	mlpack/series_expansion/kernel_aux.h	/^class GaussianKernelAux {$/;"	c
GaussianKernelMultAux	mlpack/series_expansion/kernel_aux.h	/^class GaussianKernelMultAux {$/;"	c
GaussianStarKernel	include/fastlib/math/kernel.h	/^class GaussianStarKernel {$/;"	c
Gaussify	mlpack/kde/fft_kde.h	/^  void Gaussify(double acc, double precalc, int level, int pos, int skip) {$/;"	f	class:FFTKde
GenMatrix	include/fastlib/la/matrix.h	/^  GenMatrix() {$/;"	f	class:GenMatrix
GenMatrix	include/fastlib/la/matrix.h	/^  GenMatrix(const GenMatrix<T>& other) {$/;"	f	class:GenMatrix
GenMatrix	include/fastlib/la/matrix.h	/^  GenMatrix(index_t in_rows, index_t in_cols) {$/;"	f	class:GenMatrix
GenMatrix	include/fastlib/la/matrix.h	/^class GenMatrix {$/;"	c
GenVector	include/fastlib/la/matrix.h	/^  GenVector() {$/;"	f	class:GenVector
GenVector	include/fastlib/la/matrix.h	/^  GenVector(const GenVector& other) {$/;"	f	class:GenVector
GenVector	include/fastlib/la/matrix.h	/^class GenVector {$/;"	c
GeneralBinarySpaceTree	mlpack/kde/general_spacetree.h	/^class GeneralBinarySpaceTree {$/;"	c
GeneralCrossValidator	include/fastlib/data/crossvalidation.h	/^  GeneralCrossValidator() {}$/;"	f	class:GeneralCrossValidator
GeneralCrossValidator	include/fastlib/data/crossvalidation.h	/^class GeneralCrossValidator {$/;"	c
GenerateArtificialDataset	mlpack/svm/svm_main.cc	/^void GenerateArtificialDataset(Dataset* dataset){$/;"	f
GenerateInit	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::GenerateInit(int L, const Matrix& trans, const Matrix& emis, Vector* seq, Vector* states) {$/;"	f	class:DiscreteHMM
GenerateInit	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::GenerateInit(int L, const Matrix& trans, const ArrayList<Vector>& means, const ArrayList<Matrix>& covs, Matrix* seq, Vector* states){$/;"	f	class:GaussianHMM
GenerateInit	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::GenerateInit(int L, const Matrix& trans, const ArrayList<MixtureGauss>& mixs, Matrix* seq, Vector* states){$/;"	f	class:MixtureofGaussianHMM
GenerateSequence	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::GenerateSequence(int length, Vector* data_seq, Vector* state_seq) const {$/;"	f	class:DiscreteHMM
GenerateSequence	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::GenerateSequence(int L, Matrix* data_seq, Vector* state_seq) const {$/;"	f	class:GaussianHMM
GenerateSequence	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::GenerateSequence(int L, Matrix* data_seq, Vector* state_seq) const {$/;"	f	class:MixtureofGaussianHMM
GetC_	mlpack/svm/smo.h	/^  double GetC_(index_t i) {$/;"	f	class:SMO
GetChar_	include/fastlib/file/textfile.h	/^  int GetChar_() {$/;"	f	class:TextTokenizer
GetColumn	mlpack/quicsvd/cosine_tree.h	/^  void GetColumn(int i_col, Vector* col) {$/;"	f	class:CosineNode
GetColumnPtr	include/fastlib/la/matrix.h	/^  T *GetColumnPtr(index_t col) {$/;"	f	class:GenMatrix
GetColumnPtr	include/fastlib/la/matrix.h	/^  const T *GetColumnPtr(index_t col) const {$/;"	f	class:GenMatrix
GetColumnPtr	include/fastlib/la/matrix.h	/^  const double *GetColumnPtr(index_t col) const {$/;"	f	class:SmallMatrix
GetColumnPtr	include/fastlib/la/matrix.h	/^  double *GetColumnPtr(index_t col) {$/;"	f	class:SmallMatrix
GetName	mlpack/svm/svm.h	/^  void GetName(String* kname) {$/;"	f	class:SVMLinearKernel
GetName	mlpack/svm/svm.h	/^  void GetName(String* kname) {$/;"	f	class:SVMRBFKernel
GetSVM	mlpack/svm/smo.h	/^void SMO<TKernel>::GetSVM(ArrayList<index_t> &dataset_index, ArrayList<double> &coef, ArrayList<bool> &sv_indicator) {$/;"	f	class:SMO
GetSamples	mlpack/fastica/fastica.h	/^  index_t GetSamples(int max, double percentage, Vector* selected_indices) {   $/;"	f	class:FastICA
GetTypeId	mlpack/svm/svm.h	/^  int GetTypeId() {$/;"	f	class:SVMLinearKernel
GetTypeId	mlpack/svm/svm.h	/^  int GetTypeId() {$/;"	f	class:SVMRBFKernel
GiveInitMatrix	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::GiveInitMatrix(Matrix *init_data) {$/;"	f	class:MaxFurthestNeighbors
GiveInitMatrix	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::GiveInitMatrix(Matrix *init_data) {$/;"	f	class:MaxVariance
GoodnessOfFitTerm_	mlpack/mog/mog_l2e.cc	/^long double MoGL2E::GoodnessOfFitTerm_(const Matrix& data, Vector *g_fit) {$/;"	f	class:MoGL2E
Grain	include/fastlib/par/grain.h	/^  typedef TGrain Grain;$/;"	t	class:GrainQueue
Grain	include/fastlib/par/grain.h	/^  typedef TGrain Grain;$/;"	t	class:ThreadedGrainRunner
GrainQueue	include/fastlib/par/grain.h	/^  GrainQueue() {}$/;"	f	class:GrainQueue
GrainQueue	include/fastlib/par/grain.h	/^class GrainQueue {$/;"	c
GrowTo	include/fastlib/col/arraylist.h	/^  void GrowTo(index_t size) {$/;"	f	class:ArrayList
HAS_CUTOFF	include/fastlib/math/kernel.h	/^  static const bool HAS_CUTOFF = false;$/;"	m	class:GaussianKernel
HAS_CUTOFF	include/fastlib/math/kernel.h	/^  static const bool HAS_CUTOFF = false;$/;"	m	class:GaussianStarKernel
HAS_CUTOFF	include/fastlib/math/kernel.h	/^  static const bool HAS_CUTOFF = true;$/;"	m	class:EpanKernel
HAVE_RDTSC	include/fastlib/fx/stopwatch.h	61;"	d
IDENTIFIER	include/fastlib/file/textfile.h	/^    IDENTIFIER,$/;"	e	enum:TextTokenizer::TokenType
ID_FREE	mlpack/svm/smo.h	/^const double ID_FREE = 0;$/;"	v
ID_GAUSSIAN	mlpack/svm/svm.h	54;"	d
ID_LINEAR	mlpack/svm/svm.h	53;"	d
ID_LOWER_BOUNDED	mlpack/svm/smo.h	/^const double ID_LOWER_BOUNDED = -1;$/;"	v
ID_UPPER_BOUNDED	mlpack/svm/smo.h	/^const double ID_UPPER_BOUNDED = 1;$/;"	v
IFGTChooseParameters_	mlpack/kde/original_ifgt.h	/^  void IFGTChooseParameters_(int max_num_clusters) {$/;"	f	class:OriginalIFGT
IFGTChooseTruncationNumber_	mlpack/kde/original_ifgt.h	/^  void IFGTChooseTruncationNumber_() {	$/;"	f	class:OriginalIFGT
INCONCLUSIVE	mlpack/range_search/ortho_range_search.h	/^  enum PruneStatus {SUBSUME, INCONCLUSIVE, EXCLUDE};$/;"	e	enum:OrthoRangeSearch::PruneStatus
INSIDE_DUALTREE_KDE_CV_H	mlpack/kde/dualtree_kde_cv.h	441;"	d
INSIDE_DUALTREE_KDE_CV_H	mlpack/kde/dualtree_kde_cv.h	93;"	d
INSIDE_DUALTREE_KDE_H	mlpack/kde/dualtree_kde.h	566;"	d
INSIDE_DUALTREE_KDE_H	mlpack/kde/dualtree_kde.h	96;"	d
INSIDE_DUALTREE_VKDE_H	mlpack/kde/dualtree_vkde.h	491;"	d
INSIDE_DUALTREE_VKDE_H	mlpack/kde/dualtree_vkde.h	92;"	d
INSIDE_FARFIELD_EXPANSION_H	mlpack/series_expansion/farfield_expansion.h	306;"	d
INSIDE_FARFIELD_EXPANSION_H	mlpack/series_expansion/farfield_expansion.h	308;"	d
INSIDE_LOCAL_EXPANSION_H	mlpack/series_expansion/local_expansion.h	170;"	d
INSIDE_LOCAL_EXPANSION_H	mlpack/series_expansion/local_expansion.h	172;"	d
INSIDE_MULT_FARFIELD_EXPANSION_H	mlpack/series_expansion/mult_farfield_expansion.h	224;"	d
INSIDE_MULT_FARFIELD_EXPANSION_H	mlpack/series_expansion/mult_farfield_expansion.h	226;"	d
INSIDE_MULT_LOCAL_EXPANSION_H	mlpack/series_expansion/mult_local_expansion.h	170;"	d
INSIDE_MULT_LOCAL_EXPANSION_H	mlpack/series_expansion/mult_local_expansion.h	172;"	d
INTEGER	include/fastlib/data/dataset.h	/^      INTEGER,$/;"	e	enum:DatasetFeature::Type
INTEGER	include/fastlib/file/textfile.h	/^    INTEGER$/;"	e	enum:TextTokenizer::TokenType
INVALID	include/fastlib/file/textfile.h	/^    INVALID = -1,$/;"	e	enum:TextTokenizer::TokenType
INVERSE_NORMAL_CDF_H	mlpack/kde/inverse_normal_cdf.h	33;"	d
INVERSE_POW_DIST_KERNEL_AUX_H	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	33;"	d
INVERSE_POW_DIST_KERNEL_H	mlpack/series_expansion/inverse_pow_dist_kernel.h	33;"	d
IS_CONSTANT_EXPRESION	include/fastlib/base/deprecated.h	54;"	d
IS_CONST_EXPR	include/fastlib/base/compiler.h	133;"	d
IS_CONST_EXPR	include/fastlib/base/compiler.h	135;"	d
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::Aliaser::__anon9
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::Copier::__anon8
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::Deserializer::__anon13
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::Destructor::__anon7
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::Freezer::__anon10
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::Relocator::__anon11
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::Serializer::__anon12
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::TransientDestructor::__anon6
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::TransientUnstructor::__anon4
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 0 };$/;"	e	enum:ot__private::Unstructor::__anon5
IS_PRINTER	include/fastlib/base/otrav_impl.h	/^    enum { IS_PRINTER = 1 };$/;"	e	enum:ot__private::Printer::__anon3
IncreaseCap_	include/fastlib/col/arraylist.h	/^void ArrayList<TElem>::IncreaseCap_(index_t cap) {$/;"	f	class:ArrayList
IndexFromPtr	include/fastlib/col/col_string.h	/^  index_t IndexFromPtr(const char *position) const {$/;"	f	class:String
IndexOfLargestElement	mlpack/kde/original_ifgt.h	/^  int IndexOfLargestElement(const Vector &x) {$/;"	f	class:OriginalIFGT
InfixCopy	include/fastlib/col/arraylist.h	/^  void InfixCopy(index_t pos, const ArrayList &src) {$/;"	f	class:ArrayList
InfixCopy	include/fastlib/col/arraylist.h	/^  void InfixCopy(index_t pos, const Elem *src, index_t size) {$/;"	f	class:ArrayList
InfixSteal	include/fastlib/col/arraylist.h	/^void ArrayList<TElem>::InfixSteal(index_t pos, ArrayList *src) {$/;"	f	class:ArrayList
InfomaxICA	mlpack/infomax_ica/infomax_ica.cc	/^InfomaxICA::InfomaxICA(){$/;"	f	class:InfomaxICA
InfomaxICA	mlpack/infomax_ica/infomax_ica.cc	/^InfomaxICA::InfomaxICA(double lambda, int b, double epsilon):$/;"	f	class:InfomaxICA
InfomaxICA	mlpack/infomax_ica/infomax_ica.h	/^class InfomaxICA {$/;"	c
Init	include/fastlib/col/arraylist.h	/^  void Init() {$/;"	f	class:ArrayList
Init	include/fastlib/col/arraylist.h	/^  void Init(index_t size) {$/;"	f	class:ArrayList
Init	include/fastlib/col/arraylist.h	/^  void Init(index_t size, index_t cap) {$/;"	f	class:ArrayList
Init	include/fastlib/col/col_string.h	/^  void Init() {$/;"	f	class:String
Init	include/fastlib/col/col_string.h	/^  void Init(int finalLength) {$/;"	f	class:String
Init	include/fastlib/col/heap.h	/^  void Init() {$/;"	f	class:MinHeap
Init	include/fastlib/col/intmap.h	/^  void Init() {$/;"	f	class:DenseIntMap
Init	include/fastlib/col/queue.h	/^  void Init() {$/;"	f	class:Queue
Init	include/fastlib/col/rangeset.h	/^  void Init() {$/;"	f	class:RangeSet
Init	include/fastlib/data/crossvalidation.h	/^void GeneralCrossValidator<TLearner>::Init($/;"	f	class:GeneralCrossValidator
Init	include/fastlib/data/crossvalidation.h	/^void SimpleCrossValidator<TClassifier>::Init($/;"	f	class:SimpleCrossValidator
Init	include/fastlib/la/matrix.h	/^  void Init(index_t in_length) {$/;"	f	class:GenVector
Init	include/fastlib/la/matrix.h	/^  void Init(index_t in_rows, index_t in_cols) {$/;"	f	class:GenMatrix
Init	include/fastlib/math/kernel.h	/^  void Init(double bandwidth_in) {$/;"	f	class:EpanKernel
Init	include/fastlib/math/kernel.h	/^  void Init(double bandwidth_in) {$/;"	f	class:GaussianKernel
Init	include/fastlib/math/kernel.h	/^  void Init(double bandwidth_in, index_t dims) {$/;"	f	class:EpanKernel
Init	include/fastlib/math/kernel.h	/^  void Init(double bandwidth_in, index_t dims) {$/;"	f	class:GaussianKernel
Init	include/fastlib/math/kernel.h	/^  void Init(double bandwidth_in, index_t dims) {$/;"	f	class:GaussianStarKernel
Init	include/fastlib/math/math_lib.h	/^  void Init(double lo_in, double hi_in) {$/;"	f	struct:DRange
Init	include/fastlib/par/grain.h	/^  void Init() {$/;"	f	class:GrainQueue
Init	include/fastlib/par/grain.h	/^  void Init(GrainQueue<Grain> *queue_in, Context context_in) {$/;"	f	class:ThreadedGrainRunner
Init	include/fastlib/par/thread.h	/^  void Init(Task* task_in) {$/;"	f	class:Thread
Init	include/fastlib/tree/bounds.h	/^  void Init(index_t dimension) {$/;"	f	class:DHrectBound
Init	include/fastlib/tree/spacetree.h	/^  void Init(index_t begin_in, index_t count_in) {$/;"	f	class:BinarySpaceTree
Init	include/fastlib/tree/statistic.h	/^  void Init(const TDataset& dataset, index_t start, index_t count) {$/;"	f	class:EmptyStatistic
Init	include/fastlib/tree/statistic.h	/^  void Init(const TDataset& dataset, index_t start, index_t count,$/;"	f	class:EmptyStatistic
Init	mlpack/allkfn/allkfn.h	/^    void Init(const Matrix& matrix, index_t start, index_t count) {$/;"	f	class:AllkFN::QueryStat
Init	mlpack/allkfn/allkfn.h	/^    void Init(const Matrix& matrix, index_t start, index_t count, $/;"	f	class:AllkFN::QueryStat
Init	mlpack/allkfn/allkfn.h	/^   void Init(const Matrix& queries_in, const Matrix& references_in, struct datanode* module_in) {$/;"	f	class:AllkFN
Init	mlpack/allkfn/allkfn.h	/^  void Init(const Matrix& queries_in, const Matrix& references_in, $/;"	f	class:AllkFN
Init	mlpack/allkfn/allkfn.h	/^  void Init(const Matrix& references_in, index_t leaf_size, index_t kfns) {$/;"	f	class:AllkFN
Init	mlpack/allkfn/allkfn.h	/^  void Init(const Matrix& references_in, struct datanode* module_in) {$/;"	f	class:AllkFN
Init	mlpack/allkfn/allkfn_test.cc	/^  void Init() {$/;"	f	class:TestAllkFN
Init	mlpack/allknn/allknn.h	/^    void Init(const Matrix& matrix, index_t start, index_t count) {$/;"	f	class:AllkNN::QueryStat
Init	mlpack/allknn/allknn.h	/^    void Init(const Matrix& matrix, index_t start, index_t count, $/;"	f	class:AllkNN::QueryStat
Init	mlpack/allknn/allknn.h	/^   void Init(const Matrix& queries_in, const Matrix& references_in, struct datanode* module_in) {$/;"	f	class:AllkNN
Init	mlpack/allknn/allknn.h	/^  void Init(const Matrix& queries_in, const Matrix& references_in, $/;"	f	class:AllkNN
Init	mlpack/allknn/allknn.h	/^  void Init(const Matrix& references_in, index_t leaf_size, $/;"	f	class:AllkNN
Init	mlpack/allknn/allknn.h	/^  void Init(const Matrix& references_in, struct datanode* module_in) {$/;"	f	class:AllkNN
Init	mlpack/allknn/allknn_test.cc	/^  void Init() {$/;"	f	class:TestAllkNN
Init	mlpack/allnn/allnn.h	/^    void Init(const Matrix& matrix, index_t start, index_t count) {$/;"	f	class:AllNN::QueryStat
Init	mlpack/allnn/allnn.h	/^    void Init(const Matrix& matrix, index_t start, index_t count,$/;"	f	class:AllNN::QueryStat
Init	mlpack/allnn/allnn.h	/^  void Init(const Matrix& queries_in, const Matrix& references_in,$/;"	f	class:AllNN
Init	mlpack/allnn/allnn.h	/^  void Init(const Matrix& references_in, fx_module* module_in) {$/;"	f	class:AllNN
Init	mlpack/allnn/allnn_test.cc	/^  void Init() {$/;"	f	class:TestAllNN
Init	mlpack/disk_allnn/disk_allnn.h	/^    void Init(const Matrix& matrix, index_t start, index_t count) {$/;"	f	class:DiskAllNN::QueryStat
Init	mlpack/disk_allnn/disk_allnn.h	/^    void Init(const Matrix& matrix, index_t start, index_t count,$/;"	f	class:DiskAllNN::QueryStat
Init	mlpack/disk_allnn/disk_allnn.h	/^  void Init(const Matrix& queries_in, const Matrix& references_in,$/;"	f	class:DiskAllNN
Init	mlpack/disk_allnn/disk_allnn.h	/^  void Init(const Matrix& references_in, fx_module* module_in) {$/;"	f	class:DiskAllNN
Init	mlpack/disk_allnn/disk_allnn_test.cc	/^  void Init() {$/;"	f	class:TestDiskAllNN
Init	mlpack/fastica/fastica.h	/^  int Init(Matrix X_in, struct datanode* module_in) {$/;"	f	class:FastICA
Init	mlpack/hmm/discreteDST.cc	/^void DiscreteDST::Init(int N) {$/;"	f	class:DiscreteDST
Init	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::Init(const Matrix& transmission, const Matrix& emission) {$/;"	f	class:DiscreteHMM
Init	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::Init(const Matrix& transmission,  const ArrayList<Vector>& list_mean_vec,const ArrayList<Matrix>& list_covariance_mat) {$/;"	f	class:GaussianHMM
Init	mlpack/hmm/mixgaussHMM.h	/^  void Init() {$/;"	f	class:MixtureofGaussianHMM
Init	mlpack/hmm/mixtureDST.cc	/^void MixtureGauss::Init(int K, const Matrix& data, const ArrayList<int>& labels) {$/;"	f	class:MixtureGauss
Init	mlpack/hmm/mixtureDST.cc	/^void MixtureGauss::Init(int K, int N) {$/;"	f	class:MixtureGauss
Init	mlpack/infomax_ica/test_infomax_ica.h	/^  void Init(){$/;"	f	class:TestInfomaxICA
Init	mlpack/kde/dualtree_kde.h	/^  void Init(const Matrix &queries, const Matrix &references,$/;"	f	class:DualtreeKde
Init	mlpack/kde/dualtree_kde_cv.h	/^  void Init(const Matrix &references, const Matrix &rset_weights,$/;"	f	class:DualtreeKdeCV
Init	mlpack/kde/dualtree_vkde.h	/^  void Init(const Matrix &queries, const Matrix &references,$/;"	f	class:DualtreeVKde
Init	mlpack/kde/fft_kde.h	/^  void Init(Matrix &qset, Matrix &rset, struct datanode *module_in) {$/;"	f	class:FFTKde
Init	mlpack/kde/fgt_kde.h	/^  void Init(Matrix &qset, Matrix &rset, struct datanode *module_in) {$/;"	f	class:FGTKde
Init	mlpack/kde/general_spacetree.h	/^  void Init(index_t begin_in, index_t count_in) {$/;"	f	class:GeneralBinarySpaceTree
Init	mlpack/kde/kde_cv_stat.h	/^  void Init(const Matrix& dataset, index_t &start, index_t &count) {$/;"	f	class:KdeCVStat
Init	mlpack/kde/kde_cv_stat.h	/^  void Init(const Matrix& dataset, index_t &start, index_t &count) {$/;"	f	class:VKdeCVStat
Init	mlpack/kde/kde_cv_stat.h	/^  void Init(const Matrix& dataset, index_t &start, index_t &count,$/;"	f	class:KdeCVStat
Init	mlpack/kde/kde_cv_stat.h	/^  void Init(const Matrix& dataset, index_t &start, index_t &count,$/;"	f	class:VKdeCVStat
Init	mlpack/kde/kde_cv_stat.h	/^  void Init(const TKernelAux &first_ka, const TKernelAux &second_ka) {$/;"	f	class:KdeCVStat
Init	mlpack/kde/kde_cv_stat.h	/^  void Init(const Vector& center, const TKernelAux &first_ka,$/;"	f	class:KdeCVStat
Init	mlpack/kde/kde_stat.h	/^  void Init() {$/;"	f	class:KdeStat
Init	mlpack/kde/kde_stat.h	/^  void Init() {$/;"	f	class:VKdeStat
Init	mlpack/kde/kde_stat.h	/^  void Init(const Matrix& dataset, index_t &start, index_t &count) {$/;"	f	class:KdeStat
Init	mlpack/kde/kde_stat.h	/^  void Init(const Matrix& dataset, index_t &start, index_t &count) {$/;"	f	class:VKdeStat
Init	mlpack/kde/kde_stat.h	/^  void Init(const Matrix& dataset, index_t &start, index_t &count,$/;"	f	class:KdeStat
Init	mlpack/kde/kde_stat.h	/^  void Init(const Matrix& dataset, index_t &start, index_t &count,$/;"	f	class:VKdeStat
Init	mlpack/kde/kde_stat.h	/^  void Init(const TKernelAux &ka) {$/;"	f	class:KdeStat
Init	mlpack/kde/kde_stat.h	/^  void Init(const Vector& center, const TKernelAux &ka) {$/;"	f	class:KdeStat
Init	mlpack/kde/naive_kde.h	/^  void Init(Matrix &qset, Matrix &rset, Matrix &reference_weights,$/;"	f	class:NaiveKde
Init	mlpack/kde/naive_kde.h	/^  void Init(Matrix &qset, Matrix &rset, struct datanode *module_in) {$/;"	f	class:NaiveKde
Init	mlpack/kde/original_ifgt.h	/^  void Init(Matrix &queries, Matrix &references, struct datanode *module_in) {$/;"	f	class:OriginalIFGT
Init	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::Init(std::string data_file, index_t knns, $/;"	f	class:KernelPCA
Init	mlpack/kernel_pca/kernel_pca_test.cc	/^  void Init() {$/;"	f	class:KernelPCATest
Init	mlpack/mog/mog_em.h	/^  void Init(datanode *mog_em_module) {$/;"	f	class:MoGEM
Init	mlpack/mog/mog_em.h	/^  void Init(index_t num_gauss, index_t dimension) {$/;"	f	class:MoGEM
Init	mlpack/mog/mog_l2e.h	/^  void Init(index_t num_gauss, index_t dimension) {$/;"	f	class:MoGL2E
Init	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::Init(datanode *module, Matrix &data) {$/;"	f	class:MaxFurthestNeighbors
Init	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::Init(fx_module *module) {$/;"	f	class:MaxFurthestNeighbors
Init	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::Init(datanode *module, Matrix &data) {$/;"	f	class:MaxVariance
Init	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::Init(fx_module *module) {$/;"	f	class:MaxVariance
Init	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  void Init(const char *filename_train, const char *filename_test,$/;"	f	class:TestClassSimpleNBC
Init	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::Init(OptimizedFunction *optimized_function, $/;"	f	class:Lbfgs
Init	mlpack/optimization/optimizers.h	/^  void Init(long double (*fun)(Vector&, const Matrix&),$/;"	f	class:NelderMead
Init	mlpack/optimization/optimizers.h	/^  void Init(long double (*fun)(Vector&, const Matrix&, Vector*),$/;"	f	class:QuasiNewton
Init	mlpack/range_search/naive_ortho_range_search.h	/^  void Init(const GenMatrix<T> &data) {$/;"	f	class:NaiveOrthoRangeSearch
Init	mlpack/range_search/ortho_range_search.h	/^  void Init(GenMatrix<T> &dataset, bool make_copy, $/;"	f	class:OrthoRangeSearch
Init	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::Init(fx_module *module, $/;"	f	class:RidgeRegression
Init	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::Init(fx_module *module, const Matrix &predictors, $/;"	f	class:RidgeRegression
Init	mlpack/regression/ridge_regression_test.cc	/^  void Init(fx_module *module) {$/;"	f	class:RidgeRegressionTest
Init	mlpack/series_expansion/farfield_expansion_impl.h	/^void FarFieldExpansion<TKernelAux>::Init(const TKernelAux &ka) {$/;"	f	class:FarFieldExpansion
Init	mlpack/series_expansion/farfield_expansion_impl.h	/^void FarFieldExpansion<TKernelAux>::Init(const Vector& center, $/;"	f	class:FarFieldExpansion
Init	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  void Init(double lambda_in, index_t dimension_in) {$/;"	f	class:InversePowDistGradientKernel
Init	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  void Init(double lambda_in, index_t dimension_in) {$/;"	f	class:InversePowDistKernel
Init	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  void Init(double bandwidth, int max_order, int dim) {$/;"	f	class:InversePowDistGradientKernelAux
Init	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  void Init(double power, int max_order, int dim) {$/;"	f	class:InversePowDistKernelAux
Init	mlpack/series_expansion/kernel_aux.h	/^  void Init(double bandwidth, int max_order, int dim) {$/;"	f	class:EpanKernelAux
Init	mlpack/series_expansion/kernel_aux.h	/^  void Init(double bandwidth, int max_order, int dim) {$/;"	f	class:GaussianKernelAux
Init	mlpack/series_expansion/kernel_aux.h	/^  void Init(double bandwidth, int max_order, int dim) {$/;"	f	class:GaussianKernelMultAux
Init	mlpack/series_expansion/local_expansion_impl.h	/^void LocalExpansion<TKernelAux>::Init(const TKernelAux &ka) {$/;"	f	class:LocalExpansion
Init	mlpack/series_expansion/local_expansion_impl.h	/^void LocalExpansion<TKernelAux>::Init(const Vector& center,$/;"	f	class:LocalExpansion
Init	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^  void MultFarFieldExpansion<TKernelAux>::Init(const TKernelAux &ka) {$/;"	f	class:MultFarFieldExpansion
Init	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^void MultFarFieldExpansion<TKernelAux>::Init(const Vector& center, $/;"	f	class:MultFarFieldExpansion
Init	mlpack/series_expansion/mult_local_expansion_impl.h	/^void MultLocalExpansion<TKernelAux>::Init(const TKernelAux &ka) {$/;"	f	class:MultLocalExpansion
Init	mlpack/series_expansion/mult_local_expansion_impl.h	/^void MultLocalExpansion<TKernelAux>::Init(const Vector& center, $/;"	f	class:MultLocalExpansion
Init	mlpack/series_expansion/mult_series_expansion_aux.h	/^  void Init(int max_order, int dim) {$/;"	f	class:MultSeriesExpansionAux
Init	mlpack/series_expansion/series_expansion_aux.cc	/^void SeriesExpansionAux::Init(int max_order, int dim) {$/;"	f	class:SeriesExpansionAux
Init	mlpack/svm/svm.h	/^  void Init(datanode *node) { \/\/TODO: NULL->node$/;"	f	class:SVMLinearKernel
Init	mlpack/svm/svm.h	/^  void Init(datanode *node) { \/\/TODO: NULL->node$/;"	f	class:SVMRBFKernel
Init	mlpack/svm/svm.h	/^void SVM<TKernel>::Init(int learner_typeid, const Dataset& dataset, datanode *module){$/;"	f	class:SVM
InitAlias	include/fastlib/col/arraylist.h	/^  void InitAlias(Elem *ptr, index_t size) {$/;"	f	class:ArrayList
InitBlank	include/fastlib/data/dataset.h	/^  void InitBlank() {$/;"	f	class:Dataset
InitContinuous	include/fastlib/data/dataset.h	/^  void InitContinuous(const char *name_in) {$/;"	f	class:DatasetFeature
InitCopy	include/fastlib/base/otrav.h	/^  inline void InitCopy(T *dest, const T &src) {$/;"	f	namespace:ot
InitCopy	include/fastlib/col/arraylist.h	/^  void InitCopy(const ArrayList &src, index_t cap) {$/;"	f	class:ArrayList
InitCopy	include/fastlib/col/arraylist.h	/^  void InitCopy(const Elem *src, index_t size) {$/;"	f	class:ArrayList
InitCopy	include/fastlib/col/arraylist.h	/^  void InitCopy(const Elem *src, index_t size, index_t cap) {$/;"	f	class:ArrayList
InitDeserialize	include/fastlib/base/otrav.h	/^  inline size_t InitDeserialize(T *dest, FILE *stream) {$/;"	f	namespace:ot
InitDiagonal	include/fastlib/la/matrix.h	/^  void InitDiagonal(const GenVector<T>& v) {$/;"	f	class:GenMatrix
InitEmptySet	include/fastlib/math/math_lib.h	/^  void InitEmptySet() {$/;"	f	struct:DRange
InitFromData	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::InitFromData(const ArrayList<Vector>& list_data_seq, int numstate) {$/;"	f	class:DiscreteHMM
InitFromData	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::InitFromData(const ArrayList<Matrix>& list_data_seq, int numstate) {$/;"	f	class:GaussianHMM
InitFromData	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::InitFromData(const Matrix& data_seq, const Vector& state_seq)  {$/;"	f	class:GaussianHMM
InitFromFile	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::InitFromFile(const char* profile) {$/;"	f	class:DiscreteHMM
InitFromFile	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::InitFromFile(const char* profile) {$/;"	f	class:GaussianHMM
InitFromFile	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::InitFromFile(const char* profile) {$/;"	f	class:MixtureofGaussianHMM
InitFromFile	mlpack/hmm/mixtureDST.cc	/^void MixtureGauss::InitFromFile(const char* mean_fn, const char* covs_fn, const char* prior_fn) {$/;"	f	class:MixtureGauss
InitFromProfile	mlpack/hmm/mixtureDST.cc	/^void MixtureGauss::InitFromProfile(const ArrayList<Matrix>& matlst, int start, int N) {$/;"	f	class:MixtureGauss
InitGaussParameter	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::InitGaussParameter(int M, const ArrayList<Matrix>& seqs, Matrix* guessTR, ArrayList<Vector>* guessME, ArrayList<Matrix>* guessCO) {$/;"	f	class:GaussianHMM
InitInteger	include/fastlib/data/dataset.h	/^  void InitInteger(const char *name_in) {$/;"	f	class:DatasetFeature
InitNaive	mlpack/allkfn/allkfn.h	/^   void InitNaive(const Matrix& references_in, index_t kfns){$/;"	f	class:AllkFN
InitNaive	mlpack/allkfn/allkfn.h	/^  void InitNaive(const Matrix& queries_in, $/;"	f	class:AllkFN
InitNaive	mlpack/allknn/allknn.h	/^   void InitNaive(const Matrix& references_in, index_t knns){$/;"	f	class:AllkNN
InitNaive	mlpack/allknn/allknn.h	/^  void InitNaive(const Matrix& queries_in, $/;"	f	class:AllkNN
InitNaive	mlpack/allnn/allnn.h	/^  void InitNaive(const Matrix& queries_in, const Matrix& references_in,$/;"	f	class:AllNN
InitNaive	mlpack/allnn/allnn.h	/^  void InitNaive(const Matrix& references_in,$/;"	f	class:AllNN
InitNaive	mlpack/disk_allnn/disk_allnn.h	/^  void InitNaive(const Matrix& queries_in, const Matrix& references_in,$/;"	f	class:DiskAllNN
InitNaive	mlpack/disk_allnn/disk_allnn.h	/^  void InitNaive(const Matrix& references_in,$/;"	f	class:DiskAllNN
InitNominal	include/fastlib/data/dataset.h	/^  void InitNominal(const char *name_in) {$/;"	f	class:DatasetFeature
InitOptimization_	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::InitOptimization_() {$/;"	f	class:Lbfgs
InitPara	mlpack/svm/smo.h	/^  void InitPara(int learner_typeid, ArrayList<double> &param_) {$/;"	f	class:SMO
InitRaw	include/fastlib/col/arraylist.h	/^  Elem *InitRaw(index_t size) {$/;"	f	class:ArrayList
InitRaw	include/fastlib/col/arraylist.h	/^  Elem *InitRaw(index_t size, index_t cap) {$/;"	f	class:ArrayList
InitRepeat	include/fastlib/col/arraylist.h	/^  void InitRepeat(const Elem &elem, index_t size) {$/;"	f	class:ArrayList
InitRepeat	include/fastlib/col/arraylist.h	/^  void InitRepeat(const Elem &elem, index_t size, index_t cap) {$/;"	f	class:ArrayList
InitSteal	include/fastlib/col/arraylist.h	/^  void InitSteal(Elem *ptr, index_t size) {$/;"	f	class:ArrayList
InitSteal	include/fastlib/col/arraylist.h	/^  void InitSteal(Elem *ptr, index_t size, index_t cap) {$/;"	f	class:ArrayList
InitSubAlias	include/fastlib/col/arraylist.h	/^  void InitSubAlias(const ArrayList &src, index_t pos, index_t size) {$/;"	f	class:ArrayList
InitSubCopy	include/fastlib/col/arraylist.h	/^  void InitSubCopy(const ArrayList &src, index_t pos, index_t size) {$/;"	f	class:ArrayList
InitSubCopy	include/fastlib/col/arraylist.h	/^  void InitSubCopy(const ArrayList &src, index_t pos, index_t size,$/;"	f	class:ArrayList
InitSubCopy	mlpack/quicsvd/cosine_tree.cc	/^void InitSubCopy(const ArrayList<int>& src, index_t pos, index_t size,$/;"	f
InitThaw	include/fastlib/base/otrav.h	/^  inline void InitThaw(T *dest, const char *block) {$/;"	f	namespace:ot
InitTrain	mlpack/naive_bayes/simple_nbc.h	/^  void InitTrain(const Matrix& data, datanode* nbc_module) {$/;"	f	class:SimpleNaiveBayesClassifier
InitTrain	mlpack/svm/svm.h	/^void SVM<TKernel>::InitTrain(int learner_typeid, const Dataset& dataset, datanode *module) {$/;"	f	class:SVM
InitUniversalSet	include/fastlib/math/math_lib.h	/^  void InitUniversalSet() {$/;"	f	struct:DRange
InitialPointGenerator	mlpack/mog/mog_l2e.cc	/^void MoGL2E::InitialPointGenerator(double *theta, const Matrix& data,$/;"	f	class:MoGL2E
Insert	include/fastlib/col/arraylist.h	/^  Elem &Insert(index_t pos) {$/;"	f	class:ArrayList
Insert	include/fastlib/col/arraylist.h	/^  void Insert(index_t pos, index_t inc) {$/;"	f	class:ArrayList
InsertCopy	include/fastlib/col/arraylist.h	/^  Elem &InsertCopy(index_t pos, const Elem &src) {$/;"	f	class:ArrayList
InsertRaw	include/fastlib/col/arraylist.h	/^  Elem *InsertRaw(index_t pos, index_t inc = 1) {$/;"	f	class:ArrayList
IntLog2	include/fastlib/math/discrete.h	/^  inline unsigned IntLog2(unsigned i) {$/;"	f	namespace:math
Inv	mlpack/fastica/lin_alg.h	/^  double Inv(double x, double arg) {$/;"	f	namespace:linalg__private
InverseExpert	include/fastlib/la/uselapack.h	/^  inline success_t InverseExpert(f77_integer *pivots, Matrix *LU_in_B_out) {$/;"	f	namespace:la
InverseInit	include/fastlib/la/uselapack.h	/^  inline success_t InverseInit(const Matrix &A, Matrix *B) {$/;"	f	namespace:la
InverseNormalCDF	mlpack/kde/inverse_normal_cdf.h	/^class InverseNormalCDF {$/;"	c
InversePowDistGradientKernel	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^class InversePowDistGradientKernel {$/;"	c
InversePowDistGradientKernelAux	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^class InversePowDistGradientKernelAux {$/;"	c
InversePowDistKernel	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^class InversePowDistKernel {$/;"	c
InversePowDistKernelAux	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^class InversePowDistKernelAux {$/;"	c
InverseRowScale	mlpack/quicsvd/quicsvd.cc	/^void InverseRowScale(const Vector& s, Matrix* A) {$/;"	f
IsDiverging	mlpack/mvu/mvu_objectives_impl.h	/^bool MaxFurthestNeighbors::IsDiverging(double objective) {$/;"	f	class:MaxFurthestNeighbors
IsDiverging	mlpack/mvu/mvu_objectives_impl.h	/^bool MaxVariance::IsDiverging(double objective) {$/;"	f	class:MaxVariance
IsEOF_	include/fastlib/file/textfile.h	/^  bool IsEOF_() {$/;"	f	class:TextTokenizer
IsIntermediateStepOver	mlpack/mvu/mvu_objectives.h	/^  bool IsIntermediateStepOver(Matrix &coordinates, $/;"	f	class:MaxVariance
IsIntermediateStepOver	mlpack/mvu/mvu_objectives_impl.h	/^bool MaxFurthestNeighbors::IsIntermediateStepOver(Matrix &coordinates, $/;"	f	class:MaxFurthestNeighbors
IsLowerBounded	mlpack/svm/smo.h	/^  bool IsLowerBounded(index_t i) {$/;"	f	class:SMO
IsOngrid_	mlpack/kde/fgt_kde.h	/^  int IsOngrid_(ArrayList<int> &old_coords, int delta, $/;"	f	class:FGTKde
IsOptimizationOver	mlpack/mvu/mvu_objectives.h	/^  bool IsOptimizationOver(Matrix &coordinates, $/;"	f	class:MaxVariance
IsOptimizationOver	mlpack/mvu/mvu_objectives_impl.h	/^bool MaxFurthestNeighbors::IsOptimizationOver(Matrix &coordinates, $/;"	f	class:MaxFurthestNeighbors
IsPowerTwo	include/fastlib/math/discrete.h	/^  inline bool IsPowerTwo(TAnyIntegerType i) {$/;"	f	namespace:math
IsUpperBounded	mlpack/svm/smo.h	/^  bool IsUpperBounded(index_t i) {$/;"	f	class:SMO
KALMAN_H	mlpack/kalman/kalman.h	42;"	d
KALMAN_HELPER_H	mlpack/kalman/kalman_helper.h	42;"	d
KCenterClustering	mlpack/kde/original_ifgt.h	/^  double KCenterClustering() {$/;"	f	class:OriginalIFGT
KDE_CV_STAT_H	mlpack/kde/kde_cv_stat.h	33;"	d
KDE_STAT_H	mlpack/kde/kde_stat.h	33;"	d
KERNEL_AUX	mlpack/series_expansion/kernel_aux.h	43;"	d
KERNEL_PCA_H_	mlpack/kernel_pca/kernel_pca.h	6;"	d
KILOBYTE	include/fastlib/base/common.h	139;"	d
KMeans	mlpack/mog/mog_em.cc	/^void MoGEM::KMeans(Matrix& data, ArrayList<Vector> *means,$/;"	f	class:MoGEM
KMeans_	mlpack/mog/mog_l2e.cc	/^void MoGL2E::KMeans_(const Matrix& data, ArrayList<Vector> *means,$/;"	f	class:MoGL2E
KURTOSIS	mlpack/fastica/fastica.h	54;"	d
KalmanFiltTimeInvariantMstUpdate	mlpack/kalman/kalman.cc	/^void KalmanFiltTimeInvariantMstUpdate(const ssm& lds, const Vector& y_t, $/;"	f
KalmanFiltTimeInvariantTimeUpdate	mlpack/kalman/kalman.cc	/^void KalmanFiltTimeInvariantTimeUpdate(const ssm& lds, const Vector& x_hat_t, $/;"	f
KdeCVStat	mlpack/kde/kde_cv_stat.h	/^  KdeCVStat() { }$/;"	f	class:KdeCVStat
KdeCVStat	mlpack/kde/kde_cv_stat.h	/^class KdeCVStat {$/;"	c
KdeStat	mlpack/kde/kde_stat.h	/^  KdeStat() { }$/;"	f	class:KdeStat
KdeStat	mlpack/kde/kde_stat.h	/^class KdeStat {$/;"	c
Kernel	mlpack/svm/smo.h	/^  typedef TKernel Kernel;$/;"	t	class:SMO
Kernel	mlpack/svm/svm.h	/^  typedef TKernel Kernel;$/;"	t	class:SVM
KernelPCA	mlpack/kernel_pca/kernel_pca.h	/^class KernelPCA {$/;"	c
KernelPCATest	mlpack/kernel_pca/kernel_pca_test.cc	/^class KernelPCATest {$/;"	c	file:
Key	include/fastlib/col/heap.h	/^  typedef TKey Key;$/;"	t	class:MinHeap
L16	include/fastlib/base/basic_types.h	10;"	d
L2Err_	mlpack/quicsvd/cosine_tree.h	/^  double L2Err_;$/;"	m	class:CosineNode
L2Error	mlpack/mog/mog_l2e.cc	/^long double MoGL2E::L2Error(const Matrix& data, Vector *gradients) {$/;"	f	class:MoGL2E
L2ErrorForOpt	mlpack/mog/mog_l2e.h	/^  static long double L2ErrorForOpt(Vector& params, const Matrix& data) {$/;"	f	class:MoGL2E
L2ErrorForOpt	mlpack/mog/mog_l2e.h	/^  static long double L2ErrorForOpt(Vector& params,$/;"	f	class:MoGL2E
L32	include/fastlib/base/basic_types.h	14;"	d
L64	include/fastlib/base/basic_types.h	18;"	d
L8	include/fastlib/base/basic_types.h	6;"	d
LA_BLAS_H	include/fastlib/la/blas.h	33;"	d
LA_CLAPACK_H	include/fastlib/la/clapack.h	39;"	d
LA_MATRIX_H	include/fastlib/la/matrix.h	41;"	d
LA_USELAPACK_H	include/fastlib/la/uselapack.h	39;"	d
LBFGS_H_	mlpack/optimization/lbfgs/lbfgs.h	20;"	d
LI	include/fastlib/base/common.h	131;"	d
LI	include/fastlib/base/common.h	133;"	d
LI	include/fastlib/base/common.h	135;"	d
LINEAR_H	include/fastlib/la/la.h	43;"	d
LIN_ALG_H	mlpack/fastica/lin_alg.h	41;"	d
LMetric	include/fastlib/la/la.h	/^  inline double LMetric($/;"	f	namespace:la
LMetric	include/fastlib/tree/bounds.h	/^class LMetric {$/;"	c
LN_10	include/fastlib/math/math_lib.h	/^  const double LN_10 = 2.30258509299404568402;$/;"	v
LN_2	include/fastlib/math/math_lib.h	/^  const double LN_2 = 0.69314718055994530942;$/;"	v
LOCAL_EXPANSION	mlpack/series_expansion/local_expansion.h	44;"	d
LOCAL_EXPANSION_IMPL_H	mlpack/series_expansion/local_expansion_impl.h	37;"	d
LOG10_E	include/fastlib/math/math_lib.h	/^  const double LOG10_E = 0.43429448190325182765;$/;"	v
LOG2_E	include/fastlib/math/math_lib.h	/^  const double LOG2_E = 1.4426950408889634074;$/;"	v
LOGCOSH	mlpack/fastica/fastica.h	52;"	d
LOW_PRIORITY	include/fastlib/par/thread.h	/^    LOW_PRIORITY = 20,$/;"	e	enum:Thread::__anon17
LTSC	include/fastlib/fx/stopwatch.h	53;"	d
LargeLoad	include/fastlib/data/dataset.h	/^  success_t LargeLoad(const char *fname, GenMatrix<Precision> *matrix) {$/;"	f	namespace:data
Lbfgs	mlpack/optimization/lbfgs/lbfgs.h	/^class Lbfgs {$/;"	c
LbfgsTest	mlpack/optimization/lbfgs/test_lbfgs.cc	/^  LbfgsTest(){$/;"	f	class:LbfgsTest
LbfgsTest	mlpack/optimization/lbfgs/test_lbfgs.cc	/^class LbfgsTest {$/;"	c	file:
Learner	include/fastlib/data/crossvalidation.h	/^  typedef TLearner Learner;$/;"	t	class:GeneralCrossValidator
LearnersInit_	mlpack/svm/smo.h	/^void SMO<TKernel>::LearnersInit_(int learner_typeid) {$/;"	f	class:SMO
LeastSquareFit	include/fastlib/la/la.h	/^  inline success_t LeastSquareFit(Matrix &y, Matrix &x, Matrix *a) {$/;"	f	namespace:la
LeastSquareFit	include/fastlib/la/la.h	/^  inline success_t LeastSquareFit(Vector &y, Matrix &x, Vector *a) {$/;"	f	namespace:la
LeastSquareFitTrans	include/fastlib/la/la.h	/^  inline success_t LeastSquareFitTrans(Matrix &y, Matrix &x, Matrix *a) {$/;"	f	namespace:la
LengthEuclidean	include/fastlib/la/uselapack.h	/^  inline double LengthEuclidean(const Vector &x) {$/;"	f	namespace:la
LengthEuclidean	include/fastlib/la/uselapack.h	/^  inline double LengthEuclidean(index_t length, const double *x) {$/;"	f	namespace:la
LineSearch_	mlpack/optimization/optimizers.cc	/^void QuasiNewton::LineSearch_(Vector pold, long double fold,$/;"	f	class:QuasiNewton
Load	mlpack/range_search/data_aux.h	/^  static success_t Load(const char *fname, GenMatrix<T> *matrix) {$/;"	f	namespace:data_aux
LoadAffinityMatrix	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::LoadAffinityMatrix() {$/;"	f	class:KernelPCA
LoadData	mlpack/svm/svm_main.cc	/^int LoadData(Dataset* dataset, String datafilename){$/;"	f
LoadKdTree	include/fastlib/tree/kdtree.h	/^  success_t LoadKdTree(datanode *module,$/;"	f	namespace:tree
LoadModelBatchPredict	mlpack/svm/svm.h	/^void SVM<TKernel>::LoadModelBatchPredict(int learner_typeid, Dataset& testset, String model_filename, String predictedvalue_filename) {$/;"	f	class:SVM
LoadModel_	mlpack/svm/svm.h	/^void SVM<TKernel>::LoadModel_(int learner_typeid, String model_filename) {$/;"	f	class:SVM
LoadProfile	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::LoadProfile(const char* profile) {$/;"	f	class:DiscreteHMM
LoadProfile	mlpack/hmm/gaussianHMM.cc	/^success_t GaussianHMM::LoadProfile(const char* profile, Matrix* trans, ArrayList<Vector>* means, ArrayList<Matrix>* covs) {$/;"	f	class:GaussianHMM
LoadProfile	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::LoadProfile(const char* profile) {$/;"	f	class:GaussianHMM
LoadProfile	mlpack/hmm/mixgaussHMM.cc	/^success_t MixtureofGaussianHMM::LoadProfile(const char* profile, Matrix* trans, ArrayList<MixtureGauss>* mixs) {$/;"	f	class:MixtureofGaussianHMM
LoadProfile	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::LoadProfile(const char* profile) {$/;"	f	class:MixtureofGaussianHMM
LoadTranspose	mlpack/range_search/data_aux.h	/^  static success_t LoadTranspose(const char *fname, GenMatrix<T> *matrix) {$/;"	f	namespace:data_aux
LoadTree	mlpack/range_search/ortho_range_search.h	/^  void LoadTree(const char *load_tree_file_name) {$/;"	f	class:OrthoRangeSearch
LocalExpansion	mlpack/series_expansion/local_expansion.h	/^class LocalExpansion {$/;"	c
Lock	include/fastlib/par/thread.h	/^  void Lock() const {$/;"	f	class:Mutex
Lockable	include/fastlib/par/thread.h	/^  Lockable() {}$/;"	f	class:Lockable
Lockable	include/fastlib/par/thread.h	/^class Lockable : public TContained, public Mutex {$/;"	c
Loglikelihood	mlpack/mog/mog_em.cc	/^long double MoGEM::Loglikelihood(Matrix& data_points, ArrayList<Vector>& means,$/;"	f	class:MoGEM
MATH_DISCRETE_H	include/fastlib/math/discrete.h	41;"	d
MATH_GEOMETRY_H	include/fastlib/math/geometry.h	41;"	d
MATH_KERNEL_H	include/fastlib/math/kernel.h	41;"	d
MATH_MATH_LIB_H	include/fastlib/math/math_lib.h	41;"	d
MATH_STATISTICS_H	include/fastlib/math/statistics.h	41;"	d
MAX_KNNS	mlpack/mvu/mvu_objectives.h	/^  static const index_t MAX_KNNS=30;$/;"	m	class:MaxFurthestNeighbors
MAX_KNNS	mlpack/mvu/mvu_objectives.h	/^  static const index_t MAX_KNNS=30;$/;"	m	class:MaxVariance
MAX_NUM_ITER	mlpack/svm/smo.h	/^const index_t MAX_NUM_ITER = 10000;$/;"	v
MAX_STRIDE	include/fastlib/base/compiler.h	297;"	d
MEGABYTE	include/fastlib/base/common.h	141;"	d
MEM__DEBUG_MEMORY	include/fastlib/base/ccmem.h	51;"	d
MEM__DEGUG_MEMORY	include/fastlib/base/ccmem.h	515;"	d
MGS	mlpack/quicsvd/quicsvd.cc	/^bool MGS(const ArrayList<Vector>& basis, const Vector& newVec, $/;"	f
MLPACK_ALLNN_H_	mlpack/allnn/allnn.h	40;"	d
MOG_EM_H	mlpack/mog/mog_em.h	41;"	d
MOG_L2E_H	mlpack/mog/mog_l2e.h	42;"	d
MULT_FARFIELD_EXPANSION	mlpack/series_expansion/mult_farfield_expansion.h	44;"	d
MULT_FARFIELD_EXPANSION_IMPL_H	mlpack/series_expansion/mult_farfield_expansion_impl.h	37;"	d
MULT_LOCAL_EXPANSION	mlpack/series_expansion/mult_local_expansion.h	44;"	d
MULT_LOCAL_EXPANSION_IMPL_H	mlpack/series_expansion/mult_local_expansion_impl.h	37;"	d
MULT_SERIES_EXPANSION_AUX_H	mlpack/series_expansion/mult_series_expansion_aux.h	36;"	d
MUST_NOT_FAIL	include/fastlib/base/common.h	379;"	d
MUST_NOT_FAIL_MSG	include/fastlib/base/common.h	370;"	d
MUST_PASS	include/fastlib/base/common.h	361;"	d
MUST_PASS_MSG	include/fastlib/base/common.h	352;"	d
MVU_OBJECTIVES_H_	mlpack/mvu/mvu_objectives.h	20;"	d
MakeBoundVector	include/fastlib/tree/kdtree_impl.h	/^    void MakeBoundVector(const GenVector<T>& point, $/;"	f	namespace:tree_kdtree_private
MakeColumnSlice	include/fastlib/la/matrix.h	/^  void MakeColumnSlice(index_t start_col, index_t n_cols_new,$/;"	f	class:GenMatrix
MakeColumnSubvector	include/fastlib/la/matrix.h	/^  void MakeColumnSubvector(index_t col, index_t start_row, index_t n_rows_new,$/;"	f	class:GenMatrix
MakeColumnVector	include/fastlib/la/matrix.h	/^  void MakeColumnVector(index_t col, GenVector<T> *dest) const {$/;"	f	class:GenMatrix
MakeGenMetricTree	mlpack/kde/gen_metric_tree.h	/^  TMetricTree *MakeGenMetricTree(Matrix& matrix, index_t leaf_size,$/;"	f	namespace:proximity
MakeIdentityPermutation	include/fastlib/math/discrete.h	/^  inline void MakeIdentityPermutation($/;"	f	namespace:math
MakeInversePermutation	include/fastlib/math/discrete.h	/^  inline void MakeInversePermutation($/;"	f	namespace:math
MakeKdTreeMidpoint	include/fastlib/tree/kdtree.h	/^    TKdTree *MakeKdTreeMidpoint(GenMatrix<T>& matrix, $/;"	f	namespace:tree
MakeKdTreeMidpoint	include/fastlib/tree/kdtree.h	/^    TKdTree *MakeKdTreeMidpoint(GenMatrix<T>& matrix, index_t leaf_size,$/;"	f	namespace:tree
MakeKdTreeMidpointSelective	include/fastlib/tree/kdtree.h	/^  TKdTree *MakeKdTreeMidpointSelective(GenMatrix<T>& matrix, $/;"	f	namespace:tree
MakeLeafMetricTreeNode	mlpack/kde/gen_metric_tree_impl.h	/^  void MakeLeafMetricTreeNode(const Matrix& matrix,$/;"	f	namespace:tree_gen_metric_tree_private
MakeModel	mlpack/mog/mog_l2e.h	/^  void MakeModel(datanode *mog_l2e_module, double* theta) {$/;"	f	class:MoGL2E
MakeModel	mlpack/mog/mog_l2e.h	/^  void MakeModel(index_t num_mods, index_t dimension, double* theta) {$/;"	f	class:MoGL2E
MakeModelWithGradients	mlpack/mog/mog_l2e.h	/^  void MakeModelWithGradients(index_t num_mods, index_t dimension, double* theta) {$/;"	f	class:MoGL2E
MakeNeighbors_	mlpack/kde/fgt_kde.h	/^  void MakeNeighbors_(int ibox, ArrayList<int> &nsides, int kdis, $/;"	f	class:FGTKde
MakeRandomPermutation	include/fastlib/math/discrete.h	/^  inline void MakeRandomPermutation($/;"	f	namespace:math
MakeReshaped	include/fastlib/la/matrix.h	/^  void MakeReshaped(index_t n_rows_in, index_t n_cols_in,$/;"	f	class:GenMatrix
MakeSubMatrixByColumns	mlpack/fastica/lin_alg.h	/^  void MakeSubMatrixByColumns(Vector column_indices, Matrix A, Matrix *A_sub) {$/;"	f	namespace:linalg__private
MakeSubvector	include/fastlib/la/matrix.h	/^  void MakeSubvector(index_t start_index, index_t len, GenVector* dest) {$/;"	f	class:GenVector
MapInit	mlpack/fastica/lin_alg.h	/^  Matrix* MapInit(double (*function)(double,double),$/;"	f	namespace:linalg__private
MapInit	mlpack/fastica/lin_alg.h	/^  Vector* MapInit(double (*function)(double,double),$/;"	f	namespace:linalg__private
MapOverwrite	mlpack/fastica/lin_alg.h	/^  Matrix* MapOverwrite(double (*function)(double,double),$/;"	f	namespace:linalg__private
MapOverwrite	mlpack/fastica/lin_alg.h	/^  Vector* MapOverwrite(double (*function)(double,double),$/;"	f	namespace:linalg__private
Match	include/fastlib/file/textfile.h	/^  bool Match(const char *exact) {$/;"	f	class:TextTokenizer
MatchDouble	include/fastlib/file/textfile.h	/^  bool MatchDouble() {$/;"	f	class:TextTokenizer
MatchIdentifier	include/fastlib/file/textfile.h	/^  bool MatchIdentifier() {$/;"	f	class:TextTokenizer
MatchInteger	include/fastlib/file/textfile.h	/^  bool MatchInteger() {$/;"	f	class:TextTokenizer
MatchNoCase	include/fastlib/file/textfile.h	/^  bool MatchNoCase(const char *str) {$/;"	f	class:TextTokenizer
MatchNumber	include/fastlib/file/textfile.h	/^  bool MatchNumber() {$/;"	f	class:TextTokenizer
MatchPunct	include/fastlib/file/textfile.h	/^  bool MatchPunct() {$/;"	f	class:TextTokenizer
MatchQuasiIdentifier	include/fastlib/file/textfile.h	/^  bool MatchQuasiIdentifier() {$/;"	f	class:TextTokenizer
MatchString	include/fastlib/file/textfile.h	/^  bool MatchString() {$/;"	f	class:TextTokenizer
MatchType	include/fastlib/file/textfile.h	/^  bool MatchType(TokenType type) {$/;"	f	class:TextTokenizer
Matrix	include/fastlib/la/matrix.h	/^typedef GenMatrix<double> Matrix;$/;"	t
MatrixMapSum	mlpack/fastica/lin_alg.h	/^  Matrix* MatrixMapSum(double (*function)(double,double),$/;"	f	namespace:linalg__private
MatrixPartition	include/fastlib/tree/kdtree_impl.h	/^   index_t MatrixPartition($/;"	f	namespace:tree_kdtree_private
MatrixPartition	mlpack/kde/gen_metric_tree_impl.h	/^  index_t MatrixPartition(Matrix& matrix, index_t first, index_t count,$/;"	f	namespace:tree_gen_metric_tree_private
MaxDelta	include/fastlib/tree/bounds.h	/^ double MaxDelta(const DHrectBound& other, double box_width, int dim)$/;"	f	class:DHrectBound
MaxDistance	include/fastlib/tree/bounds.h	/^  double MaxDistance(const DBallBound& other) const {$/;"	f	class:DBallBound
MaxDistance	include/fastlib/tree/bounds.h	/^  double MaxDistance(const Point& point) const {$/;"	f	class:DBallBound
MaxDistanceSq	include/fastlib/tree/bounds.h	/^  double MaxDistanceSq(const DBallBound& other) const {$/;"	f	class:DBallBound
MaxDistanceSq	include/fastlib/tree/bounds.h	/^  double MaxDistanceSq(const DHrectBound& other) const {$/;"	f	class:DHrectBound
MaxDistanceSq	include/fastlib/tree/bounds.h	/^  double MaxDistanceSq(const Point& point) const {$/;"	f	class:DBallBound
MaxDistanceSq	include/fastlib/tree/bounds.h	/^  double MaxDistanceSq(const Vector& point) const {$/;"	f	class:DHrectBound
MaxDistanceSq	include/fastlib/tree/bounds.h	/^  double MaxDistanceSq(const double *point) const {$/;"	f	class:DHrectBound
MaxDistanceSq	include/fastlib/tree/bounds.h	/^ double MaxDistanceSq(const DHrectBound& other, const Vector& offset) const {$/;"	f	class:DHrectBound
MaxDistanceSq	mlpack/series_expansion/bounds_aux.h	/^  void MaxDistanceSq(const DBallBound < LMetric<t_pow>, TVector > &bound1, $/;"	f	namespace:bounds_aux
MaxDistanceSq	mlpack/series_expansion/bounds_aux.h	/^  void MaxDistanceSq(const DHrectBound<t_pow> &bound1, $/;"	f	namespace:bounds_aux
MaxFurthestNeighbors	mlpack/mvu/mvu_objectives.h	/^class MaxFurthestNeighbors {$/;"	c
MaxL1Distance	mlpack/series_expansion/bounds_aux.h	/^  double MaxL1Distance$/;"	f	namespace:bounds_aux
MaxL1Distance	mlpack/series_expansion/bounds_aux.h	/^  double MaxL1Distance(const DHrectBound<t_pow> &bound1,$/;"	f	namespace:bounds_aux
MaxNodeDistSq_	mlpack/allkfn/allkfn.h	/^  double MaxNodeDistSq_ (TreeType* query_node, TreeType* reference_node) {$/;"	f	class:AllkFN
MaxSideLengthOfBoundingBox	mlpack/series_expansion/bounds_aux.h	/^  double MaxSideLengthOfBoundingBox$/;"	f	namespace:bounds_aux
MaxSideLengthOfBoundingBox	mlpack/series_expansion/bounds_aux.h	/^  double MaxSideLengthOfBoundingBox(const DHrectBound<t_pow> &bound) {$/;"	f	namespace:bounds_aux
MaxUnnormValue	include/fastlib/math/kernel.h	/^  double MaxUnnormValue() {$/;"	f	class:EpanKernel
MaxUnnormValue	include/fastlib/math/kernel.h	/^  double MaxUnnormValue() {$/;"	f	class:GaussianKernel
MaxVariance	mlpack/mvu/mvu_objectives.h	/^class MaxVariance {$/;"	c
MaxVarianceUtils	mlpack/mvu/mvu_objectives.h	/^class MaxVarianceUtils {$/;"	c
MaxWith	include/fastlib/math/math_lib.h	/^  void MaxWith(Value incoming_val) {$/;"	f	class:MinMaxVal
MaxWith	include/fastlib/math/math_lib.h	/^  void MaxWith(const DRange& range) {$/;"	f	struct:DRange
MaxWith	include/fastlib/math/math_lib.h	/^  void MaxWith(double v) {$/;"	f	struct:DRange
Metric	include/fastlib/tree/bounds.h	/^  typedef TMetric Metric;$/;"	t	class:DBallBound
MidDistance	include/fastlib/tree/bounds.h	/^  double MidDistance(const DBallBound& other) const {$/;"	f	class:DBallBound
MidDistance	include/fastlib/tree/bounds.h	/^  double MidDistance(const Point& point) const {$/;"	f	class:DBallBound
MidDistanceSq	include/fastlib/tree/bounds.h	/^  double MidDistanceSq(const DBallBound& other) const {$/;"	f	class:DBallBound
MidDistanceSq	include/fastlib/tree/bounds.h	/^  double MidDistanceSq(const DHrectBound& other) const {$/;"	f	class:DHrectBound
MinDelta	include/fastlib/tree/bounds.h	/^ double MinDelta(const DHrectBound& other, double box_width, int dim)$/;"	f	class:DHrectBound
MinDistance	include/fastlib/tree/bounds.h	/^  double MinDistance(const DBallBound& other) const {$/;"	f	class:DBallBound
MinDistance	include/fastlib/tree/bounds.h	/^  double MinDistance(const Point& point) const {$/;"	f	class:DBallBound
MinDistanceSq	include/fastlib/tree/bounds.h	/^  double MinDistanceSq(const DBallBound& other) const {$/;"	f	class:DBallBound
MinDistanceSq	include/fastlib/tree/bounds.h	/^  double MinDistanceSq(const DHrectBound& other) const {$/;"	f	class:DHrectBound
MinDistanceSq	include/fastlib/tree/bounds.h	/^  double MinDistanceSq(const Point& point) const {$/;"	f	class:DBallBound
MinDistanceSq	include/fastlib/tree/bounds.h	/^  double MinDistanceSq(const Vector& point) const {$/;"	f	class:DHrectBound
MinDistanceSq	include/fastlib/tree/bounds.h	/^  double MinDistanceSq(const double *mpoint) const {$/;"	f	class:DHrectBound
MinDistanceSq	include/fastlib/tree/bounds.h	/^ double MinDistanceSq(const DHrectBound& other, const Vector& offset) const {$/;"	f	class:DHrectBound
MinHeap	include/fastlib/col/heap.h	/^class MinHeap {$/;"	c
MinMaxVal	include/fastlib/math/math_lib.h	/^class MinMaxVal {$/;"	c
MinNodeDistSq_	mlpack/allknn/allknn.h	/^  double MinNodeDistSq_ (TreeType* query_node, TreeType* reference_node) {$/;"	f	class:AllkNN
MinNodeDistSq_	mlpack/allnn/allnn.h	/^  double MinNodeDistSq_(TreeType* query_node, TreeType* reference_node) {$/;"	f	class:AllNN
MinNodeDistSq_	mlpack/disk_allnn/disk_allnn.h	/^  double MinNodeDistSq_(TreeType* query_node, TreeType* reference_node) {$/;"	f	class:DiskAllNN
MinPointNodeDistSq_	mlpack/allknn/allknn.h	/^  double MinPointNodeDistSq_ (const Vector& query_point, TreeType* reference_node) {$/;"	f	class:AllkNN
MinToMid	include/fastlib/tree/bounds.h	/^  double MinToMid(const DBallBound& other) const {$/;"	f	class:DBallBound
MinToMidSq	include/fastlib/tree/bounds.h	/^  double MinToMidSq(const DBallBound& other) const {$/;"	f	class:DBallBound
MinToMidSq	include/fastlib/tree/bounds.h	/^  double MinToMidSq(const DHrectBound& other) const {$/;"	f	class:DHrectBound
MinWith	include/fastlib/math/math_lib.h	/^  void MinWith(Value incoming_val) {$/;"	f	class:MinMaxVal
MinWith	include/fastlib/math/math_lib.h	/^  void MinWith(const DRange& range) {$/;"	f	struct:DRange
MinWith	include/fastlib/math/math_lib.h	/^  void MinWith(double v) {$/;"	f	struct:DRange
MinimaxDistance	include/fastlib/tree/bounds.h	/^  double MinimaxDistance(const DBallBound& other) const {$/;"	f	class:DBallBound
MinimaxDistanceSq	include/fastlib/tree/bounds.h	/^  double MinimaxDistanceSq(const DBallBound& other) const {$/;"	f	class:DBallBound
MinimaxDistanceSq	include/fastlib/tree/bounds.h	/^  double MinimaxDistanceSq(const DHrectBound& other) const {$/;"	f	class:DHrectBound
MinusArg	mlpack/fastica/lin_alg.h	/^  double MinusArg(double x, double arg) {$/;"	f	namespace:linalg__private
MixField	mlpack/series_expansion/farfield_expansion_impl.h	/^double FarFieldExpansion<TKernelAux>::MixField(const Matrix &data, $/;"	f	class:FarFieldExpansion
MixtureGauss	mlpack/hmm/mixtureDST.h	/^class MixtureGauss {$/;"	c
MixtureofGaussianHMM	mlpack/hmm/mixgaussHMM.h	/^class MixtureofGaussianHMM {$/;"	c
MoGEM	mlpack/mog/mog_em.h	/^  MoGEM() {$/;"	f	class:MoGEM
MoGEM	mlpack/mog/mog_em.h	/^class MoGEM {$/;"	c
MoGL2E	mlpack/mog/mog_l2e.h	/^  MoGL2E() {$/;"	f	class:MoGL2E
MoGL2E	mlpack/mog/mog_l2e.h	/^class MoGL2E {$/;"	c
ModSimplex_	mlpack/optimization/optimizers.cc	/^long double NelderMead::ModSimplex_(double **pts, long double *y,$/;"	f	class:NelderMead
MonteCarloPrunable	mlpack/kde/dualtree_kde_cv_common.h	/^  static bool MonteCarloPrunable$/;"	f	class:DualtreeKdeCVCommon
MonteCarloPrunable_	mlpack/kde/dualtree_kde_common.h	/^  static bool MonteCarloPrunable_$/;"	f	class:DualtreeKdeCommon
MoreLines	include/fastlib/file/textfile.h	/^  bool MoreLines() {$/;"	f	class:TextLineReader
MoreTokens	include/fastlib/file/textfile.h	/^  bool MoreTokens() const {$/;"	f	class:TextTokenizer
Move	include/fastlib/base/ccmem.h	/^  inline T *Move(T *dest, const T *src, size_t elems = 1) {$/;"	f	namespace:mem
Move	include/fastlib/base/ccmem.h	/^  inline T *Move(T *dest, const U *src, size_t elems = 1) {$/;"	f	namespace:mem
MoveBytes	include/fastlib/base/ccmem.h	/^  inline T *MoveBytes(T *dest, const U *src, size_t bytes) {$/;"	f	namespace:mem
MulExpert	include/fastlib/la/uselapack.h	/^  inline void MulExpert($/;"	f	namespace:la
MulInit	include/fastlib/la/uselapack.h	/^  inline void MulInit(const Matrix &A, const Matrix &B, Matrix *C) {$/;"	f	namespace:la
MulInit	include/fastlib/la/uselapack.h	/^  inline void MulInit(const Matrix &A, const Vector &x, Vector *y) {$/;"	f	namespace:la
MulInit	include/fastlib/la/uselapack.h	/^  inline void MulInit(const Vector &x, const Matrix &A, Vector *y) {$/;"	f	namespace:la
MulInit	mlpack/fastica/lin_alg.h	/^  Matrix* MulInit(const Matrix* const A, const Matrix* const B,$/;"	f	namespace:linalg__private
MulInit	mlpack/fastica/lin_alg.h	/^  Vector* MulInit(const Matrix* const A, const Vector* const u,$/;"	f	namespace:linalg__private
MulInit	mlpack/fastica/lin_alg.h	/^  Vector* MulInit(const Vector* const u, const Matrix* const A,$/;"	f	namespace:linalg__private
MulInit	mlpack/quicsvd/quicsvd.cc	/^void MulInit(const ArrayList<Vector>& A, const Matrix& B,$/;"	f
MulOverwrite	include/fastlib/la/uselapack.h	/^  inline void MulOverwrite(const Matrix &A, const Matrix &B, Matrix *C) {$/;"	f	namespace:la
MulOverwrite	include/fastlib/la/uselapack.h	/^  inline void MulOverwrite(const Matrix &A, const Vector &x, Vector *y) {$/;"	f	namespace:la
MulOverwrite	include/fastlib/la/uselapack.h	/^  inline void MulOverwrite(const Vector &x, const Matrix &A, Vector *y) {$/;"	f	namespace:la
MulOverwrite	mlpack/fastica/lin_alg.h	/^  Matrix* MulOverwrite(const Matrix* const A, const Matrix* const B,$/;"	f	namespace:linalg__private
MulTransAInit	include/fastlib/la/uselapack.h	/^  inline void MulTransAInit($/;"	f	namespace:la
MulTransAInit	mlpack/fastica/lin_alg.h	/^  Matrix* MulTransAInit(const Matrix* const A, const Matrix* const B,$/;"	f	namespace:linalg__private
MulTransAOverwrite	include/fastlib/la/uselapack.h	/^  inline void MulTransAOverwrite($/;"	f	namespace:la
MulTransAOverwrite	mlpack/fastica/lin_alg.h	/^  Matrix* MulTransAOverwrite(const Matrix* const A, const Matrix* const B,$/;"	f	namespace:linalg__private
MulTransBInit	include/fastlib/la/uselapack.h	/^  inline void MulTransBInit($/;"	f	namespace:la
MulTransBInit	mlpack/fastica/lin_alg.h	/^  Matrix* MulTransBInit(const Matrix* const A, const Matrix* const B,$/;"	f	namespace:linalg__private
MulTransBOverwrite	include/fastlib/la/uselapack.h	/^  inline void MulTransBOverwrite($/;"	f	namespace:la
MulTransBOverwrite	mlpack/fastica/lin_alg.h	/^  Matrix* MulTransBOverwrite(const Matrix* const A, Matrix* const B,$/;"	f	namespace:linalg__private
MulTransCInit	mlpack/quicsvd/quicsvd.cc	/^void MulTransCInit(const ArrayList<Vector>& A, const Matrix& B,$/;"	f
MultFarFieldExpansion	mlpack/series_expansion/mult_farfield_expansion.h	/^class MultFarFieldExpansion {$/;"	c
MultLocalExpansion	mlpack/series_expansion/mult_local_expansion.h	/^class MultLocalExpansion {$/;"	c
MultSeriesExpansionAux	mlpack/series_expansion/mult_series_expansion_aux.h	/^class MultSeriesExpansionAux {$/;"	c
MultiDimIndexInSingleArray_	mlpack/kde/fgt_kde.h	/^  int MultiDimIndexInSingleArray_(ArrayList<int> &coords, $/;"	f	class:FGTKde
MultiplePointsGenerator	mlpack/mog/mog_l2e.cc	/^void MoGL2E::MultiplePointsGenerator(double **points,$/;"	f	class:MoGL2E
Mutex	include/fastlib/par/thread.h	/^  Mutex() {$/;"	f	class:Mutex
Mutex	include/fastlib/par/thread.h	/^  Mutex(DummyRecursiveAttribute v) {$/;"	f	class:Mutex
Mutex	include/fastlib/par/thread.h	/^class Mutex {$/;"	c
MyMulExpert	mlpack/hmm/support.cc	/^  double MyMulExpert(const Vector& x, const Matrix& A, const Vector& y) {$/;"	f	namespace:hmm_support
NAIVE_KDE_H	mlpack/kde/naive_kde.h	41;"	d
NAIVE_ORTHO_RANGE_SEARCH_H	mlpack/range_search/naive_ortho_range_search.h	10;"	d
NATURAL_STRIDE	include/fastlib/base/compiler.h	/^  static const int NATURAL_STRIDE =$/;"	m	struct:compiler_strideof
NBC_H	mlpack/naive_bayes/simple_nbc.h	43;"	d
NEED_OTRAV_IMPL	include/fastlib/base/otrav.h	1489;"	d
NEED_OTRAV_IMPL	include/fastlib/base/otrav.h	1491;"	d
NOMINAL	include/fastlib/data/dataset.h	/^      NOMINAL$/;"	e	enum:DatasetFeature::Type
NONFATAL	include/fastlib/base/common.h	223;"	d
NOP	include/fastlib/base/common.h	73;"	d
NORMAL_DENSITY	mlpack/hmm/support.cc	/^  double NORMAL_DENSITY(const Vector& x, const Vector& mean, const Matrix& inv_cov, double det_cov) {$/;"	f	namespace:hmm_support
NORMAL_PRIORITY	include/fastlib/par/thread.h	/^    NORMAL_PRIORITY = 0$/;"	e	enum:Thread::__anon17
NOTIFY	include/fastlib/base/common.h	241;"	d
NOTIFY_STAR	include/fastlib/base/common.h	232;"	d
NO_COMPILER_DEFS	include/fastlib/base/compiler.h	70;"	d
NUM_FOR_SHRINKING	mlpack/svm/smo.h	/^const index_t NUM_FOR_SHRINKING = 1000;$/;"	v
NaiveKde	mlpack/kde/naive_kde.h	/^  NaiveKde() {    $/;"	f	class:NaiveKde
NaiveKde	mlpack/kde/naive_kde.h	/^class NaiveKde {$/;"	c
NaiveOrthoRangeSearch	mlpack/range_search/naive_ortho_range_search.h	/^  NaiveOrthoRangeSearch() {}$/;"	f	class:NaiveOrthoRangeSearch
NaiveOrthoRangeSearch	mlpack/range_search/naive_ortho_range_search.h	/^class NaiveOrthoRangeSearch {$/;"	c
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {$/;"	f	class:ot__private::Printer
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::Aliaser
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::Copier
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::Deserializer
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::Destructor
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::Freezer
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::Relocator
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::Serializer
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::TransientDestructor
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::TransientUnstructor
Name	include/fastlib/base/otrav_impl.h	/^    void Name(const char *name, const T &obj) {}$/;"	f	class:ot__private::Unstructor
NelderMead	mlpack/optimization/optimizers.h	/^  NelderMead() {$/;"	f	class:NelderMead
NelderMead	mlpack/optimization/optimizers.h	/^class NelderMead {$/;"	c
Node	include/fastlib/col/queue.h	/^    Node() : next(NULL) { }$/;"	f	struct:Queue::Node
Node	include/fastlib/col/queue.h	/^    Node(const T& value) : data(value), next(NULL) {}$/;"	f	struct:Queue::Node
Node	include/fastlib/col/queue.h	/^  struct Node {$/;"	s	class:Queue
NonNegativeProjection	mlpack/optimization/lbfgs/optimization_utils.h	/^  static void NonNegativeProjection(Matrix *data) {$/;"	f	class:OptUtils
NormalizeDensities	mlpack/kde/original_ifgt.h	/^  void NormalizeDensities() {$/;"	f	class:OriginalIFGT
NormalizeDensities_	mlpack/kde/fgt_kde.h	/^  void NormalizeDensities_() {$/;"	f	class:FGTKde
OBJECT_TRAVERSAL	include/fastlib/base/otrav.h	1312;"	d
OBJECT_TRAVERSAL	include/fastlib/col/col_string.h	/^  OBJECT_TRAVERSAL(String) {$/;"	f	class:String
OBJECT_TRAVERSAL	include/fastlib/col/heap.h	/^  OBJECT_TRAVERSAL(MinHeap) {$/;"	f	class:MinHeap
OBJECT_TRAVERSAL	include/fastlib/data/dataset.h	/^  OBJECT_TRAVERSAL(Dataset) {$/;"	f	class:Dataset
OBJECT_TRAVERSAL	include/fastlib/data/dataset.h	/^  OBJECT_TRAVERSAL(DatasetFeature) {$/;"	f	class:DatasetFeature
OBJECT_TRAVERSAL	include/fastlib/data/dataset.h	/^  OBJECT_TRAVERSAL(DatasetInfo) {$/;"	f	class:DatasetInfo
OBJECT_TRAVERSAL	include/fastlib/math/kernel.h	/^  OBJECT_TRAVERSAL(EpanKernel) {$/;"	f	class:EpanKernel
OBJECT_TRAVERSAL	include/fastlib/math/kernel.h	/^  OBJECT_TRAVERSAL(GaussianKernel) {$/;"	f	class:GaussianKernel
OBJECT_TRAVERSAL	include/fastlib/math/kernel.h	/^  OBJECT_TRAVERSAL(GaussianStarKernel) {$/;"	f	class:GaussianStarKernel
OBJECT_TRAVERSAL	include/fastlib/math/math_lib.h	/^  OBJECT_TRAVERSAL(DRange) {$/;"	f	struct:DRange
OBJECT_TRAVERSAL	include/fastlib/math/math_lib.h	/^  OBJECT_TRAVERSAL(MinMaxVal) {$/;"	f	class:MinMaxVal
OBJECT_TRAVERSAL	include/fastlib/tree/bounds.h	/^  OBJECT_TRAVERSAL(DBallBound) {$/;"	f	class:DBallBound
OBJECT_TRAVERSAL	include/fastlib/tree/bounds.h	/^  OBJECT_TRAVERSAL(DHrectBound) {$/;"	f	class:DHrectBound
OBJECT_TRAVERSAL_CORE	include/fastlib/base/otrav.h	1240;"	d
OBJECT_TRAVERSAL_DEPRECATED_COPIES	include/fastlib/base/otrav.h	1350;"	d
OBJECT_TRAVERSAL_DEPRECATED_COPIES	include/fastlib/col/arraylist.h	/^  OBJECT_TRAVERSAL_DEPRECATED_COPIES(ArrayList) {$/;"	f	class:ArrayList
OBJECT_TRAVERSAL_NO_COPIES	include/fastlib/base/otrav.h	1330;"	d
OBJECT_TRAVERSAL_ONLY	include/fastlib/base/otrav.h	1210;"	d
OBJECT_TRAVERSAL_ONLY	include/fastlib/la/matrix.h	/^  OBJECT_TRAVERSAL_ONLY(GenMatrix) {$/;"	f	class:GenMatrix
OBJECT_TRAVERSAL_ONLY	include/fastlib/la/matrix.h	/^  OBJECT_TRAVERSAL_ONLY(GenVector) {$/;"	f	class:GenVector
OBJECT_TRAVERSAL_SHALLOW	include/fastlib/base/otrav.h	1381;"	d
OBJECT_TRAVERSAL_SHALLOW	include/fastlib/col/heap.h	/^    OBJECT_TRAVERSAL_SHALLOW(Entry) {$/;"	f	struct:MinHeap::Entry
OPTIMIZATION_UTILS_H_	mlpack/optimization/lbfgs/optimization_utils.h	20;"	d
OPTIMIZERS_H	mlpack/optimization/optimizers.h	41;"	d
ORIGINAL_IFGT_H	mlpack/kde/original_ifgt.h	104;"	d
ORTHO_RANGE_SEARCH_H	mlpack/range_search/ortho_range_search.h	9;"	d
OT_ALIAS_METHODS	include/fastlib/base/otrav.h	853;"	d
OT_ALLOC	include/fastlib/base/otrav.h	467;"	d
OT_ALLOC_EXPERT	include/fastlib/base/otrav.h	448;"	d
OT_ARRAY	include/fastlib/base/otrav.h	413;"	d
OT_ARRAY_EXPERT	include/fastlib/base/otrav.h	391;"	d
OT_ARRAY_IMPL	include/fastlib/base/otrav.h	242;"	d
OT_BECOME_ALIAS	include/fastlib/base/otrav.h	766;"	d
OT_BECOME_ALIAS	include/fastlib/col/arraylist.h	/^  OT_BECOME_ALIAS(ArrayList) {$/;"	f	class:ArrayList
OT_BECOME_NON_ALIAS	include/fastlib/base/otrav.h	740;"	d
OT_CONSTRUCTOR	include/fastlib/base/otrav.h	533;"	d
OT_COPY_CONSTRUCTOR	include/fastlib/base/otrav.h	572;"	d
OT_COPY_METHOD	include/fastlib/base/otrav.h	636;"	d
OT_CUSTOM_DESTRUCT	include/fastlib/base/otrav.h	1482;"	d
OT_CUSTOM_PRINT	include/fastlib/base/otrav.h	1431;"	d
OT_CUSTOM_PRINT	include/fastlib/col/col_string.h	/^  OT_CUSTOM_PRINT(String) {$/;"	f	class:String
OT_CUSTOM_PRINT_OBJ	include/fastlib/base/otrav.h	87;"	d
OT_DEBUG_DESTRUCT_OK	include/fastlib/base/otrav.h	1072;"	d
OT_DEBUG_INIT_OK	include/fastlib/base/otrav.h	958;"	d
OT_DEBUG_MODIFY_OK	include/fastlib/base/otrav.h	1016;"	d
OT_DEF	include/fastlib/base/otrav.h	2030;"	d
OT_DEF	include/fastlib/col/intmap.h	/^  OT_DEF(DenseIntMap) {$/;"	f	class:DenseIntMap
OT_DEF	include/fastlib/col/rangeset.h	/^  OT_DEF(RangeSet) {$/;"	f	class:RangeSet
OT_DEF	include/fastlib/tree/spacetree.h	/^  OT_DEF(BinarySpaceTree) {$/;"	f	class:BinarySpaceTree
OT_DEF	mlpack/hmm/discreteHMM.h	/^  OT_DEF(DiscreteHMM) {$/;"	f	class:DiscreteHMM
OT_DEF	mlpack/hmm/gaussianHMM.h	/^  OT_DEF(GaussianHMM) {$/;"	f	class:GaussianHMM
OT_DEF	mlpack/hmm/mixgaussHMM.h	/^  OT_DEF(MixtureofGaussianHMM) {$/;"	f	class:MixtureofGaussianHMM
OT_DEF	mlpack/hmm/mixtureDST.h	/^  OT_DEF(MixtureGauss) {$/;"	f	class:MixtureGauss
OT_DEF	mlpack/kde/general_spacetree.h	/^  OT_DEF(GeneralBinarySpaceTree) {$/;"	f	class:GeneralBinarySpaceTree
OT_DEF	mlpack/series_expansion/farfield_expansion.h	/^  OT_DEF(FarFieldExpansion) {$/;"	f	class:FarFieldExpansion
OT_DEF	mlpack/series_expansion/local_expansion.h	/^  OT_DEF(LocalExpansion) {$/;"	f	class:LocalExpansion
OT_DEF	mlpack/series_expansion/mult_farfield_expansion.h	/^  OT_DEF(MultFarFieldExpansion) {$/;"	f	class:MultFarFieldExpansion
OT_DEF	mlpack/series_expansion/mult_local_expansion.h	/^  OT_DEF(MultLocalExpansion) {$/;"	f	class:MultLocalExpansion
OT_DEFAULT_CONSTRUCT	include/fastlib/base/otrav.h	910;"	d
OT_DEFAULT_CONSTRUCT	include/fastlib/col/arraylist.h	/^  OT_DEFAULT_CONSTRUCT(ArrayList) {$/;"	f	class:ArrayList
OT_DEF_BASIC	include/fastlib/base/otrav.h	2031;"	d
OT_DEF_BASIC	include/fastlib/col/rangeset.h	/^    OT_DEF_BASIC(Range) {$/;"	f	struct:RangeSet::Range
OT_DEF_BASIC	mlpack/allkfn/allkfn.h	/^    OT_DEF_BASIC(QueryStat) {$/;"	f	class:AllkFN::QueryStat
OT_DEF_BASIC	mlpack/allknn/allknn.h	/^    OT_DEF_BASIC(QueryStat) {$/;"	f	class:AllkNN::QueryStat
OT_DEF_BASIC	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  OT_DEF_BASIC(InversePowDistGradientKernelAux) {$/;"	f	class:InversePowDistGradientKernelAux
OT_DEF_BASIC	mlpack/series_expansion/kernel_aux.h	/^  OT_DEF_BASIC(EpanKernelAux) {$/;"	f	class:EpanKernelAux
OT_DEF_BASIC	mlpack/series_expansion/kernel_aux.h	/^  OT_DEF_BASIC(GaussianKernelAux) {$/;"	f	class:GaussianKernelAux
OT_DEF_BASIC	mlpack/series_expansion/kernel_aux.h	/^  OT_DEF_BASIC(GaussianKernelMultAux) {$/;"	f	class:GaussianKernelMultAux
OT_DEF_BASIC	mlpack/series_expansion/mult_series_expansion_aux.h	/^  OT_DEF_BASIC(MultSeriesExpansionAux) {$/;"	f	class:MultSeriesExpansionAux
OT_DEF_BASIC	mlpack/series_expansion/series_expansion_aux.h	/^  OT_DEF_BASIC(SeriesExpansionAux) {$/;"	f	class:SeriesExpansionAux
OT_DEPRECATED_COPY_CONSTRUCTOR	include/fastlib/base/otrav.h	593;"	d
OT_DESTRUCTOR	include/fastlib/base/otrav.h	551;"	d
OT_ENUM	include/fastlib/base/otrav.h	221;"	d
OT_ENUM_EXPERT	include/fastlib/base/otrav.h	198;"	d
OT_ENUM_VAL	include/fastlib/base/otrav.h	136;"	d
OT_FIX	include/fastlib/base/otrav.h	2028;"	d
OT_FREEZE_METHODS	include/fastlib/base/otrav.h	681;"	d
OT_IS_ALIAS	include/fastlib/base/otrav.h	796;"	d
OT_IS_ALIAS	include/fastlib/col/arraylist.h	/^  OT_IS_ALIAS(ArrayList) {$/;"	f	class:ArrayList
OT_MALLOC_ARRAY	include/fastlib/base/otrav.h	2025;"	d
OT_MY_ARRAY	include/fastlib/base/otrav.h	2024;"	d
OT_MY_OBJECT	include/fastlib/base/otrav.h	2023;"	d
OT_OBJ	include/fastlib/base/otrav.h	125;"	d
OT_PRINT_METHOD	include/fastlib/base/otrav.h	659;"	d
OT_PTR	include/fastlib/base/otrav.h	344;"	d
OT_PTR_EXPERT	include/fastlib/base/otrav.h	326;"	d
OT_PTR_NULLABLE	include/fastlib/base/otrav.h	2026;"	d
OT_REFILL_TRANSIENTS	include/fastlib/base/otrav.h	1136;"	d
OT_REFILL_TRANSIENTS	include/fastlib/col/arraylist.h	/^  OT_REFILL_TRANSIENTS(ArrayList) {$/;"	f	class:ArrayList
OT_REFILL_TRANSIENTS	include/fastlib/la/matrix.h	/^  OT_REFILL_TRANSIENTS(GenMatrix) {$/;"	f	class:GenMatrix
OT_REFILL_TRANSIENTS	include/fastlib/la/matrix.h	/^  OT_REFILL_TRANSIENTS(GenVector) {$/;"	f	class:GenVector
OT_RENEW_METHOD	include/fastlib/base/otrav.h	616;"	d
OT_SERIALIZE_METHODS	include/fastlib/base/otrav.h	705;"	d
OT_STATIC_ARRAY	include/fastlib/base/otrav.h	295;"	d
OT_STATIC_ARRAY_EXPERT	include/fastlib/base/otrav.h	280;"	d
OT_STR	include/fastlib/base/otrav.h	517;"	d
OT_STR_EXPERT	include/fastlib/base/otrav.h	501;"	d
OT_TRANSIENTS	include/fastlib/base/otrav.h	1185;"	d
OT_TRANSIENTS	include/fastlib/col/arraylist.h	/^  OT_TRANSIENTS(ArrayList) {$/;"	f	class:ArrayList
OT__Aliasable	include/fastlib/base/otrav_impl.h	/^inline bool OT__Aliasable(const T *ot__obj) { return false; }$/;"	f
OT__BecomeAlias	include/fastlib/base/otrav_impl.h	/^inline void OT__BecomeAlias(T *ot__obj) {$/;"	f
OT__BecomeNonAlias	include/fastlib/base/otrav_impl.h	/^inline void OT__BecomeNonAlias(T *ot__obj) {}$/;"	f
OT__DebugDestructOK	include/fastlib/base/otrav_impl.h	/^inline bool OT__DebugDestructOK(T *ot__obj) {$/;"	f
OT__DebugInitOK	include/fastlib/base/otrav_impl.h	/^inline bool OT__DebugInitOK(T *ot__obj) {$/;"	f
OT__DebugModifyOK	include/fastlib/base/otrav_impl.h	/^inline bool OT__DebugModifyOK(T *ot__obj) {$/;"	f
OT__DefaultConstruct	include/fastlib/base/otrav_impl.h	/^inline void OT__DefaultConstruct(T *ot__obj) {$/;"	f
OT__IsAlias	include/fastlib/base/otrav_impl.h	/^inline bool OT__IsAlias(T *ot__obj) { return false; }$/;"	f
OT__MAKE_SHALLOW	include/fastlib/base/otrav_impl.h	116;"	d
OT__MAKE_SHALLOW	include/fastlib/base/otrav_impl.h	126;"	d
OT__NonConstPtr	include/fastlib/base/otrav_impl.h	/^inline bool OT__NonConstPtr(const T *ot__obj) {$/;"	f
OT__PreTraverse	include/fastlib/base/otrav_impl.h	/^inline bool OT__PreTraverse(T *ot__dest, const T *ot__src,$/;"	f
OT__RefillTransients	include/fastlib/base/otrav_impl.h	/^inline void OT__RefillTransients(T *ot__obj) {$/;"	f
OT__Shallow	include/fastlib/base/otrav_impl.h	/^inline bool OT__Shallow(const T *const *ot__obj) { return true; }$/;"	f
OT__Shallow	include/fastlib/base/otrav_impl.h	/^inline bool OT__Shallow(const T *ot__obj) { return false; }$/;"	f
OT__ShallowOrPtr	include/fastlib/base/otrav_impl.h	/^inline bool OT__ShallowOrPtr(T *const *ot__obj) { return true; }$/;"	f
OT__ShallowOrPtr	include/fastlib/base/otrav_impl.h	/^inline bool OT__ShallowOrPtr(const T *ot__obj) {$/;"	f
OT__TraverseObject	include/fastlib/base/otrav_impl.h	/^inline void OT__TraverseObject(T *ot__obj, TVisitor *ot__visitor) {$/;"	f
OT__TraverseTransients	include/fastlib/base/otrav_impl.h	/^inline void OT__TraverseTransients(T *ot__obj, TVisitor *ot__visitor) {}$/;"	f
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Aliaser
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Copier
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Deserializer
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Destructor
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Freezer
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Printer
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Relocator
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Serializer
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::TransientDestructor
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::TransientUnstructor
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T &obj) {$/;"	f	class:ot__private::Unstructor
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T *&ptr) {$/;"	f	class:ot__private::Freezer
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T *&ptr) {$/;"	f	class:ot__private::Serializer
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T *&ptr) {$/;"	f	class:ot__private::TransientUnstructor
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T *&ptr) {$/;"	f	class:ot__private::Unstructor
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(T *ptr) {$/;"	f	class:ot__private::Printer
Obj	include/fastlib/base/otrav_impl.h	/^    void Obj(const char *str) {$/;"	f	class:ot__private::Printer
Open	include/fastlib/file/textfile.h	/^  success_t Open(const char *fname) {$/;"	f	class:TextWriter
OptUtils	mlpack/optimization/lbfgs/optimization_utils.h	/^class OptUtils {$/;"	c
Optimize	mlpack/kde/bandwidth_lscv.h	/^  static void Optimize(const Matrix &references,$/;"	f	class:BandwidthLSCV
OrderForConvertingFromFarFieldToLocal	mlpack/series_expansion/kernel_aux.h	/^  int OrderForConvertingFromFarFieldToLocal$/;"	f	class:EpanKernelAux
OrderForConvertingFromFarFieldToLocal	mlpack/series_expansion/kernel_aux.h	/^  int OrderForConvertingFromFarFieldToLocal$/;"	f	class:GaussianKernelAux
OrderForConvertingFromFarFieldToLocal	mlpack/series_expansion/kernel_aux.h	/^  int OrderForConvertingFromFarFieldToLocal$/;"	f	class:GaussianKernelMultAux
OrderForConvertingToLocal	mlpack/series_expansion/farfield_expansion_impl.h	/^OrderForConvertingToLocal(const TBound &far_field_region,$/;"	f	class:FarFieldExpansion
OrderForConvertingToLocal	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^OrderForConvertingToLocal(const TBound &far_field_region,$/;"	f	class:MultFarFieldExpansion
OrderForConvolving	mlpack/series_expansion/farfield_expansion_impl.h	/^int FarFieldExpansion<TKernelAux>::OrderForConvolving$/;"	f	class:FarFieldExpansion
OrderForConvolvingFarField	mlpack/series_expansion/kernel_aux.h	/^  int OrderForConvolvingFarField(const TBound &far_field_region, $/;"	f	class:GaussianKernelAux
OrderForEvaluating	mlpack/series_expansion/farfield_expansion_impl.h	/^int FarFieldExpansion<TKernelAux>::OrderForEvaluating$/;"	f	class:FarFieldExpansion
OrderForEvaluating	mlpack/series_expansion/local_expansion_impl.h	/^int LocalExpansion<TKernelAux>::OrderForEvaluating$/;"	f	class:LocalExpansion
OrderForEvaluating	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^int MultFarFieldExpansion<TKernelAux>::OrderForEvaluating$/;"	f	class:MultFarFieldExpansion
OrderForEvaluating	mlpack/series_expansion/mult_local_expansion_impl.h	/^int MultLocalExpansion<TKernelAux>::OrderForEvaluating$/;"	f	class:MultLocalExpansion
OrderForEvaluatingFarField	mlpack/series_expansion/kernel_aux.h	/^  int OrderForEvaluatingFarField$/;"	f	class:EpanKernelAux
OrderForEvaluatingFarField	mlpack/series_expansion/kernel_aux.h	/^  int OrderForEvaluatingFarField$/;"	f	class:GaussianKernelMultAux
OrderForEvaluatingFarField	mlpack/series_expansion/kernel_aux.h	/^  int OrderForEvaluatingFarField(const TBound &far_field_region, $/;"	f	class:GaussianKernelAux
OrderForEvaluatingLocal	mlpack/series_expansion/kernel_aux.h	/^  int OrderForEvaluatingLocal$/;"	f	class:EpanKernelAux
OrderForEvaluatingLocal	mlpack/series_expansion/kernel_aux.h	/^  int OrderForEvaluatingLocal$/;"	f	class:GaussianKernelAux
OrderForEvaluatingLocal	mlpack/series_expansion/kernel_aux.h	/^  int OrderForEvaluatingLocal(const TBound &far_field_region, $/;"	f	class:GaussianKernelMultAux
OriginalIFGT	mlpack/kde/original_ifgt.h	/^  OriginalIFGT() {}$/;"	f	class:OriginalIFGT
OriginalIFGT	mlpack/kde/original_ifgt.h	/^class OriginalIFGT {$/;"	c
OrthoRangeSearch	mlpack/range_search/ortho_range_search.h	/^  OrthoRangeSearch() {$/;"	f	class:OrthoRangeSearch
OrthoRangeSearch	mlpack/range_search/ortho_range_search.h	/^class OrthoRangeSearch {$/;"	c
Orthogonalize	mlpack/fastica/lin_alg.h	/^  void Orthogonalize(const Matrix W_old, Matrix *W) {$/;"	f	namespace:linalg__private
OuterConfidenceInterval	mlpack/kde/dualtree_kde_common.h	/^  static double OuterConfidenceInterval$/;"	f	class:DualtreeKdeCommon
OutputOrhogonalRangeSearchResults	mlpack/range_search/ortho_range_search_main.cc	/^void OutputOrhogonalRangeSearchResults(const GenMatrix<bool> &search_results,$/;"	f
OutputResults	mlpack/mog/mog_em.h	/^  void OutputResults(ArrayList<double> *results) {$/;"	f	class:MoGEM
OutputResults	mlpack/mog/mog_l2e.h	/^  void OutputResults(ArrayList<double> *results) {$/;"	f	class:MoGL2E
Own	include/fastlib/la/matrix.h	/^  void Own(GenMatrix* other) {$/;"	f	class:GenMatrix
Own	include/fastlib/la/matrix.h	/^  void Own(GenVector* other) {$/;"	f	class:GenVector
Own	include/fastlib/la/matrix.h	/^  void Own(T *in_ptr, index_t in_length) {$/;"	f	class:GenVector
Own	include/fastlib/la/matrix.h	/^  void Own(T *ptr_in, index_t n_rows_in, index_t n_cols_in) {$/;"	f	class:GenMatrix
OwnMatrix	include/fastlib/data/dataset.h	/^  void OwnMatrix(Matrix* matrix_in) {$/;"	f	class:Dataset
PARAMETERS	mlpack/svm/svm.h	/^  struct PARAMETERS {$/;"	s	class:SVM
PAR_GRAIN_H	include/fastlib/par/grain.h	46;"	d
PAR_TASK_H	include/fastlib/par/task.h	41;"	d
PAR_THREAD_H	include/fastlib/par/thread.h	40;"	d
PASSED	include/fastlib/base/common.h	337;"	d
PI	include/fastlib/math/math_lib.h	/^  const double PI = 3.141592653589793238462643383279;$/;"	v
PI_2	include/fastlib/math/math_lib.h	/^  const double PI_2 = 1.57079632679489661923;$/;"	v
PLUExpert	include/fastlib/la/uselapack.h	/^  inline success_t PLUExpert(f77_integer *pivots, Matrix *A_in_LU_out) {$/;"	f	namespace:la
PREFERRED_POWER	include/fastlib/tree/bounds.h	/^  static const int PREFERRED_POWER = t_pow;$/;"	m	class:DHrectBound
PREFERRED_STRIDE	include/fastlib/base/compiler.h	/^  static const int PREFERRED_STRIDE =$/;"	m	struct:compiler_strideof
PRINTER__PRIMITIVE_OBJ	include/fastlib/base/otrav_impl.h	316;"	d
PRINTER__PRIMITIVE_OBJ	include/fastlib/base/otrav_impl.h	324;"	d
PROFILE_ONLY	include/fastlib/base/debug.h	93;"	d
PROFILE_ONLY	include/fastlib/base/debug.h	95;"	d
PUNCT	include/fastlib/file/textfile.h	/^    PUNCT,$/;"	e	enum:TextTokenizer::TokenType
P_HIGH	mlpack/kde/inverse_normal_cdf.h	66;"	d
P_LOW	mlpack/kde/inverse_normal_cdf.h	64;"	d
ParentIndex_	include/fastlib/col/heap.h	/^  static index_t ParentIndex_(index_t i) {$/;"	f	class:MinHeap
Peek	include/fastlib/file/textfile.h	/^  String& Peek() {$/;"	f	class:TextLineReader
Peek	include/fastlib/file/textfile.h	/^  const String& Peek() const {$/;"	f	class:TextLineReader
Peek	include/fastlib/file/textfile.h	/^  const String& Peek() const {$/;"	f	class:TextTokenizer
PeekType	include/fastlib/file/textfile.h	/^  TokenType PeekType() const {$/;"	f	class:TextTokenizer
PeriodicMaxDistanceSq	include/fastlib/tree/bounds.h	/^ double PeriodicMaxDistanceSq(const DHrectBound& other, const Vector& box_size)$/;"	f	class:DHrectBound
PeriodicMaxDistanceSq	include/fastlib/tree/bounds.h	/^ double PeriodicMaxDistanceSq(const Vector& point, const Vector& box_size)$/;"	f	class:DHrectBound
PeriodicMinDistanceSq	include/fastlib/tree/bounds.h	/^ double PeriodicMinDistanceSq(const DHrectBound& other, const Vector& box_size)$/;"	f	class:DHrectBound
PeriodicMinDistanceSq	include/fastlib/tree/bounds.h	/^double PeriodicMinDistanceSq(const Vector& point, const Vector& box_size)$/;"	f	class:DHrectBound
Plus	mlpack/fastica/lin_alg.h	/^  double Plus(double x, double arg) {$/;"	f	namespace:linalg__private
Point	include/fastlib/tree/bounds.h	/^  typedef TPoint Point;$/;"	t	class:DBallBound
PointerAbsoluteAddress	include/fastlib/base/deprecated.h	/^  inline ptrdiff_t *PointerAbsoluteAddress(const T *ptr) {$/;"	f	namespace:mem
PointerAdd	include/fastlib/base/deprecated.h	/^  inline T *PointerAdd(const T *ptr, ptrdiff_t bytes) {$/;"	f	namespace:mem
PointerDiff	include/fastlib/base/deprecated.h	/^  inline ptrdiff_t *PointerDiff(const T *lhs, const U *rhs) {$/;"	f	namespace:mem
PointerFreeze	include/fastlib/base/otrav.h	/^  void PointerFreeze(const T &obj, char *block) {$/;"	f	namespace:ot
PointerFrozenSize	include/fastlib/base/otrav.h	/^  size_t PointerFrozenSize(const T &obj) {$/;"	f	namespace:ot
PointerRefreeze	include/fastlib/base/otrav.h	/^  void PointerRefreeze(const T *src, char *dest) {$/;"	f	namespace:ot
PointerRelocate	include/fastlib/base/otrav.h	/^  void PointerRelocate(const char *old_loc, char *new_loc) {$/;"	f	namespace:ot
PointerThaw	include/fastlib/base/otrav.h	/^  T *PointerThaw(char *block) {$/;"	f	namespace:ot
PointersEqual	include/fastlib/base/deprecated.h	/^  inline bool PointersEqual(const T *lhs, const U *rhs) {$/;"	f	namespace:mem
Poison	include/fastlib/base/ccmem.h	/^  inline T *Poison(T *array, size_t elems) {$/;"	f	namespace:mem
Poison	include/fastlib/base/ccmem.h	/^  inline T *Poison(T *ptr) {$/;"	f	namespace:mem
PoisonBytes	include/fastlib/base/ccmem.h	/^  T *PoisonBytes(T *array, size_t bytes) {$/;"	f	namespace:mem
Pop	include/fastlib/col/heap.h	/^  Value Pop() {$/;"	f	class:MinHeap
Pop	include/fastlib/col/queue.h	/^  T Pop() {$/;"	f	class:Queue
Pop	include/fastlib/par/grain.h	/^  Grain *Pop() {$/;"	f	class:GrainQueue
PopBack	include/fastlib/col/arraylist.h	/^  void PopBack(index_t dec = 1) {$/;"	f	class:ArrayList
PopBackInit	include/fastlib/col/arraylist.h	/^  void PopBackInit(Elem *dest) {$/;"	f	class:ArrayList
PopBackPtr	include/fastlib/col/arraylist.h	/^  Elem *PopBackPtr() {$/;"	f	class:ArrayList
PopBackRaw	include/fastlib/col/arraylist.h	/^  void PopBackRaw(index_t dec = 1) {$/;"	f	class:ArrayList
PopOnly	include/fastlib/col/heap.h	/^  void PopOnly() {$/;"	f	class:MinHeap
PopOnly	include/fastlib/col/queue.h	/^  void PopOnly() {$/;"	f	class:Queue
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len) {}$/;"	f	class:ot__private::Deserializer
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Aliaser
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Copier
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Destructor
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Freezer
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Relocator
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Serializer
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::TransientDestructor
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::TransientUnstructor
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Unstructor
PostArray	include/fastlib/base/otrav_impl.h	/^    void PostArray(T *ptr, index_t len,$/;"	f	class:ot__private::Printer
PostProcess	mlpack/kde/dualtree_kde_impl.h	/^void DualtreeKde<TKernelAux>::PostProcess(Tree *qnode) {$/;"	f	class:DualtreeKde
PostProcess	mlpack/kde/dualtree_vkde_impl.h	/^void DualtreeVKde<TKernel>::PostProcess(Tree *qnode) {$/;"	f	class:DualtreeVKde
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Printer
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::Aliaser
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::Copier
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::Deserializer
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::Destructor
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::Freezer
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::Relocator
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::Serializer
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::TransientDestructor
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::TransientUnstructor
PostStaticArray	include/fastlib/base/otrav_impl.h	/^    void PostStaticArray(T *ptr, index_t len) {}$/;"	f	class:ot__private::Unstructor
Pow	include/fastlib/math/math_lib.h	/^  inline double Pow(double d) {$/;"	f	namespace:math
PowAbs	include/fastlib/math/math_lib.h	/^  inline double PowAbs(double d) {$/;"	f	namespace:math
PowDistance	include/fastlib/tree/bounds.h	/^  static double PowDistance(const Vector& a, const Vector& b) {$/;"	f	class:LMetric
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Aliaser
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Copier
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Deserializer
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Destructor
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Freezer
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Relocator
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Serializer
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::TransientDestructor
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::TransientUnstructor
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *&ptr, index_t len,$/;"	f	class:ot__private::Unstructor
PreArray	include/fastlib/base/otrav_impl.h	/^    bool PreArray(T *ptr, index_t len,$/;"	f	class:ot__private::Printer
PreProcess	mlpack/kde/dualtree_kde_cv_impl.h	/^void DualtreeKdeCV<TKernelAux>::PreProcess(Tree *node) {$/;"	f	class:DualtreeKdeCV
PreProcess	mlpack/kde/dualtree_kde_impl.h	/^void DualtreeKde<TKernelAux>::PreProcess(Tree *node) {$/;"	f	class:DualtreeKde
PreProcess	mlpack/kde/dualtree_vkde_impl.h	/^void DualtreeVKde<TKernel>::PreProcess(Tree *node, bool reference_side) {$/;"	f	class:DualtreeVKde
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T **ptr, index_t len) {$/;"	f	class:ot__private::TransientUnstructor
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T **ptr, index_t len) {$/;"	f	class:ot__private::Unstructor
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Aliaser
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Copier
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Deserializer
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Destructor
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Freezer
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Printer
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Relocator
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Serializer
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::TransientDestructor
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::TransientUnstructor
PreStaticArray	include/fastlib/base/otrav_impl.h	/^    bool PreStaticArray(T *ptr, index_t len) {$/;"	f	class:ot__private::Unstructor
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Aliaser
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Freezer
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Printer
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Relocator
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::TransientUnstructor
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Unstructor
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Copier
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Deserializer
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Destructor
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Serializer
PreTraverse	include/fastlib/base/otrav_impl.h	/^    bool PreTraverse(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::TransientDestructor
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T **dest, const T **src, index_t len) {$/;"	f	class:ot__private::Deserializer
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T **dest, const T **src, index_t len) {$/;"	f	class:ot__private::Serializer
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Aliaser
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Freezer
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Printer
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Relocator
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::TransientUnstructor
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) { return false; }$/;"	f	class:ot__private::Unstructor
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Copier
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Deserializer
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Destructor
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::Serializer
PreUntraversed	include/fastlib/base/otrav_impl.h	/^    bool PreUntraversed(T *dest, const T *src, index_t len) {$/;"	f	class:ot__private::TransientDestructor
Predict	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::Predict(const Matrix &dataset, $/;"	f	class:RidgeRegression
Predict	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::Predict(const Matrix &dataset, Vector *new_predictions) {$/;"	f	class:RidgeRegression
Predict	mlpack/svm/svm.h	/^double SVM<TKernel>::Predict(int learner_typeid, const Vector& datum) {$/;"	f	class:SVM
Print	include/fastlib/base/otrav.h	/^  const char *Print(const T &obj, const char *name, FILE *stream = stdout) {$/;"	f	namespace:ot
Print	include/fastlib/base/otrav.h	/^  void Print(const T &obj, FILE *stream = stdout) {$/;"	f	namespace:ot
Print	include/fastlib/tree/spacetree.h	/^  void Print() const {$/;"	f	class:BinarySpaceTree
Print	mlpack/kde/general_spacetree.h	/^  void Print() const {$/;"	f	class:GeneralBinarySpaceTree
PrintDebug	include/fastlib/la/matrix.h	/^  void PrintDebug(const char *name = "", FILE *stream = stderr) const {$/;"	f	class:GenMatrix
PrintDebug	include/fastlib/la/matrix.h	/^  void PrintDebug(const char *name = "", FILE *stream = stderr) const {$/;"	f	class:GenVector
PrintDebug	mlpack/kde/dualtree_kde.h	/^  void PrintDebug() {$/;"	f	class:DualtreeKde
PrintDebug	mlpack/kde/dualtree_vkde.h	/^  void PrintDebug() {$/;"	f	class:DualtreeVKde
PrintDebug	mlpack/kde/fft_kde.h	/^  void PrintDebug() {$/;"	f	class:FFTKde
PrintDebug	mlpack/kde/fgt_kde.h	/^  void PrintDebug() {$/;"	f	class:FGTKde
PrintDebug	mlpack/kde/naive_kde.h	/^  void PrintDebug() {$/;"	f	class:NaiveKde
PrintDebug	mlpack/kde/original_ifgt.h	/^  void PrintDebug() {$/;"	f	class:OriginalIFGT
PrintDebug	mlpack/series_expansion/farfield_expansion_impl.h	/^void FarFieldExpansion<TKernelAux>::PrintDebug(const char *name, $/;"	f	class:FarFieldExpansion
PrintDebug	mlpack/series_expansion/local_expansion_impl.h	/^void LocalExpansion<TKernelAux>::PrintDebug(const char *name, $/;"	f	class:LocalExpansion
PrintDebug	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^void MultFarFieldExpansion<TKernelAux>::PrintDebug$/;"	f	class:MultFarFieldExpansion
PrintDebug	mlpack/series_expansion/mult_local_expansion_impl.h	/^void MultLocalExpansion<TKernelAux>::PrintDebug(const char *name, $/;"	f	class:MultLocalExpansion
PrintDebug	mlpack/series_expansion/mult_series_expansion_aux.h	/^  void PrintDebug(const char *name="", FILE *stream=stderr) const {$/;"	f	class:MultSeriesExpansionAux
PrintDebug	mlpack/series_expansion/series_expansion_aux.cc	/^void SeriesExpansionAux::PrintDebug(const char *name, FILE *stream) const {$/;"	f	class:SeriesExpansionAux
Printer	include/fastlib/base/otrav_impl.h	/^    Printer(const T &obj, const char *name, FILE *stream)$/;"	f	class:ot__private::Printer
Printer	include/fastlib/base/otrav_impl.h	/^  class Printer {$/;"	c	namespace:ot__private
Project	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::Project(Matrix *coordinates) {$/;"	f	class:MaxFurthestNeighbors
Project	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::Project(Matrix *coordinates) {$/;"	f	class:MaxVariance
Prunable	mlpack/kde/dualtree_kde_common.h	/^  static bool Prunable(TTree *qnode, TTree *rnode, double probability, $/;"	f	class:DualtreeKdeCommon
Prunable	mlpack/kde/dualtree_kde_cv_common.h	/^  static bool Prunable(TTree *qnode, TTree *rnode, double probability, $/;"	f	class:DualtreeKdeCVCommon
PrunableEnhanced_	mlpack/kde/dualtree_kde_cv_impl.h	/^bool DualtreeKdeCV<TKernelAux>::PrunableEnhanced_$/;"	f	class:DualtreeKdeCV
PrunableEnhanced_	mlpack/kde/dualtree_kde_impl.h	/^bool DualtreeKde<TKernelAux>::PrunableEnhanced_$/;"	f	class:DualtreeKde
PruneStatus	mlpack/range_search/ortho_range_search.h	/^  enum PruneStatus {SUBSUME, INCONCLUSIVE, EXCLUDE};$/;"	g	class:OrthoRangeSearch
PtrAbsAddr	include/fastlib/base/ccmem.h	/^  inline ptrdiff_t PtrAbsAddr(const T *ptr) {$/;"	f	namespace:mem
PtrAddBytes	include/fastlib/base/ccmem.h	/^  inline T *PtrAddBytes(T *ptr, ptrdiff_t bytes) {$/;"	f	namespace:mem
PtrAddBytes	include/fastlib/base/ccmem.h	/^  inline const T *PtrAddBytes(const T *ptr, ptrdiff_t bytes) {$/;"	f	namespace:mem
PtrDiffBytes	include/fastlib/base/ccmem.h	/^  inline ptrdiff_t PtrDiffBytes(const T *lhs, const U *rhs) {$/;"	f	namespace:mem
PtrsEqual	include/fastlib/base/ccmem.h	/^  inline bool PtrsEqual(const T *lhs, const U *rhs) {$/;"	f	namespace:mem
PushBack	include/fastlib/col/arraylist.h	/^  Elem &PushBack() {$/;"	f	class:ArrayList
PushBack	include/fastlib/col/arraylist.h	/^  void PushBack(index_t inc) {$/;"	f	class:ArrayList
PushBackCopy	include/fastlib/col/arraylist.h	/^  Elem &PushBackCopy(const Elem &src) {$/;"	f	class:ArrayList
PushBackRaw	include/fastlib/col/arraylist.h	/^  Elem *PushBackRaw(index_t inc = 1) {$/;"	f	class:ArrayList
Put	include/fastlib/col/heap.h	/^  void Put(Key key, Value value) {$/;"	f	class:MinHeap
Put	include/fastlib/par/grain.h	/^  void Put(double difficulty, Grain *grain) {$/;"	f	class:GrainQueue
QUICSVD_COSINE_TREE_H	mlpack/quicsvd/cosine_tree.h	15;"	d
QUICSVD_QUICSVD_H	mlpack/quicsvd/quicsvd.h	15;"	d
QuasiNewton	mlpack/optimization/optimizers.h	/^  QuasiNewton(){$/;"	f	class:QuasiNewton
QuasiNewton	mlpack/optimization/optimizers.h	/^class QuasiNewton {$/;"	c
QueryStat	mlpack/allkfn/allkfn.h	/^  class QueryStat {$/;"	c	class:AllkFN
QueryStat	mlpack/allknn/allknn.h	/^  class QueryStat {$/;"	c	class:AllkNN
QueryStat	mlpack/allnn/allnn.h	/^    QueryStat() {$/;"	f	class:AllNN::QueryStat
QueryStat	mlpack/allnn/allnn.h	/^  class QueryStat {$/;"	c	class:AllNN
QueryStat	mlpack/disk_allnn/disk_allnn.h	/^    QueryStat() {$/;"	f	class:DiskAllNN::QueryStat
QueryStat	mlpack/disk_allnn/disk_allnn.h	/^  class QueryStat {$/;"	c	class:DiskAllNN
Queue	include/fastlib/col/queue.h	/^  Queue() { DEBUG_POISON_PTR(tailp_); }$/;"	f	class:Queue
Queue	include/fastlib/col/queue.h	/^class Queue {$/;"	c
QuicSVD	mlpack/quicsvd/quicsvd.cc	/^QuicSVD::QuicSVD(const Matrix& A, double targetRelErr) : root_(A) {$/;"	f	class:QuicSVD
QuicSVD	mlpack/quicsvd/quicsvd.h	/^class QuicSVD {$/;"	c
QuicSVDTest	mlpack/quicsvd/quicsvd.h	/^  QuicSVDTest() {$/;"	f	class:QuicSVDTest
QuicSVDTest	mlpack/quicsvd/quicsvd.h	/^class QuicSVDTest {$/;"	c
RAND_NORMAL_01	mlpack/hmm/support.cc	/^  double RAND_NORMAL_01() {$/;"	f	namespace:hmm_support
RAND_NORMAL_01_INIT	mlpack/hmm/support.cc	/^  void RAND_NORMAL_01_INIT(int N, Vector* v) {$/;"	f	namespace:hmm_support
RAND_NORMAL_INIT	mlpack/hmm/support.cc	/^  void RAND_NORMAL_INIT(const Vector& mean, const Matrix& cov, Vector* v) {$/;"	f	namespace:hmm_support
RAND_UNIFORM	mlpack/hmm/support.cc	/^  double RAND_UNIFORM(double a, double b) {$/;"	f	namespace:hmm_support
RAND_UNIFORM_01	mlpack/hmm/support.cc	/^  double RAND_UNIFORM_01() {$/;"	f	namespace:hmm_support
RDTSC	include/fastlib/fx/stopwatch.h	60;"	d
READY	include/fastlib/par/thread.h	/^  enum {UNINIT, READY, ATTACHED, DETACHED, DONE} status_;$/;"	e	enum:Thread::__anon18
REF	include/fastlib/base/compiler.h	349;"	d
REF	include/fastlib/base/compiler.h	351;"	d
REINTERPRET_CAST	include/fastlib/base/compiler.h	336;"	d
RIDGE_REGRESSION_H_	mlpack/regression/ridge_regression.h	2;"	d
RIDGE_REGRESSION_UTIL_H	mlpack/regression/ridge_regression_util.h	2;"	d
RUNNING	mlpack/quicsvd/kernel_matrix_generator.cc	84;"	d	file:
RandInt	include/fastlib/math/math_lib.h	/^  inline int RandInt(int hi_exclusive) {$/;"	f	namespace:math
RandInt	include/fastlib/math/math_lib.h	/^  inline int RandInt(int lo, int hi_exclusive) {$/;"	f	namespace:math
RandMatrix	mlpack/fastica/lin_alg.h	/^  void RandMatrix(index_t n_rows, index_t n_cols, Matrix *A) {$/;"	f	namespace:linalg__private
RandNormalInit	mlpack/fastica/lin_alg.h	/^  Matrix* RandNormalInit(index_t d, index_t n, Matrix* A) {$/;"	f	namespace:linalg__private
RandVector	mlpack/fastica/lin_alg.h	/^  void RandVector(Vector &v) {$/;"	f	namespace:linalg__private
RandVector	mlpack/kalman/kalman_helper.cc	/^void RandVector(Vector &v) {  $/;"	f
RandVector	mlpack/kalman/kalman_helper.cc	/^void RandVector(const Matrix& noise_mat, Vector &v) {  $/;"	f
Random	include/fastlib/math/math_lib.h	/^  inline double Random() {$/;"	f	namespace:math
Random	include/fastlib/math/math_lib.h	/^  inline double Random(double lo, double hi) {$/;"	f	namespace:math
RandomSubMatrix	mlpack/fastica/fastica.h	/^  index_t RandomSubMatrix(index_t n, double percent_cut, Matrix X, Matrix* X_sub) {$/;"	f	class:FastICA
RandomizedDistanceSqEuclidean	mlpack/series_expansion/bounds_aux.h	/^  double RandomizedDistanceSqEuclidean(index_t length, const double *a, $/;"	f	namespace:bounds_aux
Range	include/fastlib/col/rangeset.h	/^  struct Range {$/;"	s	class:RangeSet
RangeDistance	include/fastlib/tree/bounds.h	/^  DRange RangeDistance(const DBallBound& other) const {$/;"	f	class:DBallBound
RangeDistanceSq	include/fastlib/tree/bounds.h	/^  DRange RangeDistanceSq(const DBallBound& other) const {$/;"	f	class:DBallBound
RangeDistanceSq	include/fastlib/tree/bounds.h	/^  DRange RangeDistanceSq(const DHrectBound& other) const {$/;"	f	class:DHrectBound
RangeDistanceSq	include/fastlib/tree/bounds.h	/^  DRange RangeDistanceSq(const Vector& point) const {$/;"	f	class:DHrectBound
RangeSet	include/fastlib/col/rangeset.h	/^class RangeSet {$/;"	c
RangeUnnormOnSq	include/fastlib/math/kernel.h	/^  DRange RangeUnnormOnSq(const DRange& range) const {$/;"	f	class:EpanKernel
RangeUnnormOnSq	include/fastlib/math/kernel.h	/^  DRange RangeUnnormOnSq(const DRange& range) const {$/;"	f	class:GaussianKernel
RangeUnnormOnSq	include/fastlib/math/kernel.h	/^  DRange RangeUnnormOnSq(const DRange& range) const {$/;"	f	class:GaussianStarKernel
RangeUnnormOnSq	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  DRange RangeUnnormOnSq(const DRange &range) const {$/;"	f	class:InversePowDistKernel
RawLMetric	include/fastlib/la/la.h	/^  inline double RawLMetric($/;"	f	namespace:la
ReInitTargetValues	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::ReInitTargetValues(const Matrix &input_data,$/;"	f	class:RidgeRegression
ReInitTargetValues	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::ReInitTargetValues(const Matrix &target_values_in) {$/;"	f	class:RidgeRegression
ReadStrLen_	include/fastlib/base/otrav_impl.h	/^    index_t ReadStrLen_() {$/;"	f	class:ot__private::Deserializer
Read_	include/fastlib/base/otrav_impl.h	/^    void Read_(T *ptr, index_t elems = 1) {$/;"	f	class:ot__private::Deserializer
Realloc	include/fastlib/base/ccmem.h	/^  inline T *Realloc(T *array, size_t elems) {$/;"	f	namespace:mem
ReallocBytes	include/fastlib/base/ccmem.h	/^  inline T *ReallocBytes(T *array, size_t bytes) {$/;"	f	namespace:mem
ReconstructGradient_	mlpack/svm/smo.h	/^void SMO<TKernel>::ReconstructGradient_(int learner_typeid) {$/;"	f	class:SMO
RecursiveMutex	include/fastlib/par/thread.h	/^  RecursiveMutex() : Mutex(DummyRecursiveAttribute()) {}$/;"	f	class:RecursiveMutex
RecursiveMutex	include/fastlib/par/thread.h	/^class RecursiveMutex : public Mutex {$/;"	c
RefineBoundStatistics	mlpack/kde/dualtree_kde_common.h	/^  static void RefineBoundStatistics(index_t q, TTree *qnode, $/;"	f	class:DualtreeKdeCommon
RefineBoundStatistics	mlpack/kde/kde_stat.h	/^  void RefineBoundStatistics(const KdeStat &left_child_stat,$/;"	f	class:KdeStat
RefineBoundStatistics	mlpack/kde/kde_stat.h	/^  void RefineBoundStatistics(const VKdeStat &left_child_stat,$/;"	f	class:VKdeStat
RefineCoeffs	mlpack/series_expansion/farfield_expansion_impl.h	/^void FarFieldExpansion<TKernelAux>::RefineCoeffs(const Matrix& data, $/;"	f	class:FarFieldExpansion
RefineCoeffs	mlpack/series_expansion/local_expansion.h	/^  void RefineCoeffs(const Matrix& data, const Vector& weights,$/;"	f	class:LocalExpansion
RefineCoeffs	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^void MultFarFieldExpansion<TKernelAux>::RefineCoeffs(const Matrix& data, $/;"	f	class:MultFarFieldExpansion
RefineCoeffs	mlpack/series_expansion/mult_local_expansion.h	/^  void RefineCoeffs(const Matrix& data, const Vector& weights,$/;"	f	class:MultLocalExpansion
RegularizationTerm_	mlpack/mog/mog_l2e.cc	/^long double MoGL2E::RegularizationTerm_(Vector *g_reg){$/;"	f	class:MoGL2E
ReleasePointer	include/fastlib/col/arraylist.h	/^  Elem *ReleasePointer() {$/;"	f	class:ArrayList
ReleasePtr	include/fastlib/col/arraylist.h	/^  Elem *ReleasePtr() {$/;"	f	class:ArrayList
Relocator	include/fastlib/base/otrav_impl.h	/^    Relocator(char *block, const T *orig) {$/;"	f	class:ot__private::Relocator
Relocator	include/fastlib/base/otrav_impl.h	/^  class Relocator {$/;"	c	namespace:ot__private
Remove	include/fastlib/col/arraylist.h	/^  void Remove(index_t pos, index_t dec = 1) {$/;"	f	class:ArrayList
RemoveInit	include/fastlib/col/arraylist.h	/^  void RemoveInit(index_t pos, Elem *dest) {$/;"	f	class:ArrayList
RemoveMean	mlpack/optimization/lbfgs/optimization_utils.h	/^  static void RemoveMean(Matrix *data) {$/;"	f	class:OptUtils
RemoveRaw	include/fastlib/col/arraylist.h	/^  void RemoveRaw(index_t pos, index_t dec = 1) {$/;"	f	class:ArrayList
RepeatConstruct	include/fastlib/base/ccmem.h	/^  inline T *RepeatConstruct(T *array, const U &init, size_t elems) {$/;"	f	namespace:mem
RepeatConstruct	include/fastlib/base/otrav.h	/^  inline T *RepeatConstruct(T *array, const T &init, size_t elems) {$/;"	f	namespace:ot
RepeatMatrix	mlpack/fastica/lin_alg.h	/^  Matrix* RepeatMatrix(index_t num_row_reps, index_t num_col_reps,$/;"	f	namespace:linalg__private
ReportProgressFile_	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::ReportProgressFile_() {$/;"	f	class:Lbfgs
Reserve	include/fastlib/col/arraylist.h	/^  void Reserve(index_t size) {$/;"	f	class:ArrayList
Reset	include/fastlib/col/rangeset.h	/^  void Reset() {$/;"	f	class:RangeSet
Reset	include/fastlib/math/math_lib.h	/^  void Reset(double lo_in, double hi_in) {$/;"	f	struct:DRange
Reset	include/fastlib/tree/bounds.h	/^  void Reset() {$/;"	f	class:DHrectBound
Reset	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::Reset() {$/;"	f	class:Lbfgs
ResetBoundStatistics	mlpack/kde/kde_stat.h	/^  void ResetBoundStatistics() {$/;"	f	class:KdeStat
ResetBoundStatistics	mlpack/kde/kde_stat.h	/^  void ResetBoundStatistics() {$/;"	f	class:VKdeStat
Reset_	include/fastlib/col/arraylist.h	/^  void Reset_() {$/;"	f	class:ArrayList
Resize	include/fastlib/base/deprecated.h	/^  inline T *Resize(T *array, size_t elems = 1) {$/;"	f	namespace:mem
Resize	include/fastlib/col/arraylist.h	/^  void Resize(index_t size) {$/;"	f	class:ArrayList
ResizeNoalias	include/fastlib/la/matrix.h	/^  void ResizeNoalias(index_t new_n_cols) {$/;"	f	class:GenMatrix
Resize_d_sigma_	mlpack/mog/mog_l2e.h	/^  void Resize_d_sigma_() {$/;"	f	class:MoGL2E
RetrieveDensities	mlpack/kde/fft_kde.h	/^  void RetrieveDensities() {$/;"	f	class:FFTKde
RidgeRegression	mlpack/regression/ridge_regression.h	/^  RidgeRegression() {$/;"	f	class:RidgeRegression
RidgeRegression	mlpack/regression/ridge_regression.h	/^class RidgeRegression {$/;"	c
RidgeRegressionTest	mlpack/regression/ridge_regression_test.cc	/^class RidgeRegressionTest {$/;"	c	file:
RidgeRegressionUtil	mlpack/regression/ridge_regression_util.h	/^class RidgeRegressionUtil {$/;"	c
RoundInt	include/fastlib/math/math_lib.h	/^  inline int64 RoundInt(double d) {$/;"	f	namespace:math
Run	include/fastlib/data/crossvalidation.h	/^void GeneralCrossValidator<TLearner>::Run(bool randomized) {  $/;"	f	class:GeneralCrossValidator
Run	include/fastlib/data/crossvalidation.h	/^void SimpleCrossValidator<TClassifier>::Run(bool randomized) {$/;"	f	class:SimpleCrossValidator
Run	include/fastlib/par/grain.h	/^    void Run() {$/;"	f	struct:ThreadedGrainRunner::ThreadTask
RunOneGrain	include/fastlib/par/grain.h	/^  bool RunOneGrain() {$/;"	f	class:ThreadedGrainRunner
RunThreads	include/fastlib/par/grain.h	/^  void RunThreads(int num_threads) {$/;"	f	class:ThreadedGrainRunner
S	include/fastlib/base/compiler.h	/^  struct S {T x; char c;};$/;"	s	struct:compiler_strideof
SERIES_EXPANSION_AUX	mlpack/series_expansion/series_expansion_aux.h	36;"	d
SKEW	mlpack/fastica/fastica.h	55;"	d
SMO	mlpack/svm/smo.h	/^  SMO() {}$/;"	f	class:SMO
SMO	mlpack/svm/smo.h	/^class SMO {$/;"	c
SMO_ALPHA_ZERO	mlpack/svm/smo.h	/^const double SMO_ALPHA_ZERO = 1.0e-4;$/;"	v
SMO_OPT_TOLERANCE	mlpack/svm/smo.h	/^const double SMO_OPT_TOLERANCE = 1.0e-4;$/;"	v
SMO_UNSHRINKING_TOLERANCE	mlpack/svm/smo.h	/^const double SMO_UNSHRINKING_TOLERANCE = 10 * SMO_OPT_TOLERANCE;$/;"	v
SQRT2	include/fastlib/math/math_lib.h	/^  const double SQRT2 = 1.41421356237309504880;$/;"	v
STANDARD_FORMAT__PRIMITIVE	include/fastlib/base/otrav_impl.h	179;"	d
STANDARD_FORMAT__PRIMITIVE	include/fastlib/base/otrav_impl.h	186;"	d
STATIC_CAST	include/fastlib/base/compiler.h	329;"	d
STOPWATCH_ACTIVE	include/fastlib/fx/stopwatch.h	111;"	d
STRIDE	include/fastlib/base/compiler.h	/^  enum { STRIDE = NATURAL_STRIDE > PREFERRED_STRIDE$/;"	e	enum:compiler_strideof::__anon16
STRING	include/fastlib/file/textfile.h	/^    STRING,$/;"	e	enum:TextTokenizer::TokenType
SUBSUME	mlpack/range_search/ortho_range_search.h	/^  enum PruneStatus {SUBSUME, INCONCLUSIVE, EXCLUDE};$/;"	e	enum:OrthoRangeSearch::PruneStatus
SUCCESS_FAIL	include/fastlib/base/common.h	/^  SUCCESS_FAIL = 31,$/;"	e	enum:__anon2
SUCCESS_FROM_C	include/fastlib/base/common.h	383;"	d
SUCCESS_FROM_INT	include/fastlib/base/deprecated.h	50;"	d
SUCCESS_FROM_LAPACK	include/fastlib/la/uselapack.h	59;"	d
SUCCESS_PASS	include/fastlib/base/common.h	/^  SUCCESS_PASS = 96$/;"	e	enum:__anon2
SUCCESS_WARN	include/fastlib/base/common.h	/^  SUCCESS_WARN = 48,$/;"	e	enum:__anon2
SVDInit	include/fastlib/la/uselapack.h	/^  inline success_t SVDInit(const Matrix &A, Vector *s) {$/;"	f	namespace:la
SVDInit	include/fastlib/la/uselapack.h	/^  inline success_t SVDInit(const Matrix &A, Vector *s, Matrix *U, Matrix *VT) {$/;"	f	namespace:la
SVDInit	mlpack/quicsvd/quicsvd.cc	/^double QuicSVD::SVDInit(const Matrix& A, double targetRelErr,$/;"	f	class:QuicSVD
SVDRegress	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::SVDRegress$/;"	f	class:RidgeRegression
SVDTransform	mlpack/optimization/lbfgs/optimization_utils.h	/^  static success_t SVDTransform(Matrix &input_mat, Matrix *output_mat, $/;"	f	class:OptUtils
SVM	mlpack/svm/svm.h	/^class SVM {$/;"	c
SVMLinearKernel	mlpack/svm/svm.h	/^class SVMLinearKernel {$/;"	c
SVMRBFKernel	mlpack/svm/svm.h	/^class SVMRBFKernel {$/;"	c
SVM_C_Predict_	mlpack/svm/svm.h	/^double SVM<TKernel>::SVM_C_Predict_(const Vector& datum) {$/;"	f	class:SVM
SVM_C_Train_	mlpack/svm/svm.h	/^void SVM<TKernel>::SVM_C_Train_(int learner_typeid, const Dataset& dataset, datanode *module) {$/;"	f	class:SVM
SVM_DE_Predict_	mlpack/svm/svm.h	/^double SVM<TKernel>::SVM_DE_Predict_(const Vector& datum) {$/;"	f	class:SVM
SVM_DE_Train_	mlpack/svm/svm.h	/^void SVM<TKernel>::SVM_DE_Train_(int learner_typeid, const Dataset& dataset, datanode *module) {$/;"	f	class:SVM
SVM_MODELS	mlpack/svm/svm.h	/^  struct SVM_MODELS {$/;"	s	class:SVM
SVM_R_Predict_	mlpack/svm/svm.h	/^double SVM<TKernel>::SVM_R_Predict_(const Vector& datum) {$/;"	f	class:SVM
SVM_R_Train_	mlpack/svm/svm.h	/^void SVM<TKernel>::SVM_R_Train_(int learner_typeid, const Dataset& dataset, datanode *module) {$/;"	f	class:SVM
SWAP_BUF_SIZE	include/fastlib/base/ccmem.h	/^  const size_t SWAP_BUF_SIZE = 64;$/;"	v
SYMMETRIC	mlpack/fastica/fastica.h	57;"	d
SaveCorrectly	mlpack/fastica/lin_alg.h	/^  void SaveCorrectly(const char *filename, Matrix a) {$/;"	f	namespace:linalg__private
SaveModel_	mlpack/svm/svm.h	/^void SVM<TKernel>::SaveModel_(int learner_typeid, String model_filename) {$/;"	f	class:SVM
SaveParam	mlpack/svm/svm.h	/^  void SaveParam(FILE* fp) {$/;"	f	class:SVMLinearKernel
SaveParam	mlpack/svm/svm.h	/^  void SaveParam(FILE* fp) {$/;"	f	class:SVMRBFKernel
SaveProfile	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::SaveProfile(const char* profile) const {$/;"	f	class:DiscreteHMM
SaveProfile	mlpack/hmm/gaussianHMM.cc	/^success_t GaussianHMM::SaveProfile(const char* profile, const Matrix& trans, const ArrayList<Vector>& means, const ArrayList<Matrix>& covs) {$/;"	f	class:GaussianHMM
SaveProfile	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::SaveProfile(const char* profile) const {$/;"	f	class:GaussianHMM
SaveProfile	mlpack/hmm/mixgaussHMM.cc	/^success_t MixtureofGaussianHMM::SaveProfile(const char* profile, const Matrix& trans, const ArrayList<MixtureGauss>& mixs) {$/;"	f	class:MixtureofGaussianHMM
SaveProfile	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::SaveProfile(const char* profile) const {$/;"	f	class:MixtureofGaussianHMM
SaveToTextFile	mlpack/kernel_pca/kernel_pca_impl.h	/^void KernelPCA::SaveToTextFile(std::string file, $/;"	f	class:KernelPCA
SaveTrainTest_	include/fastlib/data/crossvalidation.h	/^void SimpleCrossValidator<TClassifier>::SaveTrainTest_($/;"	f	class:SimpleCrossValidator
SaveTrainValidationSet_	include/fastlib/data/crossvalidation.h	/^void GeneralCrossValidator<TLearner>::SaveTrainValidationSet_($/;"	f	class:GeneralCrossValidator
SaveTree	mlpack/range_search/ortho_range_search.h	/^  void SaveTree(const char *save_tree_file_name) {$/;"	f	class:OrthoRangeSearch
Scale	include/fastlib/la/uselapack.h	/^  inline void Scale(double alpha, Matrix *X) {$/;"	f	namespace:la
Scale	include/fastlib/la/uselapack.h	/^  inline void Scale(double alpha, Vector *x) {$/;"	f	namespace:la
Scale	include/fastlib/la/uselapack.h	/^  inline void Scale(index_t length, double alpha, double *x) {$/;"	f	namespace:la
Scale	mlpack/fastica/lin_alg.h	/^  Matrix* Scale(double alpha, Matrix *A) {$/;"	f	namespace:linalg__private
Scale	mlpack/fastica/lin_alg.h	/^  Vector* Scale(double alpha, Vector* v) {$/;"	f	namespace:linalg__private
ScaleDataByMinMax	mlpack/kde/dataset_scaler.h	/^  static void ScaleDataByMinMax(Matrix &qset, Matrix &rset,$/;"	f	class:DatasetScaler
ScaleInit	include/fastlib/la/uselapack.h	/^  inline void ScaleInit(double alpha, const Matrix &X, Matrix *Y) {$/;"	f	namespace:la
ScaleInit	include/fastlib/la/uselapack.h	/^  inline void ScaleInit(double alpha, const Vector &x, Vector *y) {$/;"	f	namespace:la
ScaleInit	mlpack/fastica/lin_alg.h	/^  Matrix* ScaleInit(double alpha, const Matrix* const A, Matrix* B) {$/;"	f	namespace:linalg__private
ScaleInit	mlpack/fastica/lin_alg.h	/^  Vector* ScaleInit(double alpha, const Vector* const u, Vector* v) {$/;"	f	namespace:linalg__private
ScaleOverwrite	include/fastlib/la/uselapack.h	/^  inline void ScaleOverwrite(double alpha, const Matrix &X, Matrix *Y) {$/;"	f	namespace:la
ScaleOverwrite	include/fastlib/la/uselapack.h	/^  inline void ScaleOverwrite(double alpha, const Vector &x, Vector *y) {$/;"	f	namespace:la
ScaleOverwrite	include/fastlib/la/uselapack.h	/^  inline void ScaleOverwrite(index_t length,$/;"	f	namespace:la
ScaleRows	include/fastlib/la/uselapack.h	/^  inline void ScaleRows(const Matrix& d, Matrix *X) {$/;"	f	namespace:la
ScaleRows	include/fastlib/la/uselapack.h	/^  inline void ScaleRows(const Vector& d, Matrix *X) {$/;"	f	namespace:la
ScaleRows	include/fastlib/la/uselapack.h	/^  inline void ScaleRows(index_t n_rows, index_t n_cols,$/;"	f	namespace:la
SchurInit	include/fastlib/la/uselapack.h	/^  inline success_t SchurInit(const Matrix &A,$/;"	f	namespace:la
SegmentAppend	include/fastlib/col/arraylist.h	/^void ArrayList<TElem>::SegmentAppend(index_t size, ArrayList *dest) {$/;"	f	class:ArrayList
SegmentInit	include/fastlib/col/arraylist.h	/^  void SegmentInit(index_t size, Elem *dest) {$/;"	f	class:ArrayList
SegmentInit	include/fastlib/col/arraylist.h	/^void ArrayList<TElem>::SegmentInit(index_t size, ArrayList *dest) {$/;"	f	class:ArrayList
SelectFindBoundFromMatrix	include/fastlib/tree/kdtree_impl.h	/^    void SelectFindBoundFromMatrix(const GenMatrix<T>& matrix,$/;"	f	namespace:tree_kdtree_private
SelectMatrixPartition	include/fastlib/tree/kdtree_impl.h	/^  index_t SelectMatrixPartition(GenMatrix<T>& matrix, $/;"	f	namespace:tree_kdtree_private
SelectSplitKdTreeMidpoint	include/fastlib/tree/kdtree_impl.h	/^    void SelectSplitKdTreeMidpoint(GenMatrix<T>& matrix,$/;"	f	namespace:tree_kdtree_private
SemiCopy	include/fastlib/base/otrav.h	/^  inline T *SemiCopy(char *block, const T *orig) {$/;"	f	namespace:ot
SemiCopy	include/fastlib/base/otrav.h	/^  inline T *SemiCopy(char *block, const char *orig) {$/;"	f	namespace:ot
SemiDestruct	include/fastlib/base/otrav.h	/^  inline void SemiDestruct(T *obj) {$/;"	f	namespace:ot
SemiDestruct	include/fastlib/base/otrav.h	/^  inline void SemiDestruct(char *block) {$/;"	f	namespace:ot
SemiFreeze	include/fastlib/base/otrav.h	/^  inline void SemiFreeze(char *block, const T *orig) {$/;"	f	namespace:ot
SemiFreeze	include/fastlib/base/otrav.h	/^  void SemiFreeze(char *block, const char *orig) {$/;"	f	namespace:ot
SemiFreezeDestruct	include/fastlib/base/otrav.h	/^  inline char *SemiFreezeDestruct(T *obj) {$/;"	f	namespace:ot
SemiFreezeDestruct	include/fastlib/base/otrav.h	/^  inline char *SemiFreezeDestruct(char *block) {$/;"	f	namespace:ot
SemiThaw	include/fastlib/base/otrav.h	/^  inline T *SemiThaw(char *block) {$/;"	f	namespace:ot
SerialSize	include/fastlib/base/otrav.h	/^  inline size_t SerialSize(const T &obj) {$/;"	f	namespace:ot
Serialize	include/fastlib/base/otrav.h	/^  inline size_t Serialize(const T &obj, FILE *stream) {$/;"	f	namespace:ot
Serializer	include/fastlib/base/otrav_impl.h	/^    Serializer(const T &obj, FILE *stream) {$/;"	f	class:ot__private::Serializer
Serializer	include/fastlib/base/otrav_impl.h	/^  class Serializer {$/;"	c	namespace:ot__private
SeriesExpansionAux	mlpack/series_expansion/series_expansion_aux.h	/^class SeriesExpansionAux {$/;"	c
Set	include/fastlib/par/thread.h	/^  void Set(int v) {$/;"	f	class:ValueCondition
SetAll	include/fastlib/la/matrix.h	/^  void SetAll(T d) {$/;"	f	class:GenMatrix
SetAll	include/fastlib/la/matrix.h	/^  void SetAll(T d) {$/;"	f	class:GenVector
SetDiagonal	include/fastlib/la/matrix.h	/^  void SetDiagonal(const GenVector<T>& v) {$/;"	f	class:GenMatrix
SetLength	include/fastlib/col/col_string.h	/^  void SetLength(index_t newlen) {$/;"	f	class:String
SetZero	include/fastlib/la/matrix.h	/^  void SetZero() {$/;"	f	class:GenMatrix
SetZero	include/fastlib/la/matrix.h	/^  void SetZero() {$/;"	f	class:GenVector
ShrinkTo	include/fastlib/col/arraylist.h	/^  void ShrinkTo(index_t size) {$/;"	f	class:ArrayList
Shrinking_	mlpack/svm/smo.h	/^void SMO<TKernel>::Shrinking_() {$/;"	f	class:SMO
ShuffleAccordingToPermutation	mlpack/kde/dualtree_kde_common.h	/^  static void ShuffleAccordingToPermutation$/;"	f	class:DualtreeKdeCommon
Signal	include/fastlib/par/thread.h	/^  void Signal() {$/;"	f	class:WaitCondition
SimpleCrossValidator	include/fastlib/data/crossvalidation.h	/^  SimpleCrossValidator() {}$/;"	f	class:SimpleCrossValidator
SimpleCrossValidator	include/fastlib/data/crossvalidation.h	/^class SimpleCrossValidator {$/;"	c
SimpleNaiveBayesClassifier	mlpack/naive_bayes/simple_nbc.h	/^  SimpleNaiveBayesClassifier(){$/;"	f	class:SimpleNaiveBayesClassifier
SimpleNaiveBayesClassifier	mlpack/naive_bayes/simple_nbc.h	/^class SimpleNaiveBayesClassifier {$/;"	c
SingleDimIndexInMultiArray_	mlpack/kde/fgt_kde.h	/^  void SingleDimIndexInMultiArray_(ArrayList<int> &n, int index, $/;"	f	class:FGTKde
SizeAtLeast	include/fastlib/col/arraylist.h	/^  void SizeAtLeast(index_t size) {$/;"	f	class:ArrayList
SizeAtMost	include/fastlib/col/arraylist.h	/^  void SizeAtMost(index_t size) {$/;"	f	class:ArrayList
SlabAllocator	include/fastlib/col/fastalloc.h	/^class SlabAllocator {$/;"	c
SmallMatrix	include/fastlib/la/matrix.h	/^  SmallMatrix() {$/;"	f	class:SmallMatrix
SmallMatrix	include/fastlib/la/matrix.h	/^class SmallMatrix : public Matrix {$/;"	c
SmallVector	include/fastlib/la/matrix.h	/^  SmallVector() {$/;"	f	class:SmallVector
SmallVector	include/fastlib/la/matrix.h	/^class SmallVector : public Vector {$/;"	c
SolveExpert	include/fastlib/la/uselapack.h	/^  inline success_t SolveExpert($/;"	f	namespace:la
SolveInit	include/fastlib/la/uselapack.h	/^  inline success_t SolveInit(const Matrix &A, const Matrix &B, Matrix *X) {$/;"	f	namespace:la
SolveInit	include/fastlib/la/uselapack.h	/^  inline success_t SolveInit(const Matrix &A, const Vector &b, Vector *x) {$/;"	f	namespace:la
Sort	mlpack/quicsvd/cosine_tree.cc	/^void Sort(ArrayList<double>& key, ArrayList<int>& data) {$/;"	f
SparseProjection	mlpack/optimization/lbfgs/optimization_utils.h	/^  static void SparseProjection(Matrix *data, double sparse_factor) {$/;"	f	class:OptUtils
SpawnThread	include/fastlib/par/grain.h	/^  Thread *SpawnThread() {$/;"	f	class:ThreadedGrainRunner
Split	include/fastlib/col/col_string.h	/^  index_t Split(const char *delimeters, ArrayList<String> *result) const {$/;"	f	class:String
Split	mlpack/quicsvd/cosine_tree.cc	/^void CosineNode::Split() {$/;"	f	class:CosineNode
SplitGenMetricTree	mlpack/kde/gen_metric_tree_impl.h	/^  void SplitGenMetricTree(Matrix& matrix, TMetricTree *node,$/;"	f	namespace:tree_gen_metric_tree_private
SplitKdTreeMidpoint	include/fastlib/tree/kdtree_impl.h	/^  void SplitKdTreeMidpoint(GenMatrix<T>& matrix,$/;"	f	namespace:tree_kdtree_private
Sqr	include/fastlib/math/math_lib.h	/^  inline T Sqr(T v) {$/;"	f	namespace:math
Square	mlpack/fastica/lin_alg.h	/^  double Square(double x, double arg) {$/;"	f	namespace:linalg__private
SquareArg	mlpack/fastica/lin_alg.h	/^  double SquareArg(double x, double arg) {$/;"	f	namespace:linalg__private
SquaredCorrelationCoefficient	mlpack/regression/ridge_regression_util.h	/^  static double SquaredCorrelationCoefficient(const Vector &observations,$/;"	f	class:RidgeRegressionUtil
StandardFormat	include/fastlib/base/otrav_impl.h	/^    StandardFormat(FILE *stream) {$/;"	f	class:ot::StandardFormat
StandardFormat	include/fastlib/base/otrav_impl.h	/^  class StandardFormat {$/;"	c	namespace:ot
StandardizeData	mlpack/kde/dataset_scaler.h	/^  static void StandardizeData(Matrix &qset, Matrix &rset,$/;"	f	class:DatasetScaler
Start	include/fastlib/par/thread.h	/^  void Start() {$/;"	f	class:Thread
Start	include/fastlib/par/thread.h	/^  void Start(int prio) {$/;"	f	class:Thread
StartsWith	include/fastlib/col/col_string.h	/^  bool StartsWith(const char *s) const {$/;"	f	class:String
StaticCopy	include/fastlib/la/matrix.h	/^  void StaticCopy(const GenMatrix& other) {$/;"	f	class:GenMatrix
StaticCopy	include/fastlib/la/matrix.h	/^  void StaticCopy(const GenVector& other) {$/;"	f	class:GenVector
StaticCopy	include/fastlib/la/matrix.h	/^  void StaticCopy(const T *doubles, index_t in_length) {$/;"	f	class:GenVector
StaticCopy	include/fastlib/la/matrix.h	/^  void StaticCopy(const T *ptr_in, index_t n_rows_in, index_t n_cols_in) {$/;"	f	class:GenMatrix
StaticInit	include/fastlib/la/matrix.h	/^  void StaticInit(index_t in_length) {$/;"	f	class:GenVector
StaticInit	include/fastlib/la/matrix.h	/^  void StaticInit(index_t in_rows, index_t in_cols) {$/;"	f	class:GenMatrix
StaticInitDiagonal	include/fastlib/la/matrix.h	/^  void StaticInitDiagonal(const GenVector<T>& v) {$/;"	f	class:GenMatrix
StaticOwn	include/fastlib/la/matrix.h	/^  void StaticOwn(GenMatrix* other) {$/;"	f	class:GenMatrix
StaticOwn	include/fastlib/la/matrix.h	/^  void StaticOwn(GenVector* other) {$/;"	f	class:GenVector
StaticOwn	include/fastlib/la/matrix.h	/^  void StaticOwn(T *in_ptr, index_t in_length) {$/;"	f	class:GenVector
StaticOwn	include/fastlib/la/matrix.h	/^  void StaticOwn(T *ptr_in, index_t n_rows_in, index_t n_cols_in) {$/;"	f	class:GenMatrix
Statistic	include/fastlib/tree/spacetree.h	/^  typedef TStatistic Statistic;$/;"	t	class:BinarySpaceTree
Statistic	mlpack/kde/general_spacetree.h	/^  typedef TStatistic Statistic;$/;"	t	class:GeneralBinarySpaceTree
Steal	include/fastlib/col/arraylist.h	/^  void Steal(ArrayList *other) {$/;"	f	class:ArrayList
Steal	include/fastlib/col/arraylist.h	/^  void Steal(const Elem *src, index_t size) {$/;"	f	class:ArrayList
Steal	include/fastlib/col/col_string.h	/^  void Steal(ArrayList<char> *null_terminated_char_list) {$/;"	f	class:String
Steal	include/fastlib/col/col_string.h	/^  void Steal(char *str) {$/;"	f	class:String
Steal	include/fastlib/col/col_string.h	/^  void Steal(char *str, index_t len) {$/;"	f	class:String
Steal	include/fastlib/col/col_string.h	/^  void Steal(char *str, index_t len, index_t capacity) {$/;"	f	class:String
StealDestruct	include/fastlib/col/col_string.h	/^  void StealDestruct(String *other) {$/;"	f	class:String
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::Copier
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::Deserializer
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::Destructor
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::Freezer
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::Relocator
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::Serializer
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::TransientDestructor
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::TransientUnstructor
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {$/;"	f	class:ot__private::Unstructor
Str	include/fastlib/base/otrav_impl.h	/^    void Str(char *&str, bool nullable, bool alloc) {}$/;"	f	class:ot__private::Aliaser
Str	include/fastlib/base/otrav_impl.h	/^    void Str(const char *str, bool nullable, bool alloc) {$/;"	f	class:ot__private::Printer
StratifiedSplitCVSet_	include/fastlib/data/crossvalidation.h	/^  void StratifiedSplitCVSet_(int i_fold, index_t num_classes, ArrayList<index_t>& cv_labels_ct, $/;"	f	class:GeneralCrossValidator
String	include/fastlib/col/col_string.h	/^  String(const char *s) {$/;"	f	class:String
String	include/fastlib/col/col_string.h	/^class String {$/;"	c
SubFrom	include/fastlib/la/uselapack.h	/^  inline void SubFrom(const Matrix &X, Matrix *Y) {$/;"	f	namespace:la
SubFrom	include/fastlib/la/uselapack.h	/^  inline void SubFrom(const Vector &x, Vector *y) {$/;"	f	namespace:la
SubFrom	include/fastlib/la/uselapack.h	/^  inline void SubFrom(index_t length, const double *x, double *y) {$/;"	f	namespace:la
SubFrom	mlpack/fastica/lin_alg.h	/^  Matrix* SubFrom(const Matrix* const A, Matrix* const B) {$/;"	f	namespace:linalg__private
SubFrom	mlpack/fastica/lin_alg.h	/^  Vector* SubFrom(const Vector* const u, Vector* const v) {$/;"	f	namespace:linalg__private
SubFrom_	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  void SubFrom_(index_t dimension, int decrement,$/;"	f	class:InversePowDistGradientKernelAux
SubFrom_	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  void SubFrom_(index_t dimension, int decrement,$/;"	f	class:InversePowDistKernelAux
SubInit	include/fastlib/la/uselapack.h	/^  inline void SubInit(const Matrix &X, const Matrix &Y, Matrix *Z) {$/;"	f	namespace:la
SubInit	include/fastlib/la/uselapack.h	/^  inline void SubInit(const Vector &x, const Vector &y, Vector *z) {$/;"	f	namespace:la
SubInit	mlpack/fastica/lin_alg.h	/^  Matrix* SubInit(const Matrix* const A, const Matrix* const B, Matrix* C) {$/;"	f	namespace:linalg__private
SubInit	mlpack/fastica/lin_alg.h	/^  Vector* SubInit(const Vector* const u, const Vector* const v, Vector* w) {$/;"	f	namespace:linalg__private
SubOverwrite	include/fastlib/la/uselapack.h	/^  inline void SubOverwrite(const Matrix &X, const Matrix &Y, Matrix *Z) {$/;"	f	namespace:la
SubOverwrite	include/fastlib/la/uselapack.h	/^  inline void SubOverwrite(const Vector &x, const Vector &y, Vector *z) {$/;"	f	namespace:la
SubOverwrite	include/fastlib/la/uselapack.h	/^  inline void SubOverwrite(index_t length,$/;"	f	namespace:la
SubOverwrite	mlpack/fastica/lin_alg.h	/^  Matrix* SubOverwrite(const Matrix* const A, const Matrix* const B,$/;"	f	namespace:linalg__private
Sum	mlpack/fastica/lin_alg.h	/^  Matrix* Sum(const Matrix* const A, Matrix *sum_vector) {$/;"	f	namespace:linalg__private
Sum	mlpack/fastica/lin_alg.h	/^  double Sum(Vector *v) {$/;"	f	namespace:linalg__private
Swap	include/fastlib/base/ccmem.h	/^  inline void Swap(T *a, T *b) {$/;"	f	namespace:mem
Swap	include/fastlib/base/ccmem.h	/^  inline void Swap(T *a, T *b, size_t elems) {$/;"	f	namespace:mem
Swap	include/fastlib/base/ccmem.h	/^  inline void Swap(T *a, U *b) {$/;"	f	namespace:mem
Swap	include/fastlib/base/ccmem.h	/^  inline void Swap(T *a, U *b, size_t elems) {$/;"	f	namespace:mem
Swap	include/fastlib/base/deprecated.h	/^  inline T *Swap(T *a, T *b, size_t elems = 1) {$/;"	f	namespace:mem
Swap	include/fastlib/col/arraylist.h	/^  void Swap(ArrayList *other) {$/;"	f	class:ArrayList
Swap	include/fastlib/col/col_string.h	/^  void Swap(String* other) {$/;"	f	class:String
SwapBytes	include/fastlib/base/ccmem.h	/^  void SwapBytes(T *a, U *b, size_t bytes) {$/;"	f	namespace:mem
SwapBytes	include/fastlib/base/deprecated.h	/^  inline T *SwapBytes(T *a, T *b, size_t bytes) {$/;"	f	namespace:mem
SwapValues	include/fastlib/la/matrix.h	/^  void SwapValues(GenMatrix* other) {$/;"	f	class:GenMatrix
SwapValues	include/fastlib/la/matrix.h	/^  void SwapValues(GenVector* other) {$/;"	f	class:GenVector
SymmetricFixedPointICA	mlpack/fastica/fastica.h	/^  int SymmetricFixedPointICA(bool stabilization_enabled,$/;"	f	class:FastICA
SymmetricGaussFineTuningUpdate_	mlpack/fastica/fastica.h	/^  void SymmetricGaussFineTuningUpdate_(index_t n, Matrix X, Matrix* B) {$/;"	f	class:FastICA
SymmetricGaussUpdate_	mlpack/fastica/fastica.h	/^  void SymmetricGaussUpdate_(index_t n, Matrix X, Matrix* B) {$/;"	f	class:FastICA
SymmetricKurtosisFineTuningUpdate_	mlpack/fastica/fastica.h	/^  void SymmetricKurtosisFineTuningUpdate_(index_t n, Matrix X, Matrix* B) {$/;"	f	class:FastICA
SymmetricKurtosisUpdate_	mlpack/fastica/fastica.h	/^  void SymmetricKurtosisUpdate_(index_t n, Matrix X, Matrix* B) {$/;"	f	class:FastICA
SymmetricLogCoshFineTuningUpdate_	mlpack/fastica/fastica.h	/^  void SymmetricLogCoshFineTuningUpdate_(index_t n, Matrix X, Matrix* B) {$/;"	f	class:FastICA
SymmetricLogCoshUpdate_	mlpack/fastica/fastica.h	/^  void SymmetricLogCoshUpdate_(index_t n, Matrix X, Matrix* B) {$/;"	f	class:FastICA
SymmetricSkewFineTuningUpdate_	mlpack/fastica/fastica.h	/^  void SymmetricSkewFineTuningUpdate_(index_t n, Matrix X, Matrix* B) {$/;"	f	class:FastICA
SymmetricSkewUpdate_	mlpack/fastica/fastica.h	/^  void SymmetricSkewUpdate_(index_t n, Matrix X, Matrix* B) {$/;"	f	class:FastICA
TAU	mlpack/kde/fft_kde.h	/^  static const double TAU = 4.0;$/;"	m	class:FFTKde
TAU	mlpack/svm/smo.h	/^const double TAU = 1e-12;$/;"	v
TEST_ASSERT	include/fastlib/base/test.h	51;"	d
TEST_DOUBLE_APPROX	include/fastlib/base/test.h	58;"	d
TEST_DOUBLE_EXACT	include/fastlib/base/test.h	54;"	d
TEST_SUITE_BEGIN	include/fastlib/base/test.h	67;"	d
TEST_SUITE_END	include/fastlib/base/test.h	76;"	d
TFarFieldExpansion	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  typedef FarFieldExpansion<InversePowDistGradientKernelAux> TFarFieldExpansion;$/;"	t	class:InversePowDistGradientKernelAux
TFarFieldExpansion	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  typedef FarFieldExpansion<InversePowDistKernelAux> TFarFieldExpansion;$/;"	t	class:InversePowDistKernelAux
TFarFieldExpansion	mlpack/series_expansion/kernel_aux.h	/^  typedef FarFieldExpansion<EpanKernelAux> TFarFieldExpansion;$/;"	t	class:EpanKernelAux
TFarFieldExpansion	mlpack/series_expansion/kernel_aux.h	/^  typedef FarFieldExpansion<GaussianKernelAux> TFarFieldExpansion;$/;"	t	class:GaussianKernelAux
TFarFieldExpansion	mlpack/series_expansion/kernel_aux.h	/^  typedef MultFarFieldExpansion<GaussianKernelMultAux> TFarFieldExpansion;$/;"	t	class:GaussianKernelMultAux
TKernel	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  typedef InversePowDistGradientKernel TKernel;$/;"	t	class:InversePowDistGradientKernelAux
TKernel	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  typedef InversePowDistKernel TKernel;$/;"	t	class:InversePowDistKernelAux
TKernel	mlpack/series_expansion/kernel_aux.h	/^  typedef EpanKernel TKernel;$/;"	t	class:EpanKernelAux
TKernel	mlpack/series_expansion/kernel_aux.h	/^  typedef GaussianKernel TKernel;$/;"	t	class:GaussianKernelAux
TKernel	mlpack/series_expansion/kernel_aux.h	/^  typedef GaussianKernel TKernel;$/;"	t	class:GaussianKernelMultAux
TLocalExpansion	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  typedef LocalExpansion<InversePowDistGradientKernelAux> TLocalExpansion;$/;"	t	class:InversePowDistGradientKernelAux
TLocalExpansion	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  typedef LocalExpansion<InversePowDistKernelAux> TLocalExpansion;$/;"	t	class:InversePowDistKernelAux
TLocalExpansion	mlpack/series_expansion/kernel_aux.h	/^  typedef LocalExpansion<EpanKernelAux> TLocalExpansion;$/;"	t	class:EpanKernelAux
TLocalExpansion	mlpack/series_expansion/kernel_aux.h	/^  typedef LocalExpansion<GaussianKernelAux> TLocalExpansion;$/;"	t	class:GaussianKernelAux
TLocalExpansion	mlpack/series_expansion/kernel_aux.h	/^  typedef MultLocalExpansion<GaussianKernelMultAux> TLocalExpansion;$/;"	t	class:GaussianKernelMultAux
TREE_BOUNDS_H	include/fastlib/tree/bounds.h	46;"	d
TREE_GENERAL_SPACETREE_H	mlpack/kde/general_spacetree.h	73;"	d
TREE_GEN_METRIC_TREE_H	mlpack/kde/gen_metric_tree.h	76;"	d
TREE_KDTREE_H	include/fastlib/tree/kdtree.h	46;"	d
TREE_SPACETREE_H	include/fastlib/tree/spacetree.h	43;"	d
TREE_STATISTIC_H	include/fastlib/tree/statistic.h	45;"	d
TSeriesExpansionAux	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  typedef SeriesExpansionAux TSeriesExpansionAux;$/;"	t	class:InversePowDistGradientKernelAux
TSeriesExpansionAux	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  typedef SeriesExpansionAux TSeriesExpansionAux;$/;"	t	class:InversePowDistKernelAux
TSeriesExpansionAux	mlpack/series_expansion/kernel_aux.h	/^  typedef MultSeriesExpansionAux TSeriesExpansionAux;$/;"	t	class:GaussianKernelMultAux
TSeriesExpansionAux	mlpack/series_expansion/kernel_aux.h	/^  typedef SeriesExpansionAux TSeriesExpansionAux;$/;"	t	class:EpanKernelAux
TSeriesExpansionAux	mlpack/series_expansion/kernel_aux.h	/^  typedef SeriesExpansionAux TSeriesExpansionAux;$/;"	t	class:GaussianKernelAux
TanhArg	mlpack/fastica/lin_alg.h	/^  double TanhArg(double x, double arg) {$/;"	f	namespace:linalg__private
Task	include/fastlib/par/task.h	/^  Task() {}$/;"	f	class:Task
Task	include/fastlib/par/task.h	/^class Task {$/;"	c
TaylorExpansion	mlpack/kde/original_ifgt.h	/^  void TaylorExpansion() {$/;"	f	class:OriginalIFGT
Terminate	include/fastlib/col/col_string.h	/^  void Terminate() {$/;"	f	class:String
TestAll	mlpack/allkfn/allkfn_test.cc	/^  void TestAll() {$/;"	f	class:TestAllkFN
TestAll	mlpack/allknn/allknn_test.cc	/^  void TestAll() {$/;"	f	class:TestAllkNN
TestAll	mlpack/allnn/allnn_test.cc	/^  void TestAll() {$/;"	f	class:TestAllNN
TestAll	mlpack/disk_allnn/disk_allnn_test.cc	/^  void TestAll() {$/;"	f	class:TestDiskAllNN
TestAll	mlpack/infomax_ica/test_infomax_ica.h	/^  void TestAll() {$/;"	f	class:TestInfomaxICA
TestAll	mlpack/kernel_pca/kernel_pca_test.cc	/^  void TestAll() {$/;"	f	class:KernelPCATest
TestAll	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  void TestAll(fx_module *root) {$/;"	f	class:TestClassSimpleNBC
TestAll	mlpack/optimization/lbfgs/test_lbfgs.cc	/^  void TestAll() {$/;"	f	class:LbfgsTest
TestAll	mlpack/regression/ridge_regression_test.cc	/^  void TestAll() {$/;"	f	class:RidgeRegressionTest
TestAllNN	mlpack/allnn/allnn_test.cc	/^  TestAllNN(fx_module *module) {$/;"	f	class:TestAllNN
TestAllNN	mlpack/allnn/allnn_test.cc	/^class TestAllNN {$/;"	c	file:
TestAllkFN	mlpack/allkfn/allkfn_test.cc	/^class TestAllkFN {$/;"	c	file:
TestAllkNN	mlpack/allknn/allknn_test.cc	/^class TestAllkNN {$/;"	c	file:
TestClassSimpleNBC	mlpack/naive_bayes/test_simple_nbc_main.cc	/^class TestClassSimpleNBC{$/;"	c	file:
TestClassify	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  void TestClassify() {$/;"	f	class:TestClassSimpleNBC
TestConvolveFarField	mlpack/series_expansion/main.cc	/^int TestConvolveFarField(const Matrix &data, const Vector &weights,$/;"	f
TestCov	mlpack/infomax_ica/test_infomax_ica.h	/^  void TestCov(){$/;"	f	class:TestInfomaxICA
TestDiskAllNN	mlpack/disk_allnn/disk_allnn_test.cc	/^  TestDiskAllNN(fx_module *module) {$/;"	f	class:TestDiskAllNN
TestDiskAllNN	mlpack/disk_allnn/disk_allnn_test.cc	/^class TestDiskAllNN {$/;"	c	file:
TestDualTreeVsNaive1	mlpack/allknn/allknn_test.cc	/^  void TestDualTreeVsNaive1() {$/;"	f	class:TestAllkNN
TestDualTreeVsNaive2	mlpack/allknn/allknn_test.cc	/^   void TestDualTreeVsNaive2() {$/;"	f	class:TestAllkNN
TestEpanKernelEvaluateFarField	mlpack/series_expansion/main.cc	/^int TestEpanKernelEvaluateFarField(const Matrix &data, const Vector &weights,$/;"	f
TestEpanKernelEvaluateLocalField	mlpack/series_expansion/main.cc	/^int TestEpanKernelEvaluateLocalField(const Matrix &data, const Vector &weights,$/;"	f
TestEpanKernelTranslateFarToLocalField	mlpack/series_expansion/main.cc	/^int TestEpanKernelTranslateFarToLocalField(const Matrix &data, $/;"	f
TestEvaluateFarField	mlpack/series_expansion/main.cc	/^int TestEvaluateFarField(const Matrix &data, const Vector &weights,$/;"	f
TestEvaluateLocalField	mlpack/series_expansion/main.cc	/^int TestEvaluateLocalField(const Matrix &data, const Vector &weights,$/;"	f
TestGeneralKernelPCA	mlpack/kernel_pca/kernel_pca_test.cc	/^  void TestGeneralKernelPCA() {$/;"	f	class:KernelPCATest
TestICA	mlpack/infomax_ica/test_infomax_ica.h	/^  void TestICA(){$/;"	f	class:TestInfomaxICA
TestInfomaxICA	mlpack/infomax_ica/test_infomax_ica.h	/^class TestInfomaxICA {$/;"	c
TestInitAux	mlpack/series_expansion/main.cc	/^int TestInitAux(const Matrix& data) {$/;"	f
TestInitTrain	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  void TestInitTrain(fx_module *root) {$/;"	f	class:TestClassSimpleNBC
TestLLE	mlpack/kernel_pca/kernel_pca_test.cc	/^  void TestLLE() {$/;"	f	class:KernelPCATest
TestMaxVar1	mlpack/optimization/lbfgs/test_lbfgs.cc	/^  void TestMaxVar1() {$/;"	f	class:LbfgsTest
TestMaxVar2	mlpack/optimization/lbfgs/test_lbfgs.cc	/^  void TestMaxVar2() {$/;"	f	class:LbfgsTest
TestMaxVar3	mlpack/optimization/lbfgs/test_lbfgs.cc	/^  void TestMaxVar3() {$/;"	f	class:LbfgsTest
TestMixFarField	mlpack/series_expansion/main.cc	/^int TestMixFarField(const Matrix &data, const Vector &weights,$/;"	f
TestMultEvaluateFarField	mlpack/series_expansion/main.cc	/^int TestMultEvaluateFarField(const Matrix &data, const Vector &weights,$/;"	f
TestMultInitAux	mlpack/series_expansion/main.cc	/^int TestMultInitAux(const Matrix& data) {$/;"	f
TestSVDNormalEquationRegressVersusSVDRegress	mlpack/regression/ridge_regression_test.cc	/^  void TestSVDNormalEquationRegressVersusSVDRegress() {$/;"	f	class:RidgeRegressionTest
TestSingleTreeVsNaive	mlpack/allknn/allknn_test.cc	/^    void TestSingleTreeVsNaive() {$/;"	f	class:TestAllkNN
TestSpectralRegression	mlpack/kernel_pca/kernel_pca_test.cc	/^  void TestSpectralRegression() {$/;"	f	class:KernelPCATest
TestSqrtm	mlpack/infomax_ica/test_infomax_ica.h	/^  void TestSqrtm(){$/;"	f	class:TestInfomaxICA
TestTransFarToFar	mlpack/series_expansion/main.cc	/^int TestTransFarToFar(const Matrix &data, const Vector &weights,$/;"	f
TestTransLocalToLocal	mlpack/series_expansion/main.cc	/^int TestTransLocalToLocal(const Matrix &data, const Vector &weights,$/;"	f
TestTreeVsNaive1	mlpack/allkfn/allkfn_test.cc	/^  void TestTreeVsNaive1() {$/;"	f	class:TestAllkFN
TestTreeVsNaive1	mlpack/allnn/allnn_test.cc	/^  void TestTreeVsNaive1() {$/;"	f	class:TestAllNN
TestTreeVsNaive1	mlpack/disk_allnn/disk_allnn_test.cc	/^  void TestTreeVsNaive1() {$/;"	f	class:TestDiskAllNN
TestTreeVsNaive2	mlpack/allkfn/allkfn_test.cc	/^   void TestTreeVsNaive2() {$/;"	f	class:TestAllkFN
TestTreeVsNaive2	mlpack/disk_allnn/disk_allnn_test.cc	/^  void TestTreeVsNaive2() {$/;"	f	class:TestDiskAllNN
TestVIFBasedFeatureSelection	mlpack/regression/ridge_regression_test.cc	/^  void TestVIFBasedFeatureSelection() {$/;"	f	class:RidgeRegressionTest
TextLineReader	include/fastlib/file/textfile.h	/^  TextLineReader() {$/;"	f	class:TextLineReader
TextLineReader	include/fastlib/file/textfile.h	/^class TextLineReader {$/;"	c
TextTokenizer	include/fastlib/file/textfile.h	/^  TextTokenizer() {$/;"	f	class:TextTokenizer
TextTokenizer	include/fastlib/file/textfile.h	/^class TextTokenizer {$/;"	c
TextWriter	include/fastlib/file/textfile.h	/^  TextWriter() {$/;"	f	class:TextWriter
TextWriter	include/fastlib/file/textfile.h	/^class TextWriter {$/;"	c
Thread	include/fastlib/par/thread.h	/^  Thread() {$/;"	f	class:Thread
Thread	include/fastlib/par/thread.h	/^class Thread {$/;"	c
ThreadMain_	include/fastlib/par/thread.h	/^  static void *ThreadMain_(void *self) {$/;"	f	class:Thread
ThreadTask	include/fastlib/par/grain.h	/^    ThreadTask(ThreadedGrainRunner *runner_in) {$/;"	f	struct:ThreadedGrainRunner::ThreadTask
ThreadTask	include/fastlib/par/grain.h	/^  struct ThreadTask : public Task {$/;"	s	class:ThreadedGrainRunner
ThreadedGrainRunner	include/fastlib/par/grain.h	/^  ThreadedGrainRunner() {}$/;"	f	class:ThreadedGrainRunner
ThreadedGrainRunner	include/fastlib/par/grain.h	/^class ThreadedGrainRunner {$/;"	c
Times	mlpack/fastica/lin_alg.h	/^  double Times(double x, double arg) {$/;"	f	namespace:linalg__private
TokenType	include/fastlib/file/textfile.h	/^  enum TokenType {$/;"	g	class:TextTokenizer
Trace	include/fastlib/la/la.h	/^  inline double Trace(Matrix &a) {$/;"	f	namespace:la
Train	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::Train(const ArrayList<Vector>& seqs, Matrix* guessTR, Matrix* guessEM, int max_iter, double tol) {$/;"	f	class:DiscreteHMM
Train	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::Train(const ArrayList<Matrix>& seqs, Matrix* guessTR, ArrayList<Vector>* guessME, ArrayList<Matrix>* guessCO, int max_iter, double tol) {$/;"	f	class:GaussianHMM
Train	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::Train(const ArrayList<Matrix>& seqs, Matrix* guessTR, ArrayList<MixtureGauss>* guessMG, int max_iter, double tol) {$/;"	f	class:MixtureofGaussianHMM
Train	mlpack/svm/smo.h	/^void SMO<TKernel>::Train(int learner_typeid, const Dataset* dataset_in) {$/;"	f	class:SMO
TrainBaumWelch	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::TrainBaumWelch(const ArrayList<Vector>& list_data_seq, int max_iteration, double tolerance) {$/;"	f	class:DiscreteHMM
TrainBaumWelch	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::TrainBaumWelch(const ArrayList<Matrix>& list_data_seq, int max_iteration, double tolerance) {$/;"	f	class:GaussianHMM
TrainBaumWelch	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::TrainBaumWelch(const ArrayList<Matrix>& list_data_seq, int max_iteration, double tolerance) {$/;"	f	class:MixtureofGaussianHMM
TrainIteration_	mlpack/svm/smo.h	/^int SMO<TKernel>::TrainIteration_() {$/;"	f	class:SMO
TrainViterbi	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::TrainViterbi(const ArrayList<Vector>& list_data_seq, int max_iteration, double tolerance) {$/;"	f	class:DiscreteHMM
TrainViterbi	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::TrainViterbi(const ArrayList<Vector>& seqs, Matrix* guessTR, Matrix* guessEM, int max_iter, double tol) {$/;"	f	class:DiscreteHMM
TrainViterbi	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::TrainViterbi(const ArrayList<Matrix>& list_data_seq, int max_iteration, double tolerance) {$/;"	f	class:GaussianHMM
TrainViterbi	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::TrainViterbi(const ArrayList<Matrix>& seqs, Matrix* guessTR, ArrayList<Vector>* guessME, ArrayList<Matrix>* guessCO, int max_iter, double tol) {$/;"	f	class:GaussianHMM
TrainViterbi	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::TrainViterbi(const ArrayList<Matrix>& list_data_seq, int max_iteration, double tolerance) {$/;"	f	class:MixtureofGaussianHMM
TrainViterbi	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::TrainViterbi(const ArrayList<Matrix>& seqs, Matrix* guessTR, ArrayList<MixtureGauss>* guessMG, int max_iter, double tol) {$/;"	f	class:MixtureofGaussianHMM
TransientDestructor	include/fastlib/base/otrav_impl.h	/^    TransientDestructor(T *obj) {$/;"	f	class:ot__private::TransientDestructor
TransientDestructor	include/fastlib/base/otrav_impl.h	/^  class TransientDestructor {$/;"	c	namespace:ot__private
TransientUnstructor	include/fastlib/base/otrav_impl.h	/^    TransientUnstructor(T *obj) {$/;"	f	class:ot__private::TransientUnstructor
TransientUnstructor	include/fastlib/base/otrav_impl.h	/^  class TransientUnstructor {$/;"	c	namespace:ot__private
TranslateDataByMin	mlpack/kde/dataset_scaler.h	/^  static void TranslateDataByMin(Matrix &qset, Matrix &rset,$/;"	f	class:DatasetScaler
TranslateFromFarField	mlpack/series_expansion/farfield_expansion_impl.h	/^void FarFieldExpansion<TKernelAux>::TranslateFromFarField$/;"	f	class:FarFieldExpansion
TranslateFromFarField	mlpack/series_expansion/local_expansion_impl.h	/^void LocalExpansion<TKernelAux>::TranslateFromFarField$/;"	f	class:LocalExpansion
TranslateFromFarField	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^void MultFarFieldExpansion<TKernelAux>::TranslateFromFarField$/;"	f	class:MultFarFieldExpansion
TranslateFromFarField	mlpack/series_expansion/mult_local_expansion_impl.h	/^void MultLocalExpansion<TKernelAux>::TranslateFromFarField$/;"	f	class:MultLocalExpansion
TranslateMultipoleToLocal_	mlpack/kde/fgt_kde.h	/^  void TranslateMultipoleToLocal_(int ref_box_num, int query_box_num,$/;"	f	class:FGTKde
TranslateToLocal	mlpack/series_expansion/farfield_expansion_impl.h	/^void FarFieldExpansion<TKernelAux>::TranslateToLocal$/;"	f	class:FarFieldExpansion
TranslateToLocal	mlpack/series_expansion/local_expansion_impl.h	/^void LocalExpansion<TKernelAux>::TranslateToLocal(LocalExpansion &se) {$/;"	f	class:LocalExpansion
TranslateToLocal	mlpack/series_expansion/mult_farfield_expansion_impl.h	/^void MultFarFieldExpansion<TKernelAux>::TranslateToLocal$/;"	f	class:MultFarFieldExpansion
TranslateToLocal	mlpack/series_expansion/mult_local_expansion_impl.h	/^void MultLocalExpansion<TKernelAux>::TranslateToLocal(MultLocalExpansion &se) {$/;"	f	class:MultLocalExpansion
TransposeInit	include/fastlib/la/uselapack.h	/^  inline void TransposeInit(const Matrix &X, Matrix *Y) {$/;"	f	namespace:la
TransposeOverwrite	include/fastlib/la/uselapack.h	/^  inline void TransposeOverwrite(const Matrix &X, Matrix *Y) {$/;"	f	namespace:la
TransposeSquare	include/fastlib/la/uselapack.h	/^  inline void TransposeSquare(Matrix *X) {$/;"	f	namespace:la
Tree	mlpack/kde/dualtree_kde.h	/^  typedef GeneralBinarySpaceTree<DBallBound < LMetric<2>, Vector>, Matrix, KdeStat<TKernelAux> > Tree;$/;"	t	class:DualtreeKde
Tree	mlpack/kde/dualtree_kde_cv.h	/^  typedef GeneralBinarySpaceTree<DBallBound < LMetric<2>, Vector>, Matrix, KdeCVStat<TKernelAux> > Tree;$/;"	t	class:DualtreeKdeCV
Tree	mlpack/kde/dualtree_vkde.h	/^  typedef GeneralBinarySpaceTree<DBallBound < LMetric<2>, Vector>, Matrix, VKdeStat<TKernel> > Tree;$/;"	t	class:DualtreeVKde
Tree	mlpack/range_search/ortho_range_search.h	/^  typedef GeneralBinarySpaceTree<GenHrectBound<T, 2>, GenMatrix<T> > Tree;$/;"	t	class:OrthoRangeSearch
TreeType	mlpack/allkfn/allkfn.h	/^  typedef BinarySpaceTree<DHrectBound<2>, Matrix, QueryStat> TreeType;$/;"	t	class:AllkFN
TreeType	mlpack/allknn/allknn.h	/^  typedef BinarySpaceTree<DHrectBound<2>, Matrix, QueryStat> TreeType;$/;"	t	class:AllkNN
TreeType	mlpack/allnn/allnn.h	/^  typedef BinarySpaceTree<DHrectBound<2>, Matrix, QueryStat> TreeType;$/;"	t	class:AllNN
TreeType	mlpack/disk_allnn/disk_allnn.h	/^  typedef BinarySpaceTreeMmap<DHrectBoundMmap<2>, Matrix, QueryStat> TreeType;$/;"	t	class:DiskAllNN
Trim	include/fastlib/col/arraylist.h	/^  void Trim() {$/;"	f	class:ArrayList
Trim	include/fastlib/col/col_string.h	/^  void Trim()$/;"	f	class:String
Truncate	include/fastlib/col/col_string.h	/^  void Truncate(const char *s) {$/;"	f	class:String
Truncate	include/fastlib/col/col_string.h	/^  void Truncate(index_t newlen) {$/;"	f	class:String
TryLock	include/fastlib/par/thread.h	/^  bool TryLock() const {$/;"	f	class:Mutex
Type	include/fastlib/data/dataset.h	/^  enum Type {$/;"	g	class:DatasetFeature
UNINIT	include/fastlib/par/thread.h	/^  enum {UNINIT, READY, ATTACHED, DETACHED, DONE} status_;$/;"	e	enum:Thread::__anon18
USE_BLAS_L1	include/fastlib/la/uselapack.h	64;"	d
USE_LAPACK	include/fastlib/la/uselapack.h	63;"	d
USE_LAPACK	include/fastlib/la/uselapack.h	69;"	d
UTA_	mlpack/quicsvd/quicsvd.h	/^  ArrayList<Vector> UTA_;$/;"	m	class:QuicSVD
U_INFOMAX_ICA	mlpack/infomax_ica/infomax_ica.h	48;"	d
U_SVM_SMO_H	mlpack/svm/smo.h	80;"	d
U_SVM_SVM_H	mlpack/svm/svm.h	44;"	d
Unget_	include/fastlib/file/textfile.h	/^  void Unget_(int c) {$/;"	f	class:TextTokenizer
Uninitialize_	include/fastlib/la/matrix.h	/^  void Uninitialize_() {$/;"	f	class:GenMatrix
Uninitialize_	include/fastlib/la/matrix.h	/^  void Uninitialize_() {$/;"	f	class:GenVector
Union	include/fastlib/col/rangeset.h	/^void RangeSet<TBoundary>::Union($/;"	f	class:RangeSet
Unlock	include/fastlib/par/thread.h	/^  void Unlock() const {$/;"	f	class:Mutex
Unstructor	include/fastlib/base/otrav_impl.h	/^    Unstructor(T *obj) {$/;"	f	class:ot__private::Unstructor
Unstructor	include/fastlib/base/otrav_impl.h	/^  class Unstructor {$/;"	c	namespace:ot__private
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {$/;"	f	class:ot__private::Aliaser
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {$/;"	f	class:ot__private::Copier
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {$/;"	f	class:ot__private::Deserializer
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {$/;"	f	class:ot__private::Freezer
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {$/;"	f	class:ot__private::Printer
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {$/;"	f	class:ot__private::Serializer
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {}$/;"	f	class:ot__private::Destructor
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {}$/;"	f	class:ot__private::Relocator
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {}$/;"	f	class:ot__private::TransientDestructor
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {}$/;"	f	class:ot__private::TransientUnstructor
Untraversed	include/fastlib/base/otrav_impl.h	/^    void Untraversed(T &obj) {}$/;"	f	class:ot__private::Unstructor
UpdateAlphaStatus_	mlpack/svm/smo.h	/^  void UpdateAlphaStatus_(index_t i) {$/;"	f	class:SMO
UpdateBFGS_	mlpack/optimization/lbfgs/lbfgs_impl.h	/^success_t Lbfgs<OptimizedFunction>::UpdateBFGS_() {$/;"	f	class:Lbfgs
UpdateBFGS_	mlpack/optimization/lbfgs/lbfgs_impl.h	/^success_t Lbfgs<OptimizedFunction>::UpdateBFGS_(index_t index_bfgs) {$/;"	f	class:Lbfgs
UpdateLagrangeMult	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::UpdateLagrangeMult(Matrix &coordinates) {$/;"	f	class:MaxFurthestNeighbors
UpdateLagrangeMult	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::UpdateLagrangeMult(Matrix &coordinates) {$/;"	f	class:MaxVariance
UpdateLagrangeMult_	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::UpdateLagrangeMult_() {$/;"	f	class:Lbfgs
UpdatingGradientAlpha_	mlpack/svm/smo.h	/^void SMO<TKernel>::UpdatingGradientAlpha_(index_t i, index_t j) {$/;"	f	class:SMO
VERBOSE_GOT_HERE	include/fastlib/base/debug.h	142;"	d
VERBOSE_MSG	include/fastlib/base/debug.h	127;"	d
VERBOSE_ONLY	include/fastlib/base/debug.h	82;"	d
VERBOSE_ONLY	include/fastlib/base/debug.h	84;"	d
VKdeCVStat	mlpack/kde/kde_cv_stat.h	/^  VKdeCVStat() {$/;"	f	class:VKdeCVStat
VKdeCVStat	mlpack/kde/kde_cv_stat.h	/^class VKdeCVStat {$/;"	c
VKdeStat	mlpack/kde/kde_stat.h	/^  VKdeStat() {$/;"	f	class:VKdeStat
VKdeStat	mlpack/kde/kde_stat.h	/^class VKdeStat {$/;"	c
Value	include/fastlib/col/heap.h	/^  typedef TValue Value;$/;"	t	class:MinHeap
Value	include/fastlib/col/intmap.h	/^  typedef TValue Value;$/;"	t	class:DenseIntMap
Value	include/fastlib/math/math_lib.h	/^  typedef TValue Value;$/;"	t	class:MinMaxVal
ValueCondition	include/fastlib/par/thread.h	/^  ValueCondition() { value_ = 0; }$/;"	f	class:ValueCondition
ValueCondition	include/fastlib/par/thread.h	/^class ValueCondition {$/;"	c
VariableBandwidthKde	mlpack/kde/dualtree_kde_main.cc	/^void VariableBandwidthKde(Matrix &queries, Matrix &references, $/;"	f
VarianceInflationFactor	mlpack/regression/ridge_regression_util.h	/^  static double VarianceInflationFactor(const Vector &observations,$/;"	f	class:RidgeRegressionUtil
Vector	include/fastlib/la/matrix.h	/^typedef GenVector<double> Vector;$/;"	t
VectorMapSum	mlpack/fastica/lin_alg.h	/^  double VectorMapSum(double (*function)(double,double),$/;"	f	namespace:linalg__private
VectorToDiag	mlpack/fastica/lin_alg.h	/^  Matrix* VectorToDiag(const Matrix* const diag_vector, Matrix* diag_matrix) {$/;"	f	namespace:linalg__private
VectorToDiag	mlpack/fastica/lin_alg.h	/^  Matrix* VectorToDiag(const Vector* const diag_vector, Matrix* diag_matrix) {$/;"	f	namespace:linalg__private
ViterbiInit	mlpack/hmm/discreteHMM.cc	/^double DiscreteHMM::ViterbiInit(const Vector& seq, const Matrix& trans, const Matrix& emis, Vector* states) {$/;"	f	class:DiscreteHMM
ViterbiInit	mlpack/hmm/discreteHMM.cc	/^double DiscreteHMM::ViterbiInit(int L, const Vector& seq, const Matrix& trans, const Matrix& emis, Vector* states) {$/;"	f	class:DiscreteHMM
ViterbiInit	mlpack/hmm/gaussianHMM.cc	/^double GaussianHMM::ViterbiInit(const Matrix& trans, const Matrix& emis_prob, Vector* states) {$/;"	f	class:GaussianHMM
ViterbiInit	mlpack/hmm/gaussianHMM.cc	/^double GaussianHMM::ViterbiInit(int L, const Matrix& trans, const Matrix& emis_prob, Vector* states) {$/;"	f	class:GaussianHMM
ViterbiInit	mlpack/hmm/mixgaussHMM.cc	/^double MixtureofGaussianHMM::ViterbiInit(const Matrix& trans, const Matrix& emis_prob, Vector* states) {$/;"	f	class:MixtureofGaussianHMM
ViterbiInit	mlpack/hmm/mixgaussHMM.cc	/^double MixtureofGaussianHMM::ViterbiInit(int L, const Matrix& trans, const Matrix& emis_prob, Vector* states) {$/;"	f	class:MixtureofGaussianHMM
WANT_NEWLINE	include/fastlib/file/textfile.h	/^    WANT_NEWLINE = 0x01$/;"	e	enum:TextTokenizer::Features
Wait	include/fastlib/par/thread.h	/^  void Wait() {$/;"	f	class:DoneCondition
Wait	include/fastlib/par/thread.h	/^  void Wait(Mutex* mutex_to_unlock) {$/;"	f	class:WaitCondition
Wait	include/fastlib/par/thread.h	/^  void Wait(int v) {$/;"	f	class:ValueCondition
WaitCondition	include/fastlib/par/thread.h	/^  WaitCondition() {$/;"	f	class:WaitCondition
WaitCondition	include/fastlib/par/thread.h	/^class WaitCondition {$/;"	c
WaitMillis	include/fastlib/par/thread.h	/^  void WaitMillis(Mutex& mutex_to_unlock, unsigned millis) {$/;"	f	class:WaitCondition
WaitNot	include/fastlib/par/thread.h	/^  void WaitNot(int v) {$/;"	f	class:ValueCondition
WaitSec	include/fastlib/par/thread.h	/^  void WaitSec(Mutex& mutex_to_unlock, unsigned sec) {$/;"	f	class:WaitCondition
WaitStop	include/fastlib/par/thread.h	/^  void WaitStop() {$/;"	f	class:Thread
WalkDown_	include/fastlib/col/heap.h	/^  index_t WalkDown_(const Entry& entry, index_t i) {$/;"	f	class:MinHeap
WalkUp_	include/fastlib/col/heap.h	/^  index_t WalkUp_(const Entry& entry, index_t i) {$/;"	f	class:MinHeap
WeakCopy	include/fastlib/la/matrix.h	/^  void WeakCopy(const GenMatrix& other) {$/;"	f	class:GenMatrix
WeakCopy	include/fastlib/la/matrix.h	/^  void WeakCopy(const GenVector& other) {$/;"	f	class:GenVector
WhitenUsingEig	mlpack/fastica/lin_alg.h	/^  void WhitenUsingEig(Matrix X, Matrix* X_whitened, Matrix* whitening_matrix) {$/;"	f	namespace:linalg__private
WhitenUsingSVD	mlpack/fastica/lin_alg.h	/^  void WhitenUsingSVD(Matrix X, Matrix* X_whitened, Matrix* whitening_matrix) {$/;"	f	namespace:linalg__private
WorkingSetSelection_	mlpack/svm/smo.h	/^bool SMO<TKernel>::WorkingSetSelection_(index_t &out_i, index_t &out_j) {$/;"	f	class:SMO
Write	include/fastlib/file/textfile.h	/^  success_t Write(const char *s) {$/;"	f	class:TextWriter
Write	include/fastlib/file/textfile.h	/^  success_t Write(double d) {$/;"	f	class:TextWriter
Write	include/fastlib/file/textfile.h	/^  success_t Write(int i) {$/;"	f	class:TextWriter
Write	include/fastlib/file/textfile.h	/^  success_t Write(long i) {$/;"	f	class:TextWriter
Write	include/fastlib/file/textfile.h	/^  success_t Write(long long i) {$/;"	f	class:TextWriter
Write	include/fastlib/file/textfile.h	/^  success_t Write(unsigned int i) {$/;"	f	class:TextWriter
Write	include/fastlib/file/textfile.h	/^  success_t Write(unsigned long i) {$/;"	f	class:TextWriter
Write	include/fastlib/file/textfile.h	/^  success_t Write(unsigned long long i) {$/;"	f	class:TextWriter
Write_	include/fastlib/base/otrav_impl.h	/^    void Write_(T *val, index_t elems = 1) {$/;"	f	class:ot__private::Serializer
X	mlpack/fastica/fastica.h	/^  Matrix X() {$/;"	f	class:FastICA
XMLFormat	include/fastlib/base/otrav_impl.h	/^    XMLFormat(FILE *stream) {$/;"	f	class:ot::XMLFormat
XMLFormat	include/fastlib/base/otrav_impl.h	/^  class XMLFormat {$/;"	c	namespace:ot
XML_FORMAT__PRIMITIVE	include/fastlib/base/otrav_impl.h	236;"	d
XML_FORMAT__PRIMITIVE	include/fastlib/base/otrav_impl.h	243;"	d
X_	mlpack/fastica/fastica.h	/^  Matrix X_;$/;"	m	class:FastICA
ZPowAbsImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowAbsImpl<t_numerator, t_denominator, false> {$/;"	s	namespace:math__private
ZPowAbsImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowAbsImpl<t_numerator, t_denominator, true> {$/;"	s	namespace:math__private
ZPowImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowImpl {$/;"	s	namespace:math__private
ZPowImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowImpl<0, t_denominator> {$/;"	s	namespace:math__private
ZPowImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowImpl<1, 1> {$/;"	s	namespace:math__private
ZPowImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowImpl<1, 2> {$/;"	s	namespace:math__private
ZPowImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowImpl<1, 3> {$/;"	s	namespace:math__private
ZPowImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowImpl<t_equal, t_equal> {$/;"	s	namespace:math__private
ZPowImpl	include/fastlib/math/math_lib_impl.h	/^  struct ZPowImpl<t_numerator, 1> {$/;"	s	namespace:math__private
Zero	include/fastlib/base/ccmem.h	/^  inline T *Zero(T *array, size_t elems = 1) {$/;"	f	namespace:mem
Zero	include/fastlib/base/deprecated.h	/^  inline T *Zero(T *array, size_t elems = 1) {$/;"	f	namespace:mem
ZeroBytes	include/fastlib/base/ccmem.h	/^  inline T *ZeroBytes(T *array, size_t bytes) {$/;"	f	namespace:mem
ZeroBytes	include/fastlib/base/deprecated.h	/^  inline T *ZeroBytes(T *array, size_t bytes) {$/;"	f	namespace:mem
_REENTRANT	include/fastlib/base/common.h	52;"	d
a1	mlpack/fastica/fastica.h	/^  double a1() {$/;"	f	class:FastICA
a1_	mlpack/fastica/fastica.h	/^  double a1_;$/;"	m	class:FastICA
a2	mlpack/fastica/fastica.h	/^  double a2() {$/;"	f	class:FastICA
a2_	mlpack/fastica/fastica.h	/^  double a2_;$/;"	m	class:FastICA
a_mat	mlpack/kalman/kalman_helper.h	/^  Matrix a_mat; $/;"	m	struct:ssm
accumulate	mlpack/hmm/discreteDST.h	/^  void accumulate(int i, double v) { ACC_p[i]+=v; }$/;"	f	class:DiscreteDST
accumulate	mlpack/hmm/mixtureDST.h	/^  void accumulate(const Vector& v) {$/;"	f	class:MixtureGauss
accumulate	mlpack/hmm/mixtureDST.h	/^  void accumulate(double p, int i, const Vector& v) {$/;"	f	class:MixtureGauss
accumulate_cluster	mlpack/hmm/mixtureDST.h	/^  void accumulate_cluster(int i, const Vector& v) {$/;"	f	class:MixtureGauss
active_set_	mlpack/svm/smo.h	/^  ArrayList<index_t> active_set_; \/* list that stores the indices of active alphas *\/$/;"	m	class:SMO
addBasisFrom	mlpack/quicsvd/quicsvd.cc	/^void QuicSVD::addBasisFrom(const CosineNode& node) {$/;"	f	class:QuicSVD
addOne	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::addOne(Matrix &m){$/;"	f	class:InfomaxICA
addToQueue	mlpack/quicsvd/quicsvd.cc	/^void QuicSVD::addToQueue(CosineNode* node) {$/;"	f	class:QuicSVD
advice_limit_lower_	mlpack/disk_allnn/disk_allnn.h	/^  ptrdiff_t advice_limit_lower_;$/;"	m	class:DiskAllNN
advice_limit_upper_	mlpack/disk_allnn/disk_allnn.h	/^  ptrdiff_t advice_limit_upper_;$/;"	m	class:DiskAllNN
affinity_matrix_	mlpack/kernel_pca/kernel_pca.h	/^  SparseMatrix affinity_matrix_;$/;"	m	class:KernelPCA
allkfn_	mlpack/allkfn/allkfn_test.cc	/^  AllkFN *allkfn_;$/;"	m	class:TestAllkFN	file:
allkfn_	mlpack/mvu/mvu_objectives.h	/^  AllkFN allkfn_;$/;"	m	class:MaxFurthestNeighbors
allknn_	mlpack/allknn/allknn_test.cc	/^  AllkNN *allknn_;$/;"	m	class:TestAllkNN	file:
allknn_	mlpack/kernel_pca/kernel_pca.h	/^  AllkNN allknn_;$/;"	m	class:KernelPCA
allknn_	mlpack/mvu/mvu_objectives.h	/^  AllkNN allknn_;$/;"	m	class:MaxFurthestNeighbors
allknn_	mlpack/mvu/mvu_objectives.h	/^  AllkNN allknn_;$/;"	m	class:MaxVariance
allnn_	mlpack/allnn/allnn_test.cc	/^  AllNN *allnn_;$/;"	m	class:TestAllNN	file:
allnn_doc	mlpack/allnn/allnn.h	/^const fx_module_doc allnn_doc = {$/;"	v
allnn_doc	mlpack/disk_allnn/disk_allnn.h	/^const fx_module_doc allnn_doc = {$/;"	v
allnn_entries	mlpack/allnn/allnn.h	/^const fx_entry_doc allnn_entries[] = {$/;"	v
allnn_entries	mlpack/disk_allnn/disk_allnn.h	/^const fx_entry_doc allnn_entries[] = {$/;"	v
allnn_naive_doc	mlpack/allnn/allnn.h	/^const fx_module_doc allnn_naive_doc = {$/;"	v
allnn_naive_doc	mlpack/disk_allnn/disk_allnn.h	/^const fx_module_doc allnn_naive_doc = {$/;"	v
allnn_naive_entries	mlpack/allnn/allnn.h	/^const fx_entry_doc allnn_naive_entries[] = {$/;"	v
allnn_naive_entries	mlpack/disk_allnn/disk_allnn.h	/^const fx_entry_doc allnn_naive_entries[] = {$/;"	v
alpha_	mlpack/svm/smo.h	/^  Vector alpha_; \/* the alphas, to be optimized *\/$/;"	m	class:SMO
alpha_status_	mlpack/svm/smo.h	/^  Vector alpha_status_; \/*  ID_LOWER_BOUND (-1), ID_UPPER_BOUND (1), ID_FREE (0) *\/$/;"	m	class:SMO
already_used_	mlpack/allnn/allnn.h	/^  bool already_used_;$/;"	m	class:AllNN
already_used_	mlpack/disk_allnn/disk_allnn.h	/^  bool already_used_;$/;"	m	class:DiskAllNN
applyICA	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::applyICA(const Matrix &dataset){$/;"	f	class:InfomaxICA
approach	mlpack/fastica/fastica.h	/^  int approach() {$/;"	f	class:FastICA
approach_	mlpack/fastica/fastica.h	/^  int approach_;$/;"	m	class:FastICA
array_	include/fastlib/base/otrav_impl.h	/^    ptrdiff_t array_;$/;"	m	class:ot__private::Printer
array_	include/fastlib/col/col_string.h	/^  ArrayList<char> array_;$/;"	m	class:String
array_	include/fastlib/la/matrix.h	/^  double array_[t_cols][t_rows];$/;"	m	class:SmallMatrix
array_	include/fastlib/la/matrix.h	/^  double array_[t_length];$/;"	m	class:SmallVector
assign_weights	mlpack/kde/fft_kde.h	/^  void assign_weights(int reference_pt_num, int level, double volume, int pos,$/;"	f	class:FFTKde
b_	mlpack/infomax_ica/infomax_ica.h	/^  int b_;$/;"	m	class:InfomaxICA
b_	mlpack/infomax_ica/test_infomax_ica.h	/^  int b_;$/;"	m	class:TestInfomaxICA
b_	mlpack/svm/svm.h	/^    int b_;$/;"	m	struct:SVM::PARAMETERS
b_mat	mlpack/kalman/kalman_helper.h	/^  Matrix b_mat; $/;"	m	struct:ssm
back	include/fastlib/col/arraylist.h	/^  Elem &back() {$/;"	f	class:ArrayList
back	include/fastlib/col/arraylist.h	/^  const Elem &back() const {$/;"	f	class:ArrayList
bandwidth_	mlpack/kde/original_ifgt.h	/^  double bandwidth_;$/;"	m	class:OriginalIFGT
bandwidth_	mlpack/kernel_pca/kernel_pca.h	/^    double bandwidth_;$/;"	m	class:KernelPCA::GaussianKernel
bandwidth_factor_	mlpack/kde/original_ifgt.h	/^  double bandwidth_factor_;$/;"	m	class:OriginalIFGT
bandwidth_sq	include/fastlib/math/kernel.h	/^  double bandwidth_sq() const {$/;"	f	class:EpanKernel
bandwidth_sq	include/fastlib/math/kernel.h	/^  double bandwidth_sq() const {$/;"	f	class:GaussianKernel
bandwidth_sq	include/fastlib/math/kernel.h	/^  double bandwidth_sq() const {$/;"	f	class:GaussianStarKernel
bandwidth_sq	mlpack/series_expansion/farfield_expansion.h	/^  double bandwidth_sq() const { return kernel_->bandwidth_sq(); }$/;"	f	class:FarFieldExpansion
bandwidth_sq	mlpack/series_expansion/local_expansion.h	/^  double bandwidth_sq() const { return kernel_->bandwidth_sq(); }$/;"	f	class:LocalExpansion
bandwidth_sq	mlpack/series_expansion/mult_farfield_expansion.h	/^  double bandwidth_sq() const { return kernel_->bandwidth_sq(); }$/;"	f	class:MultFarFieldExpansion
bandwidth_sq	mlpack/series_expansion/mult_local_expansion.h	/^  double bandwidth_sq() const { return kernel_->bandwidth_sq(); }$/;"	f	class:MultLocalExpansion
bandwidth_sq_	include/fastlib/math/kernel.h	/^  double bandwidth_sq_;$/;"	m	class:EpanKernel
bandwidth_sq_	include/fastlib/math/kernel.h	/^  double bandwidth_sq_;$/;"	m	class:GaussianKernel
bandwidth_sq_	include/fastlib/math/kernel.h	/^  double bandwidth_sq_;$/;"	m	class:GaussianStarKernel
bandwidth_sq_	mlpack/kde/original_ifgt.h	/^  double bandwidth_sq_;$/;"	m	class:OriginalIFGT
basis_	mlpack/quicsvd/quicsvd.h	/^  ArrayList<Vector> basis_;$/;"	m	class:QuicSVD
begin	include/fastlib/col/arraylist.h	/^  Elem* begin() {$/;"	f	class:ArrayList
begin	include/fastlib/col/arraylist.h	/^  const Elem *begin() const {$/;"	f	class:ArrayList
begin	include/fastlib/col/col_string.h	/^  char* begin()$/;"	f	class:String
begin	include/fastlib/col/col_string.h	/^  const char* begin() const   $/;"	f	class:String
begin	include/fastlib/col/rangeset.h	/^    Boundary begin;$/;"	m	struct:RangeSet::Range
begin	include/fastlib/tree/spacetree.h	/^  index_t begin() const {$/;"	f	class:BinarySpaceTree
begin	mlpack/kde/general_spacetree.h	/^  index_t begin() const {$/;"	f	class:GeneralBinarySpaceTree
begin_	include/fastlib/tree/spacetree.h	/^  index_t begin_;$/;"	m	class:BinarySpaceTree
begin_	mlpack/kde/general_spacetree.h	/^  index_t begin_;$/;"	m	class:GeneralBinarySpaceTree
bias_	mlpack/svm/smo.h	/^  double bias_;$/;"	m	class:SMO
bias_	mlpack/svm/svm.h	/^    double bias_;$/;"	m	struct:SVM::SVM_MODELS
block_	include/fastlib/base/otrav_impl.h	/^    char *block_;$/;"	m	class:ot__private::Freezer
block_	include/fastlib/base/otrav_impl.h	/^    const char *block_;$/;"	m	class:ot__private::Relocator
bound	include/fastlib/tree/spacetree.h	/^  Bound& bound() {$/;"	f	class:BinarySpaceTree
bound	include/fastlib/tree/spacetree.h	/^  const Bound& bound() const {$/;"	f	class:BinarySpaceTree
bound	mlpack/kde/general_spacetree.h	/^  Bound& bound() {$/;"	f	class:GeneralBinarySpaceTree
bound	mlpack/kde/general_spacetree.h	/^  const Bound& bound() const {$/;"	f	class:GeneralBinarySpaceTree
bound_	include/fastlib/tree/spacetree.h	/^  Bound bound_;$/;"	m	class:BinarySpaceTree
bound_	mlpack/kde/general_spacetree.h	/^  Bound bound_;$/;"	m	class:GeneralBinarySpaceTree
bounds_	include/fastlib/tree/bounds.h	/^  DRange *bounds_;$/;"	m	class:DHrectBound
bounds_aux	mlpack/series_expansion/bounds_aux.h	/^namespace bounds_aux {$/;"	n
budget_	mlpack/svm/smo.h	/^  int budget_;$/;"	m	class:SMO
c	include/fastlib/base/compiler.h	/^  struct S {T x; char c;};$/;"	m	struct:compiler_strideof::S
c_mat	mlpack/kalman/kalman_helper.h	/^  Matrix c_mat; $/;"	m	struct:ssm
c_str	include/fastlib/col/col_string.h	/^  char* c_str()$/;"	f	class:String
c_str	include/fastlib/col/col_string.h	/^  const char* c_str() const$/;"	f	class:String
cached_kernel_value_	mlpack/svm/smo.h	/^  double cached_kernel_value_; \/* cache *\/$/;"	m	class:SMO
calL2Err	mlpack/quicsvd/quicsvd.cc	/^double QuicSVD::calL2Err(const CosineNode& node) {$/;"	f	class:QuicSVD
calSplitPoint	mlpack/quicsvd/cosine_tree.cc	/^index_t calSplitPoint(const ArrayList<double>& key) {$/;"	f
cap_	include/fastlib/col/arraylist.h	/^  index_t cap_;  \/\/ allocated size of the array; -1 if alias$/;"	m	class:ArrayList
capacity	include/fastlib/col/arraylist.h	/^  index_t capacity() const {$/;"	f	class:ArrayList
center	include/fastlib/tree/bounds.h	/^  TPoint& center() {$/;"	f	class:DBallBound
center	include/fastlib/tree/bounds.h	/^  const TPoint& center() const {$/;"	f	class:DBallBound
center_	include/fastlib/tree/bounds.h	/^  TPoint center_;$/;"	m	class:DBallBound
center_	mlpack/series_expansion/farfield_expansion.h	/^  Vector center_;$/;"	m	class:FarFieldExpansion
center_	mlpack/series_expansion/local_expansion.h	/^  Vector center_;$/;"	m	class:LocalExpansion
center_	mlpack/series_expansion/mult_farfield_expansion.h	/^  Vector center_;$/;"	m	class:MultFarFieldExpansion
center_	mlpack/series_expansion/mult_local_expansion.h	/^  Vector center_;$/;"	m	class:MultLocalExpansion
class_probabilities_	mlpack/naive_bayes/simple_nbc.h	/^  ArrayList<double> class_probabilities_;$/;"	m	class:SimpleNaiveBayesClassifier
classifier_fx_name_	include/fastlib/data/crossvalidation.h	/^  const char *classifier_fx_name_;$/;"	m	class:SimpleCrossValidator
clsf_confusion_matrix	include/fastlib/data/crossvalidation.h	/^  const Matrix& clsf_confusion_matrix() const {$/;"	f	class:GeneralCrossValidator
clsf_confusion_matrix_	include/fastlib/data/crossvalidation.h	/^  Matrix clsf_confusion_matrix_;$/;"	m	class:GeneralCrossValidator
clsf_n_classes_	include/fastlib/data/crossvalidation.h	/^  int clsf_n_classes_;$/;"	m	class:GeneralCrossValidator
clsf_n_correct	include/fastlib/data/crossvalidation.h	/^  index_t clsf_n_correct() {$/;"	f	class:GeneralCrossValidator
clsf_n_correct_	include/fastlib/data/crossvalidation.h	/^  index_t clsf_n_correct_;$/;"	m	class:GeneralCrossValidator
clsf_n_incorrect	include/fastlib/data/crossvalidation.h	/^  index_t clsf_n_incorrect() {$/;"	f	class:GeneralCrossValidator
clsf_portion_correct	include/fastlib/data/crossvalidation.h	/^  double clsf_portion_correct() {$/;"	f	class:GeneralCrossValidator
cluster_centers_	mlpack/kde/original_ifgt.h	/^  Matrix cluster_centers_;$/;"	m	class:OriginalIFGT
cluster_index_	mlpack/kde/original_ifgt.h	/^  ArrayList<int> cluster_index_;$/;"	m	class:OriginalIFGT
cluster_radii_	mlpack/kde/original_ifgt.h	/^  Vector cluster_radii_;$/;"	m	class:OriginalIFGT
coef_	mlpack/svm/svm.h	/^    ArrayList<double> coef_;$/;"	m	struct:SVM::SVM_MODELS
coeffs_	mlpack/series_expansion/farfield_expansion.h	/^  Vector coeffs_;$/;"	m	class:FarFieldExpansion
coeffs_	mlpack/series_expansion/local_expansion.h	/^  Vector coeffs_;$/;"	m	class:LocalExpansion
coeffs_	mlpack/series_expansion/mult_farfield_expansion.h	/^  Vector coeffs_;$/;"	m	class:MultFarFieldExpansion
coeffs_	mlpack/series_expansion/mult_local_expansion.h	/^  Vector coeffs_;$/;"	m	class:MultLocalExpansion
columnNormL2	mlpack/quicsvd/cosine_tree.cc	/^double columnNormL2(const Matrix& A, index_t i_col) {$/;"	f
comment_start_	include/fastlib/file/textfile.h	/^  const char *comment_start_;$/;"	m	class:TextTokenizer
compiler_strideof	include/fastlib/base/compiler.h	/^struct compiler_strideof {$/;"	s
complex	mlpack/kde/fft_kde.h	/^  struct complex {$/;"	s	class:FFTKde
cond_	include/fastlib/par/thread.h	/^  WaitCondition cond_;$/;"	m	class:DoneCondition
cond_	include/fastlib/par/thread.h	/^  WaitCondition cond_;$/;"	m	class:ValueCondition
cond_	include/fastlib/par/thread.h	/^  pthread_cond_t cond_;$/;"	m	class:WaitCondition
confusion_matrix	include/fastlib/data/crossvalidation.h	/^  const Matrix& confusion_matrix() const {$/;"	f	class:SimpleCrossValidator
confusion_matrix_	include/fastlib/data/crossvalidation.h	/^  Matrix confusion_matrix_;$/;"	m	class:SimpleCrossValidator
context_	include/fastlib/par/grain.h	/^  Context context_;$/;"	m	class:ThreadedGrainRunner
coordinates	mlpack/optimization/lbfgs/lbfgs_impl.h	/^Matrix *Lbfgs<OptimizedFunction>::coordinates() {$/;"	f	class:Lbfgs
coordinates_	mlpack/optimization/lbfgs/lbfgs.h	/^  Matrix coordinates_;$/;"	m	class:Lbfgs
count	include/fastlib/tree/spacetree.h	/^  index_t count() const {$/;"	f	class:BinarySpaceTree
count	mlpack/kde/general_spacetree.h	/^  index_t count() const {$/;"	f	class:GeneralBinarySpaceTree
count_	include/fastlib/tree/spacetree.h	/^  index_t count_;$/;"	m	class:BinarySpaceTree
count_	mlpack/kde/general_spacetree.h	/^  index_t count_;$/;"	m	class:GeneralBinarySpaceTree
covariance_	mlpack/regression/ridge_regression.h	/^  Matrix covariance_;$/;"	m	class:RidgeRegression
covs	mlpack/hmm/mixtureDST.h	/^  ArrayList<Matrix> covs;$/;"	m	class:MixtureGauss
cpu	include/fastlib/fx/stopwatch.h	/^  struct tms cpu;$/;"	m	struct:timestamp	typeref:struct:timestamp::tms
createUTA2	mlpack/quicsvd/quicsvd.cc	/^void createUTA2(const ArrayList<Vector>& UTA, Matrix* UTA2) {$/;"	f
critical_point_sq_	include/fastlib/math/kernel.h	/^  double critical_point_sq_;$/;"	m	class:GaussianStarKernel
critical_point_value_	include/fastlib/math/kernel.h	/^  double critical_point_value_;$/;"	m	class:GaussianStarKernel
ct_iter_	mlpack/svm/smo.h	/^  index_t ct_iter_; \/* counter for the number of iterations *\/$/;"	m	class:SMO
ct_shrinking_	mlpack/svm/smo.h	/^  index_t ct_shrinking_; \/* counter for doing shrinking  *\/$/;"	m	class:SMO
cum_norms_	mlpack/quicsvd/cosine_tree.h	/^  ArrayList<double> cum_norms_;$/;"	m	class:CosineNode
curRelErr	mlpack/quicsvd/quicsvd.cc	/^double QuicSVD::curRelErr() {$/;"	f	class:QuicSVD
cur_	include/fastlib/file/textfile.h	/^  String cur_;$/;"	m	class:TextTokenizer
cur_type_	include/fastlib/file/textfile.h	/^  TokenType cur_type_;$/;"	m	class:TextTokenizer
cut_off_radius_	mlpack/kde/original_ifgt.h	/^  double cut_off_radius_;$/;"	m	class:OriginalIFGT
cycles	include/fastlib/fx/stopwatch.h	/^  tsc_t cycles;$/;"	m	struct:timestamp
d	mlpack/fastica/fastica.h	/^  index_t d;$/;"	m	class:FastICA
d_fnyquist_	mlpack/kde/fft_kde.h	/^  Vector d_fnyquist_;$/;"	m	class:FFTKde
d_omega	mlpack/mog/mog_l2e.h	/^  Matrix& d_omega(){$/;"	f	class:MoGL2E
d_omega_	mlpack/mog/mog_l2e.h	/^  Matrix d_omega_;$/;"	m	class:MoGL2E
d_sigma	mlpack/mog/mog_l2e.h	/^  ArrayList<ArrayList<Matrix> >& d_sigma(){$/;"	f	class:MoGL2E
d_sigma	mlpack/mog/mog_l2e.h	/^  ArrayList<Matrix>& d_sigma(index_t i){$/;"	f	class:MoGL2E
d_sigma_	mlpack/mog/mog_l2e.h	/^  ArrayList<ArrayList<Matrix> > d_sigma_;$/;"	m	class:MoGL2E
data	include/fastlib/col/queue.h	/^    T data;$/;"	m	struct:Queue::Node
data	include/fastlib/data/crossvalidation.h	/^  const Dataset& data() const {$/;"	f	class:GeneralCrossValidator
data	include/fastlib/data/crossvalidation.h	/^  const Dataset& data() const {$/;"	f	class:SimpleCrossValidator
data	include/fastlib/data/dataset.h	/^namespace data {$/;"	n
data	mlpack/optimization/optimizers.h	/^  const Matrix data() {$/;"	f	class:QuasiNewton
data	mlpack/optimization/optimizers.h	/^  const Matrix& data() {$/;"	f	class:NelderMead
dataNorm2_	mlpack/quicsvd/quicsvd.h	/^  double dataNorm2_;$/;"	m	class:QuicSVD
data_	include/fastlib/data/crossvalidation.h	/^  const Dataset *data_;$/;"	m	class:GeneralCrossValidator
data_	include/fastlib/data/crossvalidation.h	/^  const Dataset *data_;$/;"	m	class:SimpleCrossValidator
data_	mlpack/infomax_ica/infomax_ica.h	/^  Matrix data_;$/;"	m	class:InfomaxICA
data_	mlpack/kernel_pca/kernel_pca.h	/^  Matrix data_;$/;"	m	class:KernelPCA
data_	mlpack/optimization/optimizers.h	/^  Matrix data_;$/;"	m	class:NelderMead
data_	mlpack/optimization/optimizers.h	/^  Matrix data_;$/;"	m	class:QuasiNewton
data_	mlpack/range_search/naive_ortho_range_search.h	/^  GenMatrix<T> data_;$/;"	m	class:NaiveOrthoRangeSearch
data_	mlpack/range_search/ortho_range_search.h	/^  GenMatrix<T> data_;$/;"	m	class:OrthoRangeSearch
data_aux	mlpack/range_search/data_aux.h	/^namespace data_aux {$/;"	n
data_file_	mlpack/optimization/lbfgs/test_lbfgs.cc	/^  std::string data_file_;$/;"	m	class:LbfgsTest	file:
data_for_naive_	mlpack/allnn/allnn_test.cc	/^  Matrix *data_for_naive_;$/;"	m	class:TestAllNN	file:
data_for_naive_	mlpack/disk_allnn/disk_allnn_test.cc	/^  Matrix *data_for_naive_;$/;"	m	class:TestDiskAllNN	file:
data_for_tree_	mlpack/allkfn/allkfn_test.cc	/^  Matrix *data_for_tree_;$/;"	m	class:TestAllkFN	file:
data_for_tree_	mlpack/allknn/allknn_test.cc	/^  Matrix *data_for_tree_;$/;"	m	class:TestAllkNN	file:
data_for_tree_	mlpack/allnn/allnn_test.cc	/^  Matrix *data_for_tree_;$/;"	m	class:TestAllNN	file:
data_for_tree_	mlpack/disk_allnn/disk_allnn_test.cc	/^  Matrix *data_for_tree_;$/;"	m	class:TestDiskAllNN	file:
datamatrix_	mlpack/svm/smo.h	/^  Matrix datamatrix_; \/* alias for the data matrix *\/$/;"	m	class:SMO
datanode	include/fastlib/fx/datanode.h	/^struct datanode {$/;"	s
dataset_	mlpack/svm/smo.h	/^  const Dataset *dataset_;$/;"	m	class:SMO
debug_verbosity	include/fastlib/base/deprecated.h	59;"	d
default_value	include/fastlib/col/intmap.h	/^  Value& default_value() {$/;"	f	class:DenseIntMap
default_value	include/fastlib/col/intmap.h	/^  const Value& default_value() const {$/;"	f	class:DenseIntMap
default_value_	include/fastlib/col/intmap.h	/^  Value default_value_;$/;"	m	class:DenseIntMap
densities_	mlpack/kde/fft_kde.h	/^  Vector densities_;$/;"	m	class:FFTKde
densities_	mlpack/kde/fgt_kde.h	/^  Vector densities_;$/;"	m	class:FGTKde
densities_	mlpack/kde/naive_kde.h	/^  Vector densities_;$/;"	m	class:NaiveKde
densities_	mlpack/kde/original_ifgt.h	/^  Vector densities_;$/;"	m	class:OriginalIFGT
densities_e_	mlpack/kde/dualtree_kde.h	/^  Vector densities_e_;$/;"	m	class:DualtreeKde
densities_e_	mlpack/kde/dualtree_vkde.h	/^  Vector densities_e_;$/;"	m	class:DualtreeVKde
densities_l_	mlpack/kde/dualtree_kde.h	/^  Vector densities_l_;$/;"	m	class:DualtreeKde
densities_l_	mlpack/kde/dualtree_vkde.h	/^  Vector densities_l_;$/;"	m	class:DualtreeVKde
densities_u_	mlpack/kde/dualtree_kde.h	/^  Vector densities_u_;$/;"	m	class:DualtreeKde
densities_u_	mlpack/kde/dualtree_vkde.h	/^  Vector densities_u_;$/;"	m	class:DualtreeVKde
desired_feasibility_	mlpack/optimization/lbfgs/lbfgs.h	/^  double desired_feasibility_;$/;"	m	class:Lbfgs
desired_feasibility_error_	mlpack/mvu/mvu_objectives.h	/^  double desired_feasibility_error_;$/;"	m	class:MaxFurthestNeighbors
det_covs	mlpack/hmm/mixtureDST.h	/^  Vector det_covs;$/;"	m	class:MixtureGauss
diffcoords_	mlpack/kde/fft_kde.h	/^  Vector diffcoords_;$/;"	m	class:FFTKde
dim	include/fastlib/tree/bounds.h	/^  index_t dim() const {$/;"	f	class:DHrectBound
dim_	include/fastlib/tree/bounds.h	/^  index_t dim_;$/;"	m	class:DHrectBound
dim_	mlpack/kde/original_ifgt.h	/^  int dim_;$/;"	m	class:OriginalIFGT
dim_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  int dim_;$/;"	m	class:MultSeriesExpansionAux
dim_	mlpack/series_expansion/series_expansion_aux.h	/^  int dim_;$/;"	m	class:SeriesExpansionAux
dimension	mlpack/mog/mog_em.h	/^  index_t dimension() {$/;"	f	class:MoGEM
dimension	mlpack/mog/mog_l2e.h	/^  index_t dimension() {$/;"	f	class:MoGL2E
dimension	mlpack/optimization/optimizers.h	/^  index_t dimension() {$/;"	f	class:NelderMead
dimension	mlpack/optimization/optimizers.h	/^  index_t dimension() {$/;"	f	class:QuasiNewton
dimension_	mlpack/kernel_pca/kernel_pca.h	/^  index_t dimension_;$/;"	m	class:KernelPCA
dimension_	mlpack/mog/mog_em.h	/^  index_t dimension_;$/;"	m	class:MoGEM
dimension_	mlpack/mog/mog_l2e.h	/^  index_t dimension_;$/;"	m	class:MoGL2E
dimension_	mlpack/optimization/optimizers.h	/^  index_t dimension_;$/;"	m	class:NelderMead
dimension_	mlpack/optimization/optimizers.h	/^  index_t dimension_;$/;"	m	class:QuasiNewton
dimension_	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  index_t dimension_;$/;"	m	class:InversePowDistGradientKernel
dimension_	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  index_t dimension_;$/;"	m	class:InversePowDistKernel
discretize_dataset	mlpack/kde/fft_kde.h	/^  void discretize_dataset() {$/;"	f	class:FFTKde
discretized_	mlpack/kde/fft_kde.h	/^  Vector discretized_;$/;"	m	class:FFTKde
disk_allnn_	mlpack/disk_allnn/disk_allnn_test.cc	/^  DiskAllNN *disk_allnn_;$/;"	m	class:TestDiskAllNN	file:
displayMatrix	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::displayMatrix(const Matrix &m){$/;"	f	class:InfomaxICA
displayVector	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::displayVector(const Vector &m){$/;"	f	class:InfomaxICA
doc	include/fastlib/fx/fx.h	/^  const struct fx_module_doc *doc;$/;"	m	struct:fx_submodule_doc	typeref:struct:fx_submodule_doc::fx_module_doc
done_	include/fastlib/par/thread.h	/^  bool done_;$/;"	m	class:DoneCondition
emission	mlpack/hmm/discreteHMM.h	/^  const Matrix& emission() const { return emission_; }$/;"	f	class:DiscreteHMM
emission_	mlpack/hmm/discreteHMM.h	/^  Matrix emission_;$/;"	m	class:DiscreteHMM
empty	include/fastlib/col/arraylist.h	/^  bool empty() const {$/;"	f	class:ArrayList
end	include/fastlib/col/arraylist.h	/^  Elem *end() {$/;"	f	class:ArrayList
end	include/fastlib/col/arraylist.h	/^  const Elem *end() const {$/;"	f	class:ArrayList
end	include/fastlib/col/col_string.h	/^  char *end() {$/;"	f	class:String
end	include/fastlib/col/col_string.h	/^  const char *end() const {$/;"	f	class:String
end	include/fastlib/col/rangeset.h	/^    Boundary end;$/;"	m	struct:RangeSet::Range
end	include/fastlib/tree/spacetree.h	/^  index_t end() const {$/;"	f	class:BinarySpaceTree
end	mlpack/kde/general_spacetree.h	/^  index_t end() const {$/;"	f	class:GeneralBinarySpaceTree
end_accumulate	mlpack/hmm/discreteDST.cc	/^void DiscreteDST::end_accumulate() {$/;"	f	class:DiscreteDST
end_accumulate	mlpack/hmm/mixtureDST.h	/^  void end_accumulate() {$/;"	f	class:MixtureGauss
end_accumulate_cluster	mlpack/hmm/mixtureDST.h	/^  void end_accumulate_cluster() {$/;"	f	class:MixtureGauss
engine_	mlpack/kernel_pca/kernel_pca_test.cc	/^  KernelPCA *engine_;$/;"	m	class:KernelPCATest	file:
engine_	mlpack/regression/ridge_regression_test.cc	/^  RidgeRegression *engine_;$/;"	m	class:RidgeRegressionTest	file:
entries	include/fastlib/fx/fx.h	/^  const struct fx_entry_doc *entries;$/;"	m	struct:fx_module_doc	typeref:struct:fx_module_doc::fx_entry_doc
entries_	include/fastlib/col/heap.h	/^  ArrayList<Entry> entries_;$/;"	m	class:MinHeap
eps	mlpack/quicsvd/cosine_tree.cc	11;"	d	file:
epsilon	mlpack/fastica/fastica.h	/^  double epsilon() {$/;"	f	class:FastICA
epsilon_	mlpack/fastica/fastica.h	/^  double epsilon_;$/;"	m	class:FastICA
epsilon_	mlpack/infomax_ica/infomax_ica.h	/^  double epsilon_;$/;"	m	class:InfomaxICA
epsilon_	mlpack/infomax_ica/test_infomax_ica.h	/^  double epsilon_;$/;"	m	class:TestInfomaxICA
epsilon_	mlpack/kde/original_ifgt.h	/^  double epsilon_;$/;"	m	class:OriginalIFGT
epsilon_	mlpack/svm/smo.h	/^  double epsilon_; \/\/ for SVM_R$/;"	m	class:SMO
epsilon_	mlpack/svm/svm.h	/^    double epsilon_;$/;"	m	struct:SVM::PARAMETERS
eq_lagrange_mult_	mlpack/mvu/mvu_objectives.h	/^  Vector eq_lagrange_mult_;$/;"	m	class:MaxFurthestNeighbors
eq_lagrange_mult_	mlpack/mvu/mvu_objectives.h	/^  Vector eq_lagrange_mult_;$/;"	m	class:MaxVariance
eta_	mlpack/optimization/lbfgs/lbfgs.h	/^  double eta_;$/;"	m	class:Lbfgs
evaluateICA	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::evaluateICA(){$/;"	f	class:InfomaxICA
expM	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::expM(Matrix &m){$/;"	f	class:InfomaxICA
expect	include/fastlib/base/compiler.h	86;"	d
expect	include/fastlib/base/compiler.h	88;"	d
extractSVD	mlpack/quicsvd/quicsvd.cc	/^void QuicSVD::extractSVD(Vector* s, Matrix* U, Matrix* VT) {$/;"	f	class:QuicSVD
extract_sub_matrix_init	mlpack/kalman/kalman_helper.cc	/^void extract_sub_matrix_init(const Matrix& a_mat, const int& r_in, $/;"	f
extract_sub_vector_of_vector	mlpack/kalman/kalman_helper.cc	/^void extract_sub_vector_of_vector(const Vector& v, const int& r_in, $/;"	f
extract_sub_vector_of_vector_init	mlpack/kalman/kalman_helper.cc	/^void extract_sub_vector_of_vector_init(const Vector& v, const int& r_in, $/;"	f
eye	mlpack/infomax_ica/infomax_ica.cc	/^Matrix InfomaxICA::eye(index_t dim, double diagVal){$/;"	f	class:InfomaxICA
f77_complex	include/fastlib/base/fortran.h	/^} f77_complex;$/;"	t	typeref:struct:__anon14
f77_double	include/fastlib/base/fortran.h	/^typedef double f77_double;$/;"	t
f77_double_func	include/fastlib/base/fortran.h	/^typedef f77_ret_double (*f77_double_func)( F77_UNKNOWN_ARGS );$/;"	t
f77_doublecomplex	include/fastlib/base/fortran.h	/^} f77_doublecomplex;$/;"	t	typeref:struct:__anon15
f77_integer	include/fastlib/base/fortran.h	/^typedef int f77_integer;$/;"	t
f77_integer_func	include/fastlib/base/fortran.h	/^typedef f77_ret_integer (*f77_integer_func)( F77_UNKNOWN_ARGS );$/;"	t
f77_logical	include/fastlib/base/fortran.h	/^typedef unsigned int f77_logical;$/;"	t
f77_logical_func	include/fastlib/base/fortran.h	/^typedef f77_ret_logical (*f77_logical_func)( F77_UNKNOWN_ARGS );$/;"	t
f77_real	include/fastlib/base/fortran.h	/^typedef float f77_real;$/;"	t
f77_real_func	include/fastlib/base/fortran.h	/^typedef f77_ret_real (*f77_real_func)( F77_UNKNOWN_ARGS );$/;"	t
f77_ret_double	include/fastlib/base/fortran.h	/^typedef f77_double f77_ret_double;$/;"	t
f77_ret_integer	include/fastlib/base/fortran.h	/^typedef f77_integer f77_ret_integer;$/;"	t
f77_ret_logical	include/fastlib/base/fortran.h	/^typedef f77_logical f77_ret_logical;$/;"	t
f77_ret_real	include/fastlib/base/fortran.h	/^typedef f77_double f77_ret_real;$/;"	t
f77_ret_void	include/fastlib/base/fortran.h	/^typedef int f77_ret_void;$/;"	t
f77_str_len	include/fastlib/base/fortran.h	/^typedef long f77_str_len;$/;"	t
f_	include/fastlib/file/textfile.h	/^  FILE *f_;$/;"	m	class:TextLineReader
f_	include/fastlib/file/textfile.h	/^  FILE *f_;$/;"	m	class:TextTokenizer
f_	include/fastlib/file/textfile.h	/^  FILE *f_;$/;"	m	class:TextWriter
factor_	include/fastlib/math/kernel.h	/^  double factor_;$/;"	m	class:GaussianStarKernel
factorial	mlpack/series_expansion/mult_series_expansion_aux.h	/^  double factorial(int k) const { return factorials_[k]; }$/;"	f	class:MultSeriesExpansionAux
factorial	mlpack/series_expansion/series_expansion_aux.h	/^  double factorial(int k) const { return factorials_[k]; }$/;"	f	class:SeriesExpansionAux
factorials_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  Vector factorials_;$/;"	m	class:MultSeriesExpansionAux
factorials_	mlpack/series_expansion/series_expansion_aux.h	/^  Vector factorials_;$/;"	m	class:SeriesExpansionAux
factors	mlpack/regression/ridge_regression_impl.h	/^void RidgeRegression::factors(Matrix *factors) {$/;"	f	class:RidgeRegression
factors_	mlpack/regression/ridge_regression.h	/^  Matrix factors_;$/;"	m	class:RidgeRegression
farfield_expansion_	mlpack/kde/kde_stat.h	/^  typename TKernelAux::TFarFieldExpansion farfield_expansion_;$/;"	m	class:KdeStat
fast_delete	include/fastlib/col/fastalloc.h	/^inline void fast_delete(T *ptr) {$/;"	f
fast_new	include/fastlib/col/fastalloc.h	124;"	d
fastica_doc	mlpack/fastica/fastica.h	/^const fx_module_doc fastica_doc = {$/;"	v
fastica_entries	mlpack/fastica/fastica.h	/^const fx_entry_doc fastica_entries[] = {$/;"	v
fastica_main_doc	mlpack/fastica/fastica_main.cc	/^const fx_module_doc fastica_main_doc = {$/;"	v
fastica_main_entries	mlpack/fastica/fastica_main.cc	/^const fx_entry_doc fastica_main_entries[] = {$/;"	v
fastica_main_submodules	mlpack/fastica/fastica_main.cc	/^const fx_submodule_doc fastica_main_submodules[] = {$/;"	v
feasibility_tolerance_	mlpack/optimization/lbfgs/lbfgs.h	/^  double feasibility_tolerance_;$/;"	m	class:Lbfgs
feature	include/fastlib/data/dataset.h	/^  const DatasetFeature& feature(index_t attrib_num) const {$/;"	f	class:DatasetInfo
features	include/fastlib/data/dataset.h	/^  ArrayList<DatasetFeature>& features() {$/;"	f	class:DatasetInfo
features_	include/fastlib/data/dataset.h	/^  ArrayList<DatasetFeature> features_;$/;"	m	class:DatasetInfo
features_	include/fastlib/file/textfile.h	/^  int features_;$/;"	m	class:TextTokenizer
fftc1	mlpack/kde/fft_kde.h	/^  void fftc1(double *f, int N, int skip, int forward) {$/;"	f	class:FFTKde
fftcn	mlpack/kde/fft_kde.h	/^  void fftcn(double *f, int ndims, int *size, int forward) {$/;"	f	class:FFTKde
fftr1	mlpack/kde/fft_kde.h	/^  void fftr1(double *f, int N, int forward) {$/;"	f	class:FFTKde
fftrn	mlpack/kde/fft_kde.h	/^  void fftrn(double *f, double *fnyquist, int ndims, int *size, int forward) {$/;"	f	class:FFTKde
filename_test_	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  const char *filename_train_, *filename_test_;$/;"	m	class:TestClassSimpleNBC	file:
filename_train_	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  const char *filename_train_, *filename_test_;$/;"	m	class:TestClassSimpleNBC	file:
fine_tune	mlpack/fastica/fastica.h	/^  bool fine_tune() {$/;"	f	class:FastICA
fine_tune_	mlpack/fastica/fastica.h	/^  bool fine_tune_;$/;"	m	class:FastICA
first_child	include/fastlib/fx/datanode.h	/^  struct datanode *first_child;$/;"	m	struct:datanode	typeref:struct:datanode::datanode
first_farfield_expansion_	mlpack/kde/kde_cv_stat.h	/^  typename TKernelAux::TFarFieldExpansion first_farfield_expansion_;$/;"	m	class:KdeCVStat
first_ka_	mlpack/kde/dualtree_kde_cv.h	/^  TKernelAux first_ka_;$/;"	m	class:DualtreeKdeCV
first_mult_const_	mlpack/kde/dualtree_kde_cv.h	/^  double first_mult_const_;$/;"	m	class:DualtreeKdeCV
first_sum_e_	mlpack/kde/dualtree_kde_cv.h	/^  double first_sum_e_;$/;"	m	class:DualtreeKdeCV
first_sum_l_	mlpack/kde/dualtree_kde_cv.h	/^  double first_sum_l_;$/;"	m	class:DualtreeKdeCV
first_sum_u_	mlpack/kde/dualtree_kde_cv.h	/^  double first_sum_u_;$/;"	m	class:DualtreeKdeCV
first_used_error_	mlpack/kde/dualtree_kde_cv.h	/^  double first_used_error_;$/;"	m	class:DualtreeKdeCV
fl_msg_t	include/fastlib/base/common.h	/^} fl_msg_t;$/;"	t	typeref:enum:__anon1
float32	include/fastlib/base/basic_types.h	/^typedef float float32;$/;"	t
float64	include/fastlib/base/basic_types.h	/^typedef double float64;$/;"	t
format_	include/fastlib/base/otrav_impl.h	/^    TPrintFormat format_;$/;"	m	class:ot__private::Printer
fp_log_	mlpack/optimization/lbfgs/lbfgs.h	/^  FILE *fp_log_;$/;"	m	class:Lbfgs
freelist_	include/fastlib/col/fastalloc.h	/^  static char *freelist_;$/;"	m	class:SlabAllocator
freelist_	include/fastlib/col/fastalloc.h	/^char *SlabAllocator<item_size>::freelist_ = 0;$/;"	m	class:SlabAllocator
front	include/fastlib/col/arraylist.h	/^  Elem &front() {$/;"	f	class:ArrayList
front	include/fastlib/col/arraylist.h	/^  const Elem &front() const {$/;"	f	class:ArrayList
func_ptr_	mlpack/optimization/optimizers.h	/^  long double (*func_ptr_)(Vector&, const Matrix&);$/;"	m	class:NelderMead
func_ptr_	mlpack/optimization/optimizers.h	/^  long double (*func_ptr_)(Vector&, const Matrix&, Vector*);$/;"	m	class:QuasiNewton
furthest_distances_	mlpack/mvu/mvu_objectives.h	/^  ArrayList<double> furthest_distances_;$/;"	m	class:MaxFurthestNeighbors
furthest_neighbor_pairs_	mlpack/mvu/mvu_objectives.h	/^  ArrayList<std::pair<index_t, index_t> > furthest_neighbor_pairs_;$/;"	m	class:MaxFurthestNeighbors
fx_entry_doc	include/fastlib/fx/fx.h	/^typedef struct fx_entry_doc {$/;"	s
fx_entry_doc	include/fastlib/fx/fx.h	/^} fx_entry_doc;$/;"	t	typeref:struct:fx_entry_doc
fx_mod_t	include/fastlib/fx/fx.h	/^} fx_mod_t;$/;"	t	typeref:enum:__anon19
fx_module	include/fastlib/fx/fx.h	/^typedef struct datanode fx_module;$/;"	t	typeref:struct:datanode
fx_module_doc	include/fastlib/fx/fx.h	/^typedef struct fx_module_doc {$/;"	s
fx_module_doc	include/fastlib/fx/fx.h	/^} fx_module_doc;$/;"	t	typeref:struct:fx_module_doc
fx_submodule_doc	include/fastlib/fx/fx.h	/^typedef struct fx_submodule_doc {$/;"	s
fx_submodule_doc	include/fastlib/fx/fx.h	/^} fx_submodule_doc;$/;"	t	typeref:struct:fx_submodule_doc
fx_timer	include/fastlib/fx/fx.h	/^typedef struct stopwatch fx_timer;$/;"	t	typeref:struct:stopwatch
fx_val_t	include/fastlib/fx/fx.h	/^} fx_val_t;$/;"	t	typeref:enum:__anon20
gamma_	mlpack/optimization/lbfgs/lbfgs.h	/^  double gamma_;$/;"	m	class:Lbfgs
gauss_const_vec_	mlpack/hmm/gaussianHMM.h	/^  Vector gauss_const_vec_;$/;"	m	class:GaussianHMM
gen_gaussian_kernel	mlpack/quicsvd/kernel_matrix_generator.cc	/^void gen_gaussian_kernel(const Matrix& ref, Matrix* kernel_matrix,$/;"	f
gen_polynomial_kernel	mlpack/quicsvd/kernel_matrix_generator.cc	/^void gen_polynomial_kernel(const Matrix& ref, Matrix* kernel_matrix,$/;"	f
generate	mlpack/hmm/discreteDST.cc	/^void DiscreteDST::generate(int* v) {$/;"	f	class:DiscreteDST
generate	mlpack/hmm/mixtureDST.cc	/^void MixtureGauss::generate(Vector* v) const {$/;"	f	class:MixtureGauss
generate_discrete	mlpack/hmm/generate.cc	/^success_t generate_discrete() {$/;"	f
generate_gaussian	mlpack/hmm/generate.cc	/^success_t generate_gaussian() {$/;"	f
generate_mixture	mlpack/hmm/generate.cc	/^success_t generate_mixture() {$/;"	f
get	include/fastlib/col/intmap.h	/^  const Value& get(index_t index) const {$/;"	f	class:DenseIntMap
get	include/fastlib/data/dataset.h	/^  double get(index_t feature, index_t point) const {$/;"	f	class:Dataset
get	include/fastlib/la/matrix.h	/^  T get(index_t i) const {$/;"	f	class:GenVector
get	include/fastlib/la/matrix.h	/^  T get(index_t r, index_t c) const {$/;"	f	class:GenMatrix
get	include/fastlib/la/matrix.h	/^  double get(index_t i) const {$/;"	f	class:SmallVector
get	include/fastlib/la/matrix.h	/^  double get(index_t r, index_t c) const {$/;"	f	class:SmallMatrix
get	include/fastlib/tree/bounds.h	/^  const DRange& get(index_t i) const {$/;"	f	class:DHrectBound
get	mlpack/hmm/discreteDST.h	/^  double get(int i) { return p[i]; }$/;"	f	class:DiscreteDST
getLeft	mlpack/quicsvd/cosine_tree.h	/^  CosineNode* getLeft() {$/;"	f	class:CosineNode
getMean	mlpack/quicsvd/cosine_tree.h	/^  const Vector& getMean() const {$/;"	f	class:CosineNode
getOrigIndex	mlpack/quicsvd/cosine_tree.h	/^  index_t getOrigIndex(index_t i_col) const {$/;"	f	class:CosineNode
getPDF	mlpack/hmm/mixtureDST.cc	/^double MixtureGauss::getPDF(const Vector& v) const {$/;"	f	class:MixtureGauss
getPDF	mlpack/hmm/mixtureDST.cc	/^double MixtureGauss::getPDF(int cluster, const Vector& v) const {$/;"	f	class:MixtureGauss
getRight	mlpack/quicsvd/cosine_tree.h	/^  CosineNode* getRight() {$/;"	f	class:CosineNode
getSources	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::getSources(const Matrix &dataset, Matrix &s){$/;"	f	class:InfomaxICA
getSumL2	mlpack/quicsvd/cosine_tree.h	/^  double getSumL2() const {$/;"	f	class:CosineNode
getUnmixing	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::getUnmixing(Matrix &w){$/;"	f	class:InfomaxICA
get_center	mlpack/series_expansion/farfield_expansion.h	/^  Vector* get_center() { return &center_; }$/;"	f	class:FarFieldExpansion
get_center	mlpack/series_expansion/farfield_expansion.h	/^  const Vector* get_center() const { return &center_; }$/;"	f	class:FarFieldExpansion
get_center	mlpack/series_expansion/local_expansion.h	/^  Vector* get_center() { return &center_; }$/;"	f	class:LocalExpansion
get_center	mlpack/series_expansion/local_expansion.h	/^  const Vector* get_center() const { return &center_; }$/;"	f	class:LocalExpansion
get_center	mlpack/series_expansion/mult_farfield_expansion.h	/^  Vector *get_center() { return &center_; }$/;"	f	class:MultFarFieldExpansion
get_center	mlpack/series_expansion/mult_farfield_expansion.h	/^  const Vector *get_center() const { return &center_; }$/;"	f	class:MultFarFieldExpansion
get_center	mlpack/series_expansion/mult_local_expansion.h	/^  Vector* get_center() { return &center_; }$/;"	f	class:MultLocalExpansion
get_center	mlpack/series_expansion/mult_local_expansion.h	/^  const Vector* get_center() const { return &center_; }$/;"	f	class:MultLocalExpansion
get_coeffs	mlpack/series_expansion/farfield_expansion.h	/^  const Vector& get_coeffs() const { return coeffs_; }$/;"	f	class:FarFieldExpansion
get_coeffs	mlpack/series_expansion/local_expansion.h	/^  const Vector& get_coeffs() const { return coeffs_; }$/;"	f	class:LocalExpansion
get_coeffs	mlpack/series_expansion/mult_farfield_expansion.h	/^  const Vector& get_coeffs() const { return coeffs_; }$/;"	f	class:MultFarFieldExpansion
get_coeffs	mlpack/series_expansion/mult_local_expansion.h	/^  const Vector& get_coeffs() const { return coeffs_; }$/;"	f	class:MultLocalExpansion
get_cov	mlpack/hmm/mixtureDST.h	/^  const Matrix& get_cov(int k) const { return covs[k]; }$/;"	f	class:MixtureGauss
get_density_estimates	mlpack/kde/dualtree_kde.h	/^  void get_density_estimates(Vector *results) { $/;"	f	class:DualtreeKde
get_density_estimates	mlpack/kde/dualtree_vkde.h	/^  void get_density_estimates(Vector *results) { $/;"	f	class:DualtreeVKde
get_density_estimates	mlpack/kde/fft_kde.h	/^  void get_density_estimates(Vector *results) {$/;"	f	class:FFTKde
get_density_estimates	mlpack/kde/fgt_kde.h	/^  void get_density_estimates(Vector *results) {$/;"	f	class:FGTKde
get_density_estimates	mlpack/kde/naive_kde.h	/^  void get_density_estimates(Vector *results) { $/;"	f	class:NaiveKde
get_density_estimates	mlpack/kde/original_ifgt.h	/^  void get_density_estimates(Vector *results) {$/;"	f	class:OriginalIFGT
get_dimension	mlpack/series_expansion/mult_series_expansion_aux.h	/^  int get_dimension() const { return dim_; }$/;"	f	class:MultSeriesExpansionAux
get_dimension	mlpack/series_expansion/series_expansion_aux.h	/^  int get_dimension() const { return dim_; }$/;"	f	class:SeriesExpansionAux
get_int	include/fastlib/data/dataset.h	/^  int get_int(index_t feature, index_t point) const {$/;"	f	class:Dataset
get_inv_multiindex_factorials	mlpack/series_expansion/mult_series_expansion_aux.h	/^  const Vector& get_inv_multiindex_factorials() const {$/;"	f	class:MultSeriesExpansionAux
get_inv_multiindex_factorials	mlpack/series_expansion/series_expansion_aux.cc	/^const Vector& SeriesExpansionAux::get_inv_multiindex_factorials() const {$/;"	f	class:SeriesExpansionAux
get_lower_mapping_index	mlpack/series_expansion/mult_series_expansion_aux.h	/^  const ArrayList< int > * get_lower_mapping_index() const {$/;"	f	class:MultSeriesExpansionAux
get_lower_mapping_index	mlpack/series_expansion/series_expansion_aux.cc	/^const ArrayList < int > *SeriesExpansionAux::get_lower_mapping_index() const {$/;"	f	class:SeriesExpansionAux
get_max_order	mlpack/series_expansion/farfield_expansion.h	/^  int get_max_order() const { return sea_->get_max_order(); }$/;"	f	class:FarFieldExpansion
get_max_order	mlpack/series_expansion/local_expansion.h	/^  int get_max_order() const { return sea_->get_max_order(); }$/;"	f	class:LocalExpansion
get_max_order	mlpack/series_expansion/mult_farfield_expansion.h	/^  int get_max_order() const { return sea_->get_max_order(); }$/;"	f	class:MultFarFieldExpansion
get_max_order	mlpack/series_expansion/mult_local_expansion.h	/^  int get_max_order() const { return sea_->get_max_order(); }$/;"	f	class:MultLocalExpansion
get_max_order	mlpack/series_expansion/mult_series_expansion_aux.h	/^  int get_max_order() const {$/;"	f	class:MultSeriesExpansionAux
get_max_order	mlpack/series_expansion/series_expansion_aux.cc	/^int SeriesExpansionAux::get_max_order() const {$/;"	f	class:SeriesExpansionAux
get_max_total_num_coeffs	mlpack/series_expansion/mult_series_expansion_aux.h	/^  int get_max_total_num_coeffs() const { $/;"	f	class:MultSeriesExpansionAux
get_max_total_num_coeffs	mlpack/series_expansion/series_expansion_aux.cc	/^int SeriesExpansionAux::get_max_total_num_coeffs() const {$/;"	f	class:SeriesExpansionAux
get_mean	mlpack/hmm/mixtureDST.h	/^  const Vector& get_mean(int k) const { return means[k]; }$/;"	f	class:MixtureGauss
get_multiindex	mlpack/series_expansion/mult_series_expansion_aux.h	/^  const ArrayList< int > & get_multiindex(int pos) const {$/;"	f	class:MultSeriesExpansionAux
get_multiindex	mlpack/series_expansion/series_expansion_aux.cc	/^const ArrayList < int > &SeriesExpansionAux::get_multiindex(int pos) const {$/;"	f	class:SeriesExpansionAux
get_multiindex_mapping	mlpack/series_expansion/mult_series_expansion_aux.h	/^  const ArrayList< int > * get_multiindex_mapping() const {$/;"	f	class:MultSeriesExpansionAux
get_multiindex_mapping	mlpack/series_expansion/series_expansion_aux.cc	/^const ArrayList < int > *SeriesExpansionAux::get_multiindex_mapping() const {$/;"	f	class:SeriesExpansionAux
get_n_choose_k	mlpack/series_expansion/mult_series_expansion_aux.h	/^  double get_n_choose_k(int n, int k) const {$/;"	f	class:MultSeriesExpansionAux
get_n_choose_k	mlpack/series_expansion/series_expansion_aux.cc	/^double SeriesExpansionAux::get_n_choose_k(int n, int k) const {$/;"	f	class:SeriesExpansionAux
get_n_multichoose_k_by_pos	mlpack/series_expansion/mult_series_expansion_aux.h	/^  double get_n_multichoose_k_by_pos(int n, int k) const {$/;"	f	class:MultSeriesExpansionAux
get_n_multichoose_k_by_pos	mlpack/series_expansion/series_expansion_aux.cc	/^double SeriesExpansionAux::get_n_multichoose_k_by_pos(int n, int k) const {$/;"	f	class:SeriesExpansionAux
get_neg_inv_multiindex_factorials	mlpack/series_expansion/mult_series_expansion_aux.h	/^  const Vector& get_neg_inv_multiindex_factorials() const {$/;"	f	class:MultSeriesExpansionAux
get_neg_inv_multiindex_factorials	mlpack/series_expansion/series_expansion_aux.cc	/^const Vector& SeriesExpansionAux::get_neg_inv_multiindex_factorials() const {$/;"	f	class:SeriesExpansionAux
get_order	mlpack/series_expansion/farfield_expansion.h	/^  int get_order() const { return order_; }$/;"	f	class:FarFieldExpansion
get_order	mlpack/series_expansion/local_expansion.h	/^  int get_order() const { return order_; }$/;"	f	class:LocalExpansion
get_order	mlpack/series_expansion/mult_farfield_expansion.h	/^  int get_order() const { return order_; }$/;"	f	class:MultFarFieldExpansion
get_order	mlpack/series_expansion/mult_local_expansion.h	/^  int get_order() const { return order_; }$/;"	f	class:MultLocalExpansion
get_prior	mlpack/hmm/mixtureDST.h	/^  const Vector& get_prior() const { return prior; }$/;"	f	class:MixtureGauss
get_total_num_coeffs	mlpack/series_expansion/mult_series_expansion_aux.h	/^  int get_total_num_coeffs(int order) const { $/;"	f	class:MultSeriesExpansionAux
get_total_num_coeffs	mlpack/series_expansion/series_expansion_aux.cc	/^int SeriesExpansionAux::get_total_num_coeffs(int order) const {$/;"	f	class:SeriesExpansionAux
get_upper_mapping_index	mlpack/series_expansion/mult_series_expansion_aux.h	/^  const ArrayList< int > * get_upper_mapping_index() const {$/;"	f	class:MultSeriesExpansionAux
get_upper_mapping_index	mlpack/series_expansion/series_expansion_aux.cc	/^const ArrayList < int > *SeriesExpansionAux::get_upper_mapping_index() const {$/;"	f	class:SeriesExpansionAux
get_weight_sum	mlpack/kde/kde_cv_stat.h	/^  double get_weight_sum() {$/;"	f	class:KdeCVStat
get_weight_sum	mlpack/kde/kde_cv_stat.h	/^  double get_weight_sum() {$/;"	f	class:VKdeCVStat
get_weight_sum	mlpack/kde/kde_stat.h	/^  double get_weight_sum() {$/;"	f	class:KdeStat
get_weight_sum	mlpack/kde/kde_stat.h	/^  double get_weight_sum() {$/;"	f	class:VKdeStat
get_weight_sum	mlpack/series_expansion/farfield_expansion.h	/^  double get_weight_sum() const { return coeffs_[0]; }$/;"	f	class:FarFieldExpansion
get_weight_sum	mlpack/series_expansion/mult_farfield_expansion.h	/^  double get_weight_sum() const { return coeffs_[0]; }$/;"	f	class:MultFarFieldExpansion
global	include/fastlib/par/thread.h	/^  static Mutex global;$/;"	m	class:Mutex
grad_	mlpack/svm/smo.h	/^  Vector grad_; \/* gradient value *\/$/;"	m	class:SMO
grad_bar_	mlpack/svm/smo.h	/^  Vector grad_bar_; \/* gradient value when treat free variables as 0 *\/$/;"	m	class:SMO
grad_tolerance_	mlpack/mvu/mvu_objectives.h	/^  double grad_tolerance_;$/;"	m	class:MaxFurthestNeighbors
gradient_	mlpack/optimization/lbfgs/lbfgs.h	/^  Matrix gradient_;$/;"	m	class:Lbfgs
gridbinvolume_	mlpack/kde/fft_kde.h	/^  double gridbinvolume_;$/;"	m	class:FFTKde
gridsizes_	mlpack/kde/fft_kde.h	/^  Vector gridsizes_;$/;"	m	class:FFTKde
hasLeft	mlpack/quicsvd/cosine_tree.h	/^  bool hasLeft() const {$/;"	f	class:CosineNode
hasRight	mlpack/quicsvd/cosine_tree.h	/^  bool hasRight() const {$/;"	f	class:CosineNode
has_line_	include/fastlib/file/textfile.h	/^  bool has_line_;$/;"	m	class:TextLineReader
head_	include/fastlib/col/queue.h	/^  Node *head_;$/;"	m	class:Queue
hi	include/fastlib/math/math_lib.h	/^  double hi;$/;"	m	struct:DRange
hmm_generate_main_doc	mlpack/hmm/generate.cc	/^const fx_module_doc hmm_generate_main_doc = {$/;"	v
hmm_generate_main_entries	mlpack/hmm/generate.cc	/^const fx_entry_doc hmm_generate_main_entries[] = {$/;"	v
hmm_generate_main_submodules	mlpack/hmm/generate.cc	/^const fx_submodule_doc hmm_generate_main_submodules[] = {$/;"	v
hmm_loglik_main_doc	mlpack/hmm/loglik.cc	/^const fx_module_doc hmm_loglik_main_doc = {$/;"	v
hmm_loglik_main_entries	mlpack/hmm/loglik.cc	/^const fx_entry_doc hmm_loglik_main_entries[] = {$/;"	v
hmm_loglik_main_submodules	mlpack/hmm/loglik.cc	/^const fx_submodule_doc hmm_loglik_main_submodules[] = {$/;"	v
hmm_support	mlpack/hmm/support.cc	/^namespace hmm_support {$/;"	n	file:
hmm_support	mlpack/hmm/support.h	/^namespace hmm_support {$/;"	n
hmm_train_main_doc	mlpack/hmm/train.cc	/^const fx_module_doc hmm_train_main_doc = {$/;"	v
hmm_train_main_entries	mlpack/hmm/train.cc	/^const fx_entry_doc hmm_train_main_entries[] = {$/;"	v
hmm_train_main_submodules	mlpack/hmm/train.cc	/^const fx_submodule_doc hmm_train_main_submodules[] = {$/;"	v
hmm_viterbi_main_doc	mlpack/hmm/viterbi.cc	/^const fx_module_doc hmm_viterbi_main_doc = {$/;"	v
hmm_viterbi_main_entries	mlpack/hmm/viterbi.cc	/^const fx_entry_doc hmm_viterbi_main_entries[] = {$/;"	v
hmm_viterbi_main_submodules	mlpack/hmm/viterbi.cc	/^const fx_submodule_doc hmm_viterbi_main_submodules[] = {$/;"	v
i_cache_	mlpack/svm/smo.h	/^  index_t i_cache_, j_cache_; \/* indices for the most recently cached kernel value *\/$/;"	m	class:SMO
ica_	mlpack/infomax_ica/test_infomax_ica.h	/^  InfomaxICA *ica_;$/;"	m	class:TestInfomaxICA
ident_extra_	include/fastlib/file/textfile.h	/^  const char *ident_extra_;$/;"	m	class:TextTokenizer
im	include/fastlib/base/fortran.h	/^  f77_double im;$/;"	m	struct:__anon15
im	include/fastlib/base/fortran.h	/^  f77_real im;$/;"	m	struct:__anon14
imag	mlpack/kde/fft_kde.h	/^    double imag;$/;"	m	struct:FFTKde::complex
indent_	include/fastlib/base/otrav_impl.h	/^    int indent_;$/;"	m	class:ot::StandardFormat
indent_	include/fastlib/base/otrav_impl.h	/^    int indent_;$/;"	m	class:ot::XMLFormat
index_	include/fastlib/base/otrav_impl.h	/^    index_t index_;$/;"	m	class:ot__private::Printer
index_bfgs_	mlpack/optimization/lbfgs/lbfgs.h	/^  index_t index_bfgs_;$/;"	m	class:Lbfgs
index_during_clustering_	mlpack/kde/original_ifgt.h	/^  ArrayList<int> index_during_clustering_;$/;"	m	class:OriginalIFGT
index_t	include/fastlib/base/common.h	/^typedef int64 index_t;          \/* For larger than RAM data sets. *\/$/;"	t
infeasibility1_	mlpack/mvu/mvu_objectives.h	/^  double infeasibility1_;$/;"	m	class:MaxFurthestNeighbors
infeasibility_tolerance_	mlpack/mvu/mvu_objectives.h	/^  double infeasibility_tolerance_;$/;"	m	class:MaxFurthestNeighbors
info	include/fastlib/data/dataset.h	/^  DatasetInfo& info() {$/;"	f	class:Dataset
info	include/fastlib/data/dataset.h	/^  const DatasetInfo& info() const {$/;"	f	class:Dataset
info_	include/fastlib/data/dataset.h	/^  DatasetInfo info_;$/;"	m	class:Dataset
infomax_ica_doc	mlpack/infomax_ica/infomax_ica.h	/^const fx_module_doc infomax_ica_doc = {$/;"	v
infomax_ica_entries	mlpack/infomax_ica/infomax_ica.h	/^const fx_entry_doc infomax_ica_entries[] = {$/;"	v
infomax_ica_main_doc	mlpack/infomax_ica/main.cc	/^const fx_module_doc infomax_ica_main_doc = {$/;"	v
infomax_ica_main_doc	mlpack/infomax_ica/test_main.cc	/^const fx_module_doc infomax_ica_main_doc = {$/;"	v
infomax_ica_main_entries	mlpack/infomax_ica/main.cc	/^const fx_entry_doc infomax_ica_main_entries[] = {$/;"	v
infomax_ica_main_entries	mlpack/infomax_ica/test_main.cc	/^const fx_entry_doc infomax_ica_main_entries[] = {$/;"	v
infomax_ica_main_submodules	mlpack/infomax_ica/main.cc	/^const fx_submodule_doc infomax_ica_main_submodules[] = {$/;"	v
infomax_ica_main_submodules	mlpack/infomax_ica/test_main.cc	/^const fx_submodule_doc infomax_ica_main_submodules[] = {$/;"	v
initialized_	mlpack/allnn/allnn.h	/^  bool initialized_;$/;"	m	class:AllNN
initialized_	mlpack/disk_allnn/disk_allnn.h	/^  bool initialized_;$/;"	m	class:DiskAllNN
int16	include/fastlib/base/basic_types.h	/^typedef signed short int16;$/;"	t
int32	include/fastlib/base/basic_types.h	/^typedef signed int int32;$/;"	t
int64	include/fastlib/base/basic_types.h	/^typedef signed long int64;$/;"	t
int8	include/fastlib/base/basic_types.h	/^typedef signed char int8;$/;"	t
interpolate	include/fastlib/math/math_lib.h	/^  double interpolate(double factor) const {$/;"	f	struct:DRange
inv_bandwidth_sq	include/fastlib/math/kernel.h	/^  double inv_bandwidth_sq() const {$/;"	f	class:EpanKernel
inv_bandwidth_sq_	include/fastlib/math/kernel.h	/^  double inv_bandwidth_sq_;$/;"	m	class:EpanKernel
inv_covs	mlpack/hmm/mixtureDST.h	/^  ArrayList<Matrix> inv_covs;$/;"	m	class:MixtureGauss
inv_multiindex_factorials_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  Vector inv_multiindex_factorials_;$/;"	m	class:MultSeriesExpansionAux
inv_multiindex_factorials_	mlpack/series_expansion/series_expansion_aux.h	/^  Vector inv_multiindex_factorials_;$/;"	m	class:SeriesExpansionAux
invertVals	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::invertVals(Matrix &m){$/;"	f	class:InfomaxICA
isLeft_	mlpack/quicsvd/cosine_tree.h	/^  bool isLeft_;$/;"	m	class:CosineNode
isZero	mlpack/quicsvd/cosine_tree.cc	/^bool isZero(double d) {$/;"	f
is_empty	include/fastlib/col/col_string.h	/^  bool is_empty() const$/;"	f	class:String
is_empty	include/fastlib/col/heap.h	/^  bool is_empty() const {$/;"	f	class:MinHeap
is_empty	include/fastlib/col/queue.h	/^  bool is_empty() const {$/;"	f	class:Queue
is_leaf	include/fastlib/tree/spacetree.h	/^  bool is_leaf() const {$/;"	f	class:BinarySpaceTree
is_leaf	mlpack/kde/general_spacetree.h	/^  bool is_leaf() const {$/;"	f	class:GeneralBinarySpaceTree
isident_begin_	include/fastlib/file/textfile.h	/^  bool isident_begin_(int c) const {$/;"	f	class:TextTokenizer
isident_rest_	include/fastlib/file/textfile.h	/^  bool isident_rest_(int c) const {$/;"	f	class:TextTokenizer
j_cache_	mlpack/svm/smo.h	/^  index_t i_cache_, j_cache_; \/* indices for the most recently cached kernel value *\/$/;"	m	class:SMO
k_fnyquist_	mlpack/kde/fft_kde.h	/^  Vector k_fnyquist_;$/;"	m	class:FFTKde
k_only_	mlpack/allknn/allknn.h	/^   bool k_only_;$/;"	m	class:AllkNN
ka_	mlpack/kde/dualtree_kde.h	/^  TKernelAux ka_;$/;"	m	class:DualtreeKde
ka_	mlpack/series_expansion/farfield_expansion.h	/^  const TKernelAux *ka_;$/;"	m	class:FarFieldExpansion
ka_	mlpack/series_expansion/local_expansion.h	/^  const TKernelAux *ka_;$/;"	m	class:LocalExpansion
ka_	mlpack/series_expansion/mult_farfield_expansion.h	/^  const TKernelAux *ka_;$/;"	m	class:MultFarFieldExpansion
ka_	mlpack/series_expansion/mult_local_expansion.h	/^  const TKernelAux *ka_;$/;"	m	class:MultLocalExpansion
kde_doc	mlpack/kde/dualtree_kde.h	/^const fx_module_doc kde_doc = {$/;"	v
kde_entries	mlpack/kde/dualtree_kde.h	/^const fx_entry_doc kde_entries[] = {$/;"	v
kde_main_doc	mlpack/kde/dualtree_kde.h	/^const fx_module_doc kde_main_doc = {$/;"	v
kde_main_entries	mlpack/kde/dualtree_kde.h	/^const fx_entry_doc kde_main_entries[] = {$/;"	v
kde_main_submodules	mlpack/kde/dualtree_kde.h	/^const fx_submodule_doc kde_main_submodules[] = {$/;"	v
kernel	mlpack/svm/smo.h	/^  Kernel& kernel() {$/;"	f	class:SMO
kernel_	mlpack/kde/fft_kde.h	/^  GaussianKernel kernel_;$/;"	m	class:FFTKde
kernel_	mlpack/kde/fgt_kde.h	/^  GaussianKernel kernel_;$/;"	m	class:FGTKde
kernel_	mlpack/kernel_pca/kernel_pca_test.cc	/^  KernelPCA::GaussianKernel kernel_;$/;"	m	class:KernelPCATest	file:
kernel_	mlpack/series_expansion/farfield_expansion.h	/^  const typename TKernelAux::TKernel *kernel_;$/;"	m	class:FarFieldExpansion
kernel_	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  TKernel kernel_;$/;"	m	class:InversePowDistGradientKernelAux
kernel_	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  TKernel kernel_;$/;"	m	class:InversePowDistKernelAux
kernel_	mlpack/series_expansion/kernel_aux.h	/^  TKernel kernel_;$/;"	m	class:EpanKernelAux
kernel_	mlpack/series_expansion/kernel_aux.h	/^  TKernel kernel_;$/;"	m	class:GaussianKernelAux
kernel_	mlpack/series_expansion/kernel_aux.h	/^  TKernel kernel_;$/;"	m	class:GaussianKernelMultAux
kernel_	mlpack/series_expansion/local_expansion.h	/^  const typename TKernelAux::TKernel *kernel_;$/;"	m	class:LocalExpansion
kernel_	mlpack/series_expansion/mult_farfield_expansion.h	/^  const typename TKernelAux::TKernel *kernel_;$/;"	m	class:MultFarFieldExpansion
kernel_	mlpack/series_expansion/mult_local_expansion.h	/^  const typename TKernelAux::TKernel *kernel_;$/;"	m	class:MultLocalExpansion
kernel_	mlpack/svm/smo.h	/^  Kernel kernel_;$/;"	m	class:SMO
kernel_	mlpack/svm/svm.h	/^    TKernel kernel_;$/;"	m	struct:SVM::PARAMETERS
kernel_matrix_	mlpack/kernel_pca/kernel_pca.h	/^  SparseMatrix kernel_matrix_;  $/;"	m	class:KernelPCA
kernel_matrix_generator_doc	mlpack/quicsvd/kernel_matrix_generator.cc	/^const fx_module_doc kernel_matrix_generator_doc = {$/;"	v
kernel_matrix_generator_entries	mlpack/quicsvd/kernel_matrix_generator.cc	/^const fx_entry_doc kernel_matrix_generator_entries[] = {$/;"	v
kernel_matrix_generator_submodules	mlpack/quicsvd/kernel_matrix_generator.cc	/^const fx_submodule_doc kernel_matrix_generator_submodules[] = {$/;"	v
kernelname_	mlpack/svm/svm.h	/^    String kernelname_;$/;"	m	struct:SVM::PARAMETERS
kernels_	mlpack/kde/dualtree_vkde.h	/^  ArrayList<TKernel> kernels_;$/;"	m	class:DualtreeVKde
kernels_	mlpack/kde/naive_kde.h	/^  ArrayList<TKernel> kernels_;$/;"	m	class:NaiveKde
kerneltypeid_	mlpack/svm/svm.h	/^    int kerneltypeid_;$/;"	m	struct:SVM::PARAMETERS
kernelweights_	mlpack/kde/fft_kde.h	/^  Vector kernelweights_;$/;"	m	class:FFTKde
kernelweights_dims_	mlpack/kde/fft_kde.h	/^  ArrayList<int>  kernelweights_dims_;$/;"	m	class:FFTKde
key	include/fastlib/col/heap.h	/^    TKey key;$/;"	m	struct:MinHeap::Entry
key	include/fastlib/fx/datanode.h	/^  char *key;$/;"	m	struct:datanode
key	include/fastlib/fx/fx.h	/^  const char *key;$/;"	m	struct:fx_entry_doc
key	include/fastlib/fx/fx.h	/^  const char *key;$/;"	m	struct:fx_submodule_doc
kfns_	mlpack/allkfn/allkfn.h	/^  index_t kfns_; $/;"	m	class:AllkFN
kfold_module_	include/fastlib/data/crossvalidation.h	/^  datanode *kfold_module_;$/;"	m	class:GeneralCrossValidator
kfold_module_	include/fastlib/data/crossvalidation.h	/^  datanode *kfold_module_;$/;"	m	class:SimpleCrossValidator
kmeans	mlpack/hmm/support.cc	/^  bool kmeans(Matrix const &data, int num_clusters, $/;"	f	namespace:hmm_support
kmeans	mlpack/hmm/support.cc	/^  bool kmeans(const ArrayList<Matrix>& data, int num_clusters, $/;"	f	namespace:hmm_support
knns_	mlpack/allknn/allknn.h	/^  index_t knns_; $/;"	m	class:AllkNN
knns_	mlpack/kernel_pca/kernel_pca.h	/^  index_t knns_;$/;"	m	class:KernelPCA
knns_	mlpack/mvu/mvu_objectives.h	/^  index_t knns_;$/;"	m	class:MaxFurthestNeighbors
knns_	mlpack/mvu/mvu_objectives.h	/^  index_t knns_;$/;"	m	class:MaxVariance
kpara_	mlpack/svm/svm.h	/^  ArrayList<double> kpara_; \/\/ kernel parameters$/;"	m	class:SVMLinearKernel
kpara_	mlpack/svm/svm.h	/^  ArrayList<double> kpara_; \/\/ kernel parameters$/;"	m	class:SVMRBFKernel
la	include/fastlib/la/blas.h	/^namespace la {$/;"	n
la	include/fastlib/la/clapack.h	/^namespace la {$/;"	n
la	include/fastlib/la/la.h	/^namespace la {$/;"	n
la	include/fastlib/la/uselapack.h	/^namespace la {$/;"	n
lambda_	mlpack/infomax_ica/infomax_ica.h	/^  double lambda_;$/;"	m	class:InfomaxICA
lambda_	mlpack/infomax_ica/test_infomax_ica.h	/^  double lambda_;$/;"	m	class:TestInfomaxICA
lambda_	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  double lambda_;$/;"	m	class:InversePowDistGradientKernel
lambda_	mlpack/series_expansion/inverse_pow_dist_kernel.h	/^  double lambda_;$/;"	m	class:InversePowDistKernel
last_child	include/fastlib/fx/datanode.h	/^  struct datanode *last_child;$/;"	m	struct:datanode	typeref:struct:datanode::datanode
lbfgs_doc	mlpack/optimization/lbfgs/lbfgs.h	/^const fx_module_doc lbfgs_doc = {$/;"	v
lbfgs_entries	mlpack/optimization/lbfgs/lbfgs.h	/^const fx_entry_doc lbfgs_entries[] = {$/;"	v
leaf_size_	mlpack/allkfn/allkfn.h	/^  index_t leaf_size_;$/;"	m	class:AllkFN
leaf_size_	mlpack/allknn/allknn.h	/^  index_t leaf_size_;$/;"	m	class:AllkNN
leaf_size_	mlpack/allnn/allnn.h	/^  index_t leaf_size_;$/;"	m	class:AllNN
leaf_size_	mlpack/disk_allnn/disk_allnn.h	/^  index_t leaf_size_;$/;"	m	class:DiskAllNN
leaf_size_	mlpack/mvu/mvu_objectives.h	/^  index_t leaf_size_;$/;"	m	class:MaxFurthestNeighbors
leaf_size_	mlpack/mvu/mvu_objectives.h	/^  index_t leaf_size_;$/;"	m	class:MaxVariance
learner_fx_name_	include/fastlib/data/crossvalidation.h	/^  const char *learner_fx_name_;$/;"	m	class:GeneralCrossValidator
learner_typeid_	include/fastlib/data/crossvalidation.h	/^  int learner_typeid_;$/;"	m	class:GeneralCrossValidator
learner_typeid_	mlpack/svm/smo.h	/^  int learner_typeid_;$/;"	m	class:SMO
learner_typeid_	mlpack/svm/svm.h	/^  int learner_typeid_;$/;"	m	class:SVM
leave_one_out_	mlpack/kde/dualtree_kde.h	/^  bool leave_one_out_;$/;"	m	class:DualtreeKde
leave_one_out_	mlpack/kde/dualtree_vkde.h	/^  bool leave_one_out_;$/;"	m	class:DualtreeVKde
leaves_	mlpack/quicsvd/quicsvd.h	/^  CosineNodeQueue leaves_;$/;"	m	class:QuicSVD
left	include/fastlib/tree/spacetree.h	/^  BinarySpaceTree *left() const {$/;"	f	class:BinarySpaceTree
left	mlpack/kde/general_spacetree.h	/^  GeneralBinarySpaceTree *left() const {$/;"	f	class:GeneralBinarySpaceTree
left_	include/fastlib/tree/spacetree.h	/^  BinarySpaceTree *left_;$/;"	m	class:BinarySpaceTree
left_	mlpack/kde/general_spacetree.h	/^  GeneralBinarySpaceTree *left_;$/;"	m	class:GeneralBinarySpaceTree
left_	mlpack/quicsvd/cosine_tree.h	/^  CosineNode *parent_, *left_, *right_;$/;"	m	class:CosineNode
left_usage	mlpack/disk_allnn/disk_allnn.h	/^    ptrdiff_t left_usage() {$/;"	f	class:DiskAllNN::QueryStat
left_usage_	mlpack/disk_allnn/disk_allnn.h	/^    ptrdiff_t left_usage_;$/;"	m	class:DiskAllNN::QueryStat
length	include/fastlib/col/arraylist.h	/^  index_t length() const {$/;"	f	class:ArrayList
length	include/fastlib/col/col_string.h	/^  index_t length() const$/;"	f	class:String
length	include/fastlib/la/matrix.h	/^  index_t length() const {$/;"	f	class:GenVector
length	include/fastlib/la/matrix.h	/^  index_t length() const {$/;"	f	class:SmallVector
length_	include/fastlib/la/matrix.h	/^  index_t length_;$/;"	m	class:GenVector
likely	include/fastlib/base/compiler.h	109;"	d
linalg__private	mlpack/fastica/lin_alg.h	/^namespace linalg__private {$/;"	n
line	include/fastlib/file/textfile.h	/^  int line() const {$/;"	f	class:TextTokenizer
line_	include/fastlib/file/textfile.h	/^  String line_;$/;"	m	class:TextLineReader
line_	include/fastlib/file/textfile.h	/^  int line_;$/;"	m	class:TextTokenizer
line_num	include/fastlib/file/textfile.h	/^  int line_num() const {$/;"	f	class:TextLineReader
line_num_	include/fastlib/file/textfile.h	/^  int line_num_;$/;"	m	class:TextLineReader
list_covariance_mat	mlpack/hmm/gaussianHMM.h	/^  const ArrayList<Matrix>& list_covariance_mat() const { return list_covariance_mat_; }$/;"	f	class:GaussianHMM
list_covariance_mat_	mlpack/hmm/gaussianHMM.h	/^  ArrayList<Matrix> list_covariance_mat_;$/;"	m	class:GaussianHMM
list_inverse_cov_mat_	mlpack/hmm/gaussianHMM.h	/^  ArrayList<Matrix> list_inverse_cov_mat_;$/;"	m	class:GaussianHMM
list_mean_vec	mlpack/hmm/gaussianHMM.h	/^  const ArrayList<Vector>& list_mean_vec() const { return list_mean_vec_; }$/;"	f	class:GaussianHMM
list_mean_vec_	mlpack/hmm/gaussianHMM.h	/^  ArrayList<Vector> list_mean_vec_;$/;"	m	class:GaussianHMM
list_mixture_gauss	mlpack/hmm/mixgaussHMM.h	/^  const ArrayList<MixtureGauss>& list_mixture_gauss() const { return list_mixture_gauss_; }$/;"	f	class:MixtureofGaussianHMM
list_mixture_gauss_	mlpack/hmm/mixgaussHMM.h	/^  ArrayList<MixtureGauss> list_mixture_gauss_;$/;"	m	class:MixtureofGaussianHMM
list_total_num_coeffs_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  ArrayList<int> list_total_num_coeffs_;$/;"	m	class:MultSeriesExpansionAux
list_total_num_coeffs_	mlpack/series_expansion/series_expansion_aux.h	/^  ArrayList<int> list_total_num_coeffs_;$/;"	m	class:SeriesExpansionAux
lo	include/fastlib/math/math_lib.h	/^  double lo;$/;"	m	struct:DRange
load_matrix_list	mlpack/hmm/support.cc	/^  success_t load_matrix_list(const char* filename, ArrayList<Matrix> *matlst) {$/;"	f	namespace:hmm_support
load_vector_list	mlpack/hmm/support.cc	/^  success_t load_vector_list(const char* filename, ArrayList<Vector> *veclst) {$/;"	f	namespace:hmm_support
local_expansion_	mlpack/kde/kde_stat.h	/^  typename TKernelAux::TLocalExpansion local_expansion_;$/;"	m	class:KdeStat
logfile	mlpack/quicsvd/cosine_tree.h	/^  FILE * logfile;$/;"	m	class:CosineNodeTest
logfile	mlpack/quicsvd/quicsvd.h	/^  FILE * logfile;$/;"	m	class:QuicSVDTest
loglik_discrete	mlpack/hmm/loglik.cc	/^success_t loglik_discrete() {$/;"	f
loglik_gaussian	mlpack/hmm/loglik.cc	/^success_t loglik_gaussian() {$/;"	f
loglik_mixture	mlpack/hmm/loglik.cc	/^success_t loglik_mixture() {$/;"	f
lower_mapping_index_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  ArrayList< ArrayList<int> > lower_mapping_index_;$/;"	m	class:MultSeriesExpansionAux
lower_mapping_index_	mlpack/series_expansion/series_expansion_aux.h	/^  ArrayList< ArrayList<int> > lower_mapping_index_;$/;"	m	class:SeriesExpansionAux
m_	mlpack/kde/fft_kde.h	/^  int m_;$/;"	m	class:FFTKde
main	mlpack/allkfn/allkfn_test.cc	/^int main() {$/;"	f
main	mlpack/allkfn/main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/allknn/allknn_test.cc	/^int main() {$/;"	f
main	mlpack/allknn/main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/allnn/allnn_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/allnn/main.cc	/^int main (int argc, char *argv[]) {$/;"	f
main	mlpack/disk_allnn/disk_allnn_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/disk_allnn/main.cc	/^int main (int argc, char *argv[]) {$/;"	f
main	mlpack/fastica/fastica_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/hmm/generate.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/hmm/loglik.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/hmm/train.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/hmm/viterbi.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/infomax_ica/main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/infomax_ica/test_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/kalman/kalman_main.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/kde/dualtree_kde_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/kde/fft_kde_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/kde/fgt_kde_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/kde/kde_bandwidth_cv_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/kde/original_ifgt_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/kernel_pca/kernel_pca_test.cc	/^int main() {$/;"	f
main	mlpack/mog/mog_em_main.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/mog/mog_l2e_main.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/mvu/main.cc	/^int main(int argc, char *argv[]){$/;"	f
main	mlpack/naive_bayes/nbc_main.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/naive_bayes/test_simple_nbc_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/optimization/lbfgs/test_lbfgs.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/quicsvd/kernel_matrix_generator.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/quicsvd/kernel_matrix_generator.h	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/quicsvd/quicsvd_main.cc	/^int main(int argc, char* argv[]) {$/;"	f
main	mlpack/quicsvd/quicsvd_test.cc	/^int main() {$/;"	f
main	mlpack/range_search/ortho_range_search_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/regression/dataset_preprocess.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/regression/ridge_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/regression/ridge_regression_test.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/series_expansion/main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main	mlpack/svm/svm_main.cc	/^int main(int argc, char *argv[]) {$/;"	f
main_doc	mlpack/mvu/main.cc	/^const fx_module_doc main_doc = {$/;"	v
main_entries	mlpack/mvu/main.cc	/^const fx_entry_doc main_entries[] = {$/;"	v
main_submodules	mlpack/mvu/main.cc	/^const fx_submodule_doc main_submodules[] = {$/;"	v
mass_l_	mlpack/kde/kde_stat.h	/^  double mass_l_;$/;"	m	class:KdeStat
mass_l_	mlpack/kde/kde_stat.h	/^  double mass_l_;$/;"	m	class:VKdeStat
mass_u_	mlpack/kde/kde_stat.h	/^  double mass_u_;$/;"	m	class:KdeStat
mass_u_	mlpack/kde/kde_stat.h	/^  double mass_u_;$/;"	m	class:VKdeStat
mat2arrlst	mlpack/hmm/support.cc	/^  void mat2arrlst(Matrix& a, ArrayList<Vector> * seqs) {$/;"	f	namespace:hmm_support
mat2arrlstmat	mlpack/hmm/support.cc	/^  void mat2arrlstmat(int N, Matrix& a, ArrayList<Matrix> * seqs) {$/;"	f	namespace:hmm_support
math	include/fastlib/math/discrete.h	/^namespace math {$/;"	n
math	include/fastlib/math/geometry.h	/^namespace math {$/;"	n
math	include/fastlib/math/math_lib.h	/^namespace math {$/;"	n
math	include/fastlib/math/statistics.h	/^namespace math {$/;"	n
math__private	include/fastlib/math/math_lib_impl.h	/^namespace math__private {$/;"	n
matrix	include/fastlib/data/dataset.h	/^  Matrix& matrix() {$/;"	f	class:Dataset
matrix	include/fastlib/data/dataset.h	/^  const Matrix& matrix() const {$/;"	f	class:Dataset
matrix_	include/fastlib/data/dataset.h	/^  Matrix matrix_;$/;"	m	class:Dataset
matrix_concatenate_col_init	mlpack/kalman/kalman_helper.cc	/^void matrix_concatenate_col_init(const Matrix& a_mat, const Matrix& b_mat, $/;"	f
matrix_concatenate_row_init	mlpack/kalman/kalman_helper.cc	/^void matrix_concatenate_row_init(const Matrix& a_mat, const Matrix& b_mat, Matrix* x_mat) {$/;"	f
max_bandwidth_kernel_	mlpack/kde/kde_cv_stat.h	/^  TKernel max_bandwidth_kernel_;$/;"	m	class:VKdeCVStat
max_bandwidth_kernel_	mlpack/kde/kde_stat.h	/^  TKernel max_bandwidth_kernel_;$/;"	m	class:VKdeStat
max_distance_so_far	mlpack/allknn/allknn.h	/^    double max_distance_so_far() {$/;"	f	class:AllkNN::QueryStat
max_distance_so_far	mlpack/allnn/allnn.h	/^    double max_distance_so_far() {$/;"	f	class:AllNN::QueryStat
max_distance_so_far	mlpack/disk_allnn/disk_allnn.h	/^    double max_distance_so_far() {$/;"	f	class:DiskAllNN::QueryStat
max_distance_so_far_	mlpack/allknn/allknn.h	/^    double max_distance_so_far_;$/;"	m	class:AllkNN::QueryStat
max_distance_so_far_	mlpack/allnn/allnn.h	/^    double max_distance_so_far_;$/;"	m	class:AllNN::QueryStat
max_distance_so_far_	mlpack/disk_allnn/disk_allnn.h	/^    double max_distance_so_far_;$/;"	m	class:DiskAllNN::QueryStat
max_element_index	mlpack/mog/math_functions.h	/^int max_element_index(ArrayList<double>& array) {$/;"	f
max_element_index	mlpack/mog/math_functions.h	/^int max_element_index(ArrayList<float>& array){$/;"	f
max_element_index	mlpack/mog/math_functions.h	/^int max_element_index(float *array, int length) {$/;"	f
max_element_index	mlpack/naive_bayes/math_functions.h	/^int max_element_index(ArrayList<double>& array) {$/;"	f
max_element_index	mlpack/naive_bayes/math_functions.h	/^int max_element_index(ArrayList<float>& array){$/;"	f
max_element_index	mlpack/naive_bayes/math_functions.h	/^int max_element_index(float *array, int length) {$/;"	f
max_fine_tune	mlpack/fastica/fastica.h	/^  index_t max_fine_tune() {$/;"	f	class:FastICA
max_fine_tune_	mlpack/fastica/fastica.h	/^  index_t max_fine_tune_;$/;"	m	class:FastICA
max_iterations_	mlpack/optimization/lbfgs/lbfgs.h	/^  index_t max_iterations_;$/;"	m	class:Lbfgs
max_num_iterations	mlpack/fastica/fastica.h	/^  index_t max_num_iterations() {$/;"	f	class:FastICA
max_num_iterations_	mlpack/fastica/fastica.h	/^  index_t max_num_iterations_;$/;"	m	class:FastICA
max_order_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  int max_order_;$/;"	m	class:MultSeriesExpansionAux
max_order_	mlpack/series_expansion/series_expansion_aux.h	/^  int max_order_;$/;"	m	class:SeriesExpansionAux
max_radius_cluster_	mlpack/kde/original_ifgt.h	/^  double max_radius_cluster_;$/;"	m	class:OriginalIFGT
max_rand_i	mlpack/fastica/lin_alg.h	45;"	d
maxcoords_	mlpack/kde/fft_kde.h	/^  Vector maxcoords_;$/;"	m	class:FFTKde
mean_	mlpack/quicsvd/cosine_tree.h	/^  Vector mean_;$/;"	m	class:CosineNode
means	mlpack/hmm/mixtureDST.h	/^  ArrayList<Vector> means;$/;"	m	class:MixtureGauss
means_	mlpack/naive_bayes/simple_nbc.h	/^  Matrix means_, variances_;$/;"	m	class:SimpleNaiveBayesClassifier
mem	include/fastlib/base/ccmem.h	/^namespace mem {$/;"	n
mem	include/fastlib/base/deprecated.h	/^namespace mem {$/;"	n
mem__private	include/fastlib/base/ccmem.h	/^namespace mem__private {$/;"	n
mem_bfgs_	mlpack/optimization/lbfgs/lbfgs.h	/^  index_t mem_bfgs_;$/;"	m	class:Lbfgs
meta	include/fastlib/fx/datanode.h	/^  const char *meta;$/;"	m	struct:datanode
meta	include/fastlib/fx/fx.h	/^  const char *meta;$/;"	m	struct:fx_entry_doc
micros	include/fastlib/fx/stopwatch.h	/^  tsc_t micros;$/;"	m	struct:timestamp
mid	include/fastlib/math/math_lib.h	/^  double mid() const {$/;"	f	struct:DRange
min_bandwidth_kernel_	mlpack/kde/kde_cv_stat.h	/^  TKernel min_bandwidth_kernel_;$/;"	m	class:VKdeCVStat
min_bandwidth_kernel_	mlpack/kde/kde_stat.h	/^  TKernel min_bandwidth_kernel_;$/;"	m	class:VKdeStat
min_beta_	mlpack/optimization/lbfgs/lbfgs.h	/^  double min_beta_;$/;"	m	class:Lbfgs
min_distance_so_far	mlpack/allkfn/allkfn.h	/^    double min_distance_so_far() {$/;"	f	class:AllkFN::QueryStat
min_distance_so_far_	mlpack/allkfn/allkfn.h	/^    double min_distance_so_far_;$/;"	m	class:AllkFN::QueryStat
min_element	mlpack/mog/math_functions.h	/^void min_element(Matrix& element, index_t *indices) {$/;"	f
min_element	mlpack/mog/mog_l2e.cc	/^void MoGL2E::min_element( Matrix& element, index_t *indices ){$/;"	f	class:MoGL2E
min_element	mlpack/naive_bayes/math_functions.h	/^void min_element(Matrix& element, index_t *indices) {$/;"	f
mincoords_	mlpack/kde/fft_kde.h	/^  Vector mincoords_;$/;"	m	class:FFTKde
minindices_	mlpack/kde/fft_kde.h	/^  ArrayList<int> minindices_;$/;"	m	class:FFTKde
mod_type	include/fastlib/fx/datanode.h	/^  int mod_type;$/;"	m	struct:datanode
mod_type	include/fastlib/fx/fx.h	/^  fx_mod_t mod_type;$/;"	m	struct:fx_entry_doc
mode_	mlpack/allknn/allknn.h	/^   std::string mode_;$/;"	m	class:AllkNN
models_	mlpack/svm/svm.h	/^  ArrayList<SVM_MODELS> models_;$/;"	m	class:SVM
module_	mlpack/allkfn/allkfn.h	/^  struct datanode* module_;$/;"	m	class:AllkFN	typeref:struct:AllkFN::datanode
module_	mlpack/allknn/allknn.h	/^  struct datanode* module_;$/;"	m	class:AllkNN	typeref:struct:AllkNN::datanode
module_	mlpack/allnn/allnn.h	/^  struct datanode* module_;$/;"	m	class:AllNN	typeref:struct:AllNN::datanode
module_	mlpack/allnn/allnn_test.cc	/^  fx_module *module_;$/;"	m	class:TestAllNN	file:
module_	mlpack/disk_allnn/disk_allnn.h	/^  struct datanode* module_;$/;"	m	class:DiskAllNN	typeref:struct:DiskAllNN::datanode
module_	mlpack/disk_allnn/disk_allnn_test.cc	/^  fx_module *module_;$/;"	m	class:TestDiskAllNN	file:
module_	mlpack/fastica/fastica.h	/^  struct datanode* module_;$/;"	m	class:FastICA	typeref:struct:FastICA::datanode
module_	mlpack/kde/dualtree_kde.h	/^  struct datanode *module_;$/;"	m	class:DualtreeKde	typeref:struct:DualtreeKde::datanode
module_	mlpack/kde/dualtree_kde_cv.h	/^  struct datanode *module_;$/;"	m	class:DualtreeKdeCV	typeref:struct:DualtreeKdeCV::datanode
module_	mlpack/kde/dualtree_vkde.h	/^  struct datanode *module_;$/;"	m	class:DualtreeVKde	typeref:struct:DualtreeVKde::datanode
module_	mlpack/kde/fft_kde.h	/^  struct datanode *module_;$/;"	m	class:FFTKde	typeref:struct:FFTKde::datanode
module_	mlpack/kde/fgt_kde.h	/^  struct datanode *module_;$/;"	m	class:FGTKde	typeref:struct:FGTKde::datanode
module_	mlpack/kde/naive_kde.h	/^  struct datanode *module_;$/;"	m	class:NaiveKde	typeref:struct:NaiveKde::datanode
module_	mlpack/kde/original_ifgt.h	/^  struct datanode *module_;$/;"	m	class:OriginalIFGT	typeref:struct:OriginalIFGT::datanode
module_	mlpack/mvu/mvu_objectives.h	/^  datanode *module_;$/;"	m	class:MaxFurthestNeighbors
module_	mlpack/mvu/mvu_objectives.h	/^  datanode *module_;$/;"	m	class:MaxVariance
module_	mlpack/optimization/lbfgs/lbfgs.h	/^  struct datanode* module_;$/;"	m	class:Lbfgs	typeref:struct:Lbfgs::datanode
module_	mlpack/regression/ridge_regression.h	/^  fx_module *module_;$/;"	m	class:RidgeRegression
module_	mlpack/regression/ridge_regression_test.cc	/^  fx_module *module_;$/;"	m	class:RidgeRegressionTest	file:
mog_em_doc	mlpack/mog/mog_em.h	/^const fx_module_doc mog_em_doc = {$/;"	v
mog_em_entries	mlpack/mog/mog_em.h	/^const fx_entry_doc mog_em_entries[] = {$/;"	v
mog_em_main_doc	mlpack/mog/mog_em_main.cc	/^const fx_module_doc mog_em_main_doc = {$/;"	v
mog_em_main_entries	mlpack/mog/mog_em_main.cc	/^const fx_entry_doc mog_em_main_entries[] = {$/;"	v
mog_em_main_submodules	mlpack/mog/mog_em_main.cc	/^const fx_submodule_doc mog_em_main_submodules[] = {$/;"	v
mog_l2e_doc	mlpack/mog/mog_l2e.h	/^const fx_module_doc mog_l2e_doc = {$/;"	v
mog_l2e_entries	mlpack/mog/mog_l2e.h	/^const fx_entry_doc mog_l2e_entries[] = {$/;"	v
mog_l2e_main_doc	mlpack/mog/mog_l2e_main.cc	/^const fx_module_doc mog_l2e_main_doc = {$/;"	v
mog_l2e_main_entries	mlpack/mog/mog_l2e_main.cc	/^const fx_entry_doc mog_l2e_main_entries[] = {$/;"	v
mog_l2e_main_submodules	mlpack/mog/mog_l2e_main.cc	/^const fx_submodule_doc mog_l2e_main_submodules[] = {$/;"	v
msea_	mlpack/kde/fgt_kde.h	/^  MultSeriesExpansionAux msea_;$/;"	m	class:FGTKde
msq_err_all_folds_	include/fastlib/data/crossvalidation.h	/^  double msq_err_all_folds_;$/;"	m	class:GeneralCrossValidator
mu	mlpack/fastica/fastica.h	/^  double mu() {$/;"	f	class:FastICA
mu	mlpack/mog/mog_em.h	/^  ArrayList<Vector>& mu() {$/;"	f	class:MoGEM
mu	mlpack/mog/mog_em.h	/^  Vector& mu(index_t i) {$/;"	f	class:MoGEM
mu	mlpack/mog/mog_l2e.h	/^  ArrayList<Vector>& mu() {$/;"	f	class:MoGL2E
mu	mlpack/mog/mog_l2e.h	/^  Vector& mu(index_t i) {$/;"	f	class:MoGL2E
mu_	mlpack/fastica/fastica.h	/^  double mu_;$/;"	m	class:FastICA
mu_	mlpack/mog/mog_em.h	/^  ArrayList<Vector> mu_;$/;"	m	class:MoGEM
mu_	mlpack/mog/mog_l2e.h	/^  ArrayList<Vector> mu_;$/;"	m	class:MoGL2E
mult_const_	mlpack/kde/dualtree_kde.h	/^  double mult_const_;$/;"	m	class:DualtreeKde
mult_const_	mlpack/kde/dualtree_vkde.h	/^  double mult_const_;$/;"	m	class:DualtreeVKde
multiindex_combination_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  Matrix multiindex_combination_;$/;"	m	class:MultSeriesExpansionAux
multiindex_combination_	mlpack/series_expansion/series_expansion_aux.h	/^  Matrix multiindex_combination_;$/;"	m	class:SeriesExpansionAux
multiindex_mapping_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  ArrayList< ArrayList<int> > multiindex_mapping_;$/;"	m	class:MultSeriesExpansionAux
multiindex_mapping_	mlpack/series_expansion/series_expansion_aux.h	/^  ArrayList< ArrayList<int> > multiindex_mapping_;$/;"	m	class:SeriesExpansionAux
mutex_	include/fastlib/par/grain.h	/^  Mutex mutex_;$/;"	m	class:GrainQueue
mutex_	include/fastlib/par/thread.h	/^  Mutex mutex_;$/;"	m	class:DoneCondition
mutex_	include/fastlib/par/thread.h	/^  Mutex mutex_;$/;"	m	class:ValueCondition
mutex_	include/fastlib/par/thread.h	/^  mutable pthread_mutex_t mutex_;$/;"	m	class:Mutex
mvu_doc	mlpack/mvu/mvu_objectives.h	/^const fx_module_doc mvu_doc = {$/;"	v
mvu_entries	mlpack/mvu/mvu_objectives.h	/^const fx_entry_doc mvu_entries[] = {$/;"	v
n	mlpack/fastica/fastica.h	/^  index_t n;$/;"	m	class:FastICA
n_active_	mlpack/svm/smo.h	/^  index_t n_active_; \/* number of samples in the active set *\/$/;"	m	class:SMO
n_alpha_	mlpack/svm/smo.h	/^  index_t n_alpha_; \/* number of variables to be optimized *\/$/;"	m	class:SMO
n_choose_k_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  Matrix n_choose_k_;$/;"	m	class:MultSeriesExpansionAux
n_choose_k_	mlpack/series_expansion/series_expansion_aux.h	/^  Matrix n_choose_k_;$/;"	m	class:SeriesExpansionAux
n_classes_	include/fastlib/data/crossvalidation.h	/^  int n_classes_;$/;"	m	class:SimpleCrossValidator
n_clusters	mlpack/hmm/mixtureDST.h	/^  int n_clusters() const { return means.size(); }$/;"	f	class:MixtureGauss
n_cols	include/fastlib/la/matrix.h	/^  index_t n_cols() const {$/;"	f	class:GenMatrix
n_cols	include/fastlib/la/matrix.h	/^  index_t n_cols() const {$/;"	f	class:SmallMatrix
n_cols	mlpack/quicsvd/cosine_tree.h	/^  index_t n_cols() const {$/;"	f	class:CosineNode
n_cols	mlpack/quicsvd/quicsvd.h	/^  index_t n_cols() {$/;"	f	class:QuicSVD
n_cols_	include/fastlib/la/matrix.h	/^  index_t n_cols_;$/;"	m	class:GenMatrix
n_correct	include/fastlib/data/crossvalidation.h	/^  index_t n_correct() {$/;"	f	class:SimpleCrossValidator
n_correct_	include/fastlib/data/crossvalidation.h	/^  index_t n_correct_;$/;"	m	class:SimpleCrossValidator
n_data_	mlpack/svm/smo.h	/^  index_t n_data_; \/* number of data samples *\/$/;"	m	class:SMO
n_data_	mlpack/svm/svm.h	/^  index_t n_data_; $/;"	m	class:SVM
n_elements	include/fastlib/la/matrix.h	/^  size_t n_elements() const {$/;"	f	class:GenMatrix
n_elements	include/fastlib/la/matrix.h	/^  size_t n_elements() const {$/;"	f	class:SmallMatrix
n_features	include/fastlib/data/dataset.h	/^  index_t n_features() const {$/;"	f	class:Dataset
n_features	include/fastlib/data/dataset.h	/^  index_t n_features() const {$/;"	f	class:DatasetInfo
n_features_	mlpack/svm/smo.h	/^  index_t n_features_; \/* # of features == # of row - 1, exclude the last row (for labels) *\/$/;"	m	class:SMO
n_folds_	include/fastlib/data/crossvalidation.h	/^  int n_folds_;$/;"	m	class:GeneralCrossValidator
n_folds_	include/fastlib/data/crossvalidation.h	/^  int n_folds_;$/;"	m	class:SimpleCrossValidator
n_incorrect	include/fastlib/data/crossvalidation.h	/^  index_t n_incorrect() {$/;"	f	class:SimpleCrossValidator
n_points	include/fastlib/data/dataset.h	/^  index_t n_points() const {$/;"	f	class:Dataset
n_pruned_	mlpack/kde/dualtree_kde.h	/^  Vector n_pruned_;$/;"	m	class:DualtreeKde
n_pruned_	mlpack/kde/dualtree_kde_cv.h	/^  double n_pruned_;$/;"	m	class:DualtreeKdeCV
n_pruned_	mlpack/kde/dualtree_vkde.h	/^  Vector n_pruned_;$/;"	m	class:DualtreeVKde
n_pruned_	mlpack/kde/kde_stat.h	/^  double n_pruned_;$/;"	m	class:KdeStat
n_pruned_	mlpack/kde/kde_stat.h	/^  double n_pruned_;$/;"	m	class:VKdeStat
n_rows	include/fastlib/la/matrix.h	/^  index_t n_rows() const {$/;"	f	class:GenMatrix
n_rows	include/fastlib/la/matrix.h	/^  index_t n_rows() const {$/;"	f	class:SmallMatrix
n_rows_	include/fastlib/la/matrix.h	/^  index_t n_rows_;$/;"	m	class:GenMatrix
n_sv_	mlpack/svm/smo.h	/^  index_t n_sv_; \/* number of support vectors *\/$/;"	m	class:SMO
n_values	include/fastlib/data/dataset.h	/^  index_t n_values() const {$/;"	f	class:DatasetFeature
naive_	mlpack/allkfn/allkfn_test.cc	/^  AllkFN *naive_;$/;"	m	class:TestAllkFN	file:
naive_	mlpack/allknn/allknn_test.cc	/^  AllkNN *naive_;$/;"	m	class:TestAllkNN	file:
naive_	mlpack/allnn/allnn_test.cc	/^  AllNN *naive_;$/;"	m	class:TestAllNN	file:
naive_	mlpack/disk_allnn/disk_allnn_test.cc	/^  DiskAllNN *naive_;$/;"	m	class:TestDiskAllNN	file:
name	include/fastlib/data/dataset.h	/^  const String& name() const {$/;"	f	class:DatasetFeature
name	include/fastlib/data/dataset.h	/^  const char *name() const {$/;"	f	class:DatasetInfo
name_	include/fastlib/base/otrav_impl.h	/^    const char *name_;$/;"	m	class:ot__private::Printer
name_	include/fastlib/data/dataset.h	/^  String name_;$/;"	m	class:DatasetFeature
name_	include/fastlib/data/dataset.h	/^  String name_;$/;"	m	class:DatasetInfo
nbc_module_	mlpack/naive_bayes/simple_nbc.h	/^  datanode *nbc_module_;$/;"	m	class:SimpleNaiveBayesClassifier
nbc_test_	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  SimpleNaiveBayesClassifier *nbc_test_;$/;"	m	class:TestClassSimpleNBC	file:
nearest_distances_	mlpack/mvu/mvu_objectives.h	/^  ArrayList<double> nearest_distances_;$/;"	m	class:MaxFurthestNeighbors
nearest_distances_	mlpack/mvu/mvu_objectives.h	/^  ArrayList<double> nearest_distances_;$/;"	m	class:MaxVariance
nearest_neighbor_pairs_	mlpack/mvu/mvu_objectives.h	/^  ArrayList<std::pair<index_t, index_t> > nearest_neighbor_pairs_;$/;"	m	class:MaxFurthestNeighbors
nearest_neighbor_pairs_	mlpack/mvu/mvu_objectives.h	/^  ArrayList<std::pair<index_t, index_t> > nearest_neighbor_pairs_;$/;"	m	class:MaxVariance
neg_inv_bandwidth_2sq_	include/fastlib/math/kernel.h	/^  double neg_inv_bandwidth_2sq_;$/;"	m	class:GaussianKernel
neg_inv_bandwidth_2sq_	include/fastlib/math/kernel.h	/^  double neg_inv_bandwidth_2sq_;$/;"	m	class:GaussianStarKernel
neg_inv_multiindex_factorials_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  Vector neg_inv_multiindex_factorials_;$/;"	m	class:MultSeriesExpansionAux
neg_inv_multiindex_factorials_	mlpack/series_expansion/series_expansion_aux.h	/^  Vector neg_inv_multiindex_factorials_;$/;"	m	class:SeriesExpansionAux
neighbor_distances_	mlpack/allkfn/allkfn.h	/^  Vector neighbor_distances_;$/;"	m	class:AllkFN
neighbor_distances_	mlpack/allknn/allknn.h	/^  Vector neighbor_distances_;$/;"	m	class:AllkNN
neighbor_distances_	mlpack/allnn/allnn.h	/^  Vector neighbor_distances_;$/;"	m	class:AllNN
neighbor_distances_	mlpack/disk_allnn/disk_allnn.h	/^  Vector neighbor_distances_;$/;"	m	class:DiskAllNN
neighbor_indices_	mlpack/allkfn/allkfn.h	/^  ArrayList<index_t> neighbor_indices_;$/;"	m	class:AllkFN
neighbor_indices_	mlpack/allknn/allknn.h	/^  ArrayList<index_t> neighbor_indices_;$/;"	m	class:AllkNN
neighbor_indices_	mlpack/allnn/allnn.h	/^  GenVector<index_t> neighbor_indices_;$/;"	m	class:AllNN
neighbor_indices_	mlpack/disk_allnn/disk_allnn.h	/^  GenVector<index_t> neighbor_indices_;$/;"	m	class:DiskAllNN
new_dimension_	mlpack/mvu/mvu_objectives.h	/^  index_t new_dimension_;$/;"	m	class:MaxFurthestNeighbors
new_dimension_	mlpack/mvu/mvu_objectives.h	/^  index_t new_dimension_;$/;"	m	class:MaxVariance
new_dimension_	mlpack/optimization/lbfgs/lbfgs.h	/^  index_t new_dimension_;$/;"	m	class:Lbfgs
new_from_old_	mlpack/range_search/ortho_range_search.h	/^  ArrayList<index_t> new_from_old_;$/;"	m	class:OrthoRangeSearch
new_from_old_buffer_	mlpack/range_search/ortho_range_search.h	/^  ArrayList<index_t> *new_from_old_buffer_;$/;"	m	class:OrthoRangeSearch
next	include/fastlib/col/queue.h	/^    Node *next;$/;"	m	struct:Queue::Node
next	include/fastlib/fx/datanode.h	/^  struct datanode *next;$/;"	m	struct:datanode	typeref:struct:datanode::datanode
next_	include/fastlib/file/textfile.h	/^  String next_;$/;"	m	class:TextTokenizer
next_type_	include/fastlib/file/textfile.h	/^  TokenType next_type_;$/;"	m	class:TextTokenizer
nonlinearity	mlpack/fastica/fastica.h	/^  int nonlinearity() {$/;"	f	class:FastICA
nonlinearity_	mlpack/fastica/fastica.h	/^  int nonlinearity_;$/;"	m	class:FastICA
norm	mlpack/quicsvd/quicsvd_main.cc	/^double norm(const Matrix& A) {$/;"	f
norm_const_	mlpack/kde/naive_kde.h	/^  double norm_const_;$/;"	m	class:NaiveKde
norm_grad_tolerance_	mlpack/optimization/lbfgs/lbfgs.h	/^  double norm_grad_tolerance_;$/;"	m	class:Lbfgs
norms_	mlpack/quicsvd/cosine_tree.h	/^  ArrayList<double> norms_;$/;"	m	class:CosineNode
num_classes_	mlpack/svm/svm.h	/^  int num_classes_;$/;"	m	class:SVM
num_cluster_desired_	mlpack/kde/original_ifgt.h	/^  int num_cluster_desired_;$/;"	m	class:OriginalIFGT
num_data_points_	include/fastlib/data/crossvalidation.h	/^  index_t num_data_points_;$/;"	m	class:GeneralCrossValidator
num_farfield_prunes_	mlpack/kde/dualtree_kde.h	/^  int num_farfield_prunes_;$/;"	m	class:DualtreeKde
num_farfield_prunes_	mlpack/kde/dualtree_kde_cv.h	/^  int num_farfield_prunes_;$/;"	m	class:DualtreeKdeCV
num_farfield_to_local_prunes_	mlpack/kde/dualtree_kde.h	/^  int num_farfield_to_local_prunes_;$/;"	m	class:DualtreeKde
num_farfield_to_local_prunes_	mlpack/kde/dualtree_kde_cv.h	/^  int num_farfield_to_local_prunes_;$/;"	m	class:DualtreeKdeCV
num_features_	mlpack/svm/svm.h	/^  int num_features_;$/;"	m	class:SVM
num_finite_difference_prunes_	mlpack/kde/dualtree_kde.h	/^  int num_finite_difference_prunes_;$/;"	m	class:DualtreeKde
num_finite_difference_prunes_	mlpack/kde/dualtree_kde_cv.h	/^  int num_finite_difference_prunes_;$/;"	m	class:DualtreeKdeCV
num_finite_difference_prunes_	mlpack/kde/dualtree_vkde.h	/^  int num_finite_difference_prunes_;$/;"	m	class:DualtreeVKde
num_initial_samples_per_query_	mlpack/kde/dualtree_kde.h	/^  static const int num_initial_samples_per_query_ = 25;$/;"	m	class:DualtreeKde
num_initial_samples_per_query_	mlpack/kde/dualtree_kde_cv.h	/^  static const int num_initial_samples_per_query_ = 25;$/;"	m	class:DualtreeKdeCV
num_initial_samples_per_query_	mlpack/kde/dualtree_vkde.h	/^  static const int num_initial_samples_per_query_ = 25;$/;"	m	class:DualtreeVKde
num_local_prunes_	mlpack/kde/dualtree_kde.h	/^  int num_local_prunes_;$/;"	m	class:DualtreeKde
num_local_prunes_	mlpack/kde/dualtree_kde_cv.h	/^  int num_local_prunes_;$/;"	m	class:DualtreeKdeCV
num_models_	mlpack/svm/svm.h	/^  int num_models_;$/;"	m	class:SVM
num_monte_carlo_prunes_	mlpack/kde/dualtree_kde.h	/^  int num_monte_carlo_prunes_;$/;"	m	class:DualtreeKde
num_monte_carlo_prunes_	mlpack/kde/dualtree_kde_cv.h	/^  int num_monte_carlo_prunes_;$/;"	m	class:DualtreeKdeCV
num_monte_carlo_prunes_	mlpack/kde/dualtree_vkde.h	/^  int num_monte_carlo_prunes_;$/;"	m	class:DualtreeVKde
num_of_IC	mlpack/fastica/fastica.h	/^  index_t num_of_IC() {$/;"	f	class:FastICA
num_of_IC_	mlpack/fastica/fastica.h	/^  index_t num_of_IC_;$/;"	m	class:FastICA
num_of_furthest_pairs_	mlpack/mvu/mvu_objectives.h	/^  index_t num_of_furthest_pairs_;$/;"	m	class:MaxFurthestNeighbors
num_of_iterations_	mlpack/optimization/lbfgs/lbfgs.h	/^  index_t num_of_iterations_;$/;"	m	class:Lbfgs
num_of_nearest_pairs_	mlpack/mvu/mvu_objectives.h	/^  index_t num_of_nearest_pairs_;$/;"	m	class:MaxFurthestNeighbors
num_of_nearest_pairs_	mlpack/mvu/mvu_objectives.h	/^  index_t num_of_nearest_pairs_;$/;"	m	class:MaxVariance
num_of_points	mlpack/mvu/mvu_objectives_impl.h	/^index_t  MaxVariance::num_of_points() {$/;"	f	class:MaxVariance
num_of_points	mlpack/mvu/mvu_objectives_impl.h	/^index_t MaxFurthestNeighbors::num_of_points() {$/;"	f	class:MaxFurthestNeighbors
num_of_points_	mlpack/mvu/mvu_objectives.h	/^  index_t num_of_points_;$/;"	m	class:MaxFurthestNeighbors
num_of_points_	mlpack/mvu/mvu_objectives.h	/^  index_t num_of_points_;$/;"	m	class:MaxVariance
num_of_points_	mlpack/optimization/lbfgs/lbfgs.h	/^  index_t num_of_points_;$/;"	m	class:Lbfgs
num_reference_points_	mlpack/kde/original_ifgt.h	/^  int num_reference_points_;$/;"	m	class:OriginalIFGT
num_reference_points_in_cluster_	mlpack/kde/original_ifgt.h	/^  ArrayList<int> num_reference_points_in_cluster_;$/;"	m	class:OriginalIFGT
number_of_classes_	mlpack/naive_bayes/simple_nbc.h	/^  index_t number_of_classes_;$/;"	m	class:SimpleNaiveBayesClassifier
number_of_classes_	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  index_t number_of_classes_;$/;"	m	class:TestClassSimpleNBC	file:
number_of_gaussians	mlpack/mog/mog_em.h	/^  index_t number_of_gaussians() {$/;"	f	class:MoGEM
number_of_gaussians	mlpack/mog/mog_l2e.h	/^  index_t number_of_gaussians() {$/;"	f	class:MoGL2E
number_of_gaussians_	mlpack/mog/mog_em.h	/^  index_t number_of_gaussians_;$/;"	m	class:MoGEM
number_of_gaussians_	mlpack/mog/mog_l2e.h	/^  index_t number_of_gaussians_;$/;"	m	class:MoGL2E
number_of_prunes_	mlpack/allkfn/allkfn.h	/^  index_t number_of_prunes_;$/;"	m	class:AllkFN
number_of_prunes_	mlpack/allknn/allknn.h	/^  index_t number_of_prunes_;$/;"	m	class:AllkNN
number_of_prunes_	mlpack/allnn/allnn.h	/^  index_t number_of_prunes_;$/;"	m	class:AllNN
number_of_prunes_	mlpack/disk_allnn/disk_allnn.h	/^  index_t number_of_prunes_;$/;"	m	class:DiskAllNN
numgridpts_	mlpack/kde/fft_kde.h	/^  int numgridpts_;$/;"	m	class:FFTKde
nyquistnum_	mlpack/kde/fft_kde.h	/^  int nyquistnum_;$/;"	m	class:FFTKde
objective_factor_	mlpack/optimization/lbfgs/lbfgs.h	/^  double objective_factor_;$/;"	m	class:Lbfgs
offset_	include/fastlib/base/otrav_impl.h	/^    ptrdiff_t offset_;$/;"	m	class:ot__private::Copier
offset_	include/fastlib/base/otrav_impl.h	/^    ptrdiff_t offset_;$/;"	m	class:ot__private::Relocator
offsetof	include/fastlib/base/compiler.h	312;"	d
old_from_new_	mlpack/range_search/ortho_range_search.h	/^  ArrayList<index_t> old_from_new_;$/;"	m	class:OrthoRangeSearch
old_from_new_buffer_	mlpack/range_search/ortho_range_search.h	/^  ArrayList<index_t> *old_from_new_buffer_;$/;"	m	class:OrthoRangeSearch
old_from_new_queries_	mlpack/allkfn/allkfn.h	/^  ArrayList<index_t> old_from_new_queries_;$/;"	m	class:AllkFN
old_from_new_queries_	mlpack/allknn/allknn.h	/^  ArrayList<index_t> old_from_new_queries_;$/;"	m	class:AllkNN
old_from_new_queries_	mlpack/allnn/allnn.h	/^  GenVector<index_t> old_from_new_queries_;$/;"	m	class:AllNN
old_from_new_queries_	mlpack/disk_allnn/disk_allnn.h	/^  GenVector<index_t> old_from_new_queries_;$/;"	m	class:DiskAllNN
old_from_new_queries_	mlpack/kde/dualtree_kde.h	/^  ArrayList<index_t> old_from_new_queries_;$/;"	m	class:DualtreeKde
old_from_new_queries_	mlpack/kde/dualtree_vkde.h	/^  ArrayList<index_t> old_from_new_queries_;$/;"	m	class:DualtreeVKde
old_from_new_references_	mlpack/allkfn/allkfn.h	/^  ArrayList<index_t> old_from_new_references_;$/;"	m	class:AllkFN
old_from_new_references_	mlpack/allknn/allknn.h	/^  ArrayList<index_t> old_from_new_references_;$/;"	m	class:AllkNN
old_from_new_references_	mlpack/allnn/allnn.h	/^  GenVector<index_t> old_from_new_references_;$/;"	m	class:AllNN
old_from_new_references_	mlpack/disk_allnn/disk_allnn.h	/^  GenVector<index_t> old_from_new_references_;$/;"	m	class:DiskAllNN
old_from_new_references_	mlpack/kde/dualtree_kde.h	/^  ArrayList<index_t> old_from_new_references_;$/;"	m	class:DualtreeKde
old_from_new_references_	mlpack/kde/dualtree_kde_cv.h	/^  ArrayList<index_t> old_from_new_references_;$/;"	m	class:DualtreeKdeCV
old_from_new_references_	mlpack/kde/dualtree_vkde.h	/^  ArrayList<index_t> old_from_new_references_;$/;"	m	class:DualtreeVKde
omega	mlpack/mog/mog_em.h	/^  Vector& omega() {$/;"	f	class:MoGEM
omega	mlpack/mog/mog_em.h	/^  double omega(index_t i) {$/;"	f	class:MoGEM
omega	mlpack/mog/mog_l2e.h	/^  Vector& omega() {$/;"	f	class:MoGL2E
omega	mlpack/mog/mog_l2e.h	/^  double omega(index_t i) {$/;"	f	class:MoGL2E
omega_	mlpack/mog/mog_em.h	/^  Vector omega_;$/;"	m	class:MoGEM
omega_	mlpack/mog/mog_l2e.h	/^  Vector omega_;$/;"	m	class:MoGL2E
operator &=	include/fastlib/math/math_lib.h	/^  const DRange& operator &= (const DRange& other) {$/;"	f	struct:DRange
operator &=	include/fastlib/math/math_lib.h	/^  const DRange& operator &= (double d) {$/;"	f	struct:DRange
operator ()	mlpack/kernel_pca/kernel_pca.h	/^    double operator()(double distance) {$/;"	f	class:KernelPCA::GaussianKernel
operator ()	mlpack/quicsvd/cosine_tree.h	/^  bool operator ()(CosineNode* a, CosineNode* b) {$/;"	f	class:CompareCosineNode
operator *	include/fastlib/math/math_lib.h	/^  friend DRange operator * (const DRange& r, double d) {$/;"	f	struct:DRange
operator *	include/fastlib/math/math_lib.h	/^  friend DRange operator * (double d, const DRange& r) {$/;"	f	struct:DRange
operator *=	include/fastlib/math/math_lib.h	/^  const DRange& operator *= (double d) {$/;"	f	struct:DRange
operator +	include/fastlib/math/math_lib.h	/^  friend DRange operator + (const DRange& a, const DRange& b) {$/;"	f	struct:DRange
operator +	include/fastlib/math/math_lib.h	/^  friend DRange operator + (const DRange& a, double b) {$/;"	f	struct:DRange
operator +=	include/fastlib/col/col_string.h	/^  const String& operator += (char c) {$/;"	f	class:String
operator +=	include/fastlib/col/col_string.h	/^  const String& operator += (const String& o) {$/;"	f	class:String
operator +=	include/fastlib/col/col_string.h	/^  const String& operator += (const char *s) {$/;"	f	class:String
operator +=	include/fastlib/math/math_lib.h	/^  const DRange& operator += (const DRange& other) {$/;"	f	struct:DRange
operator +=	include/fastlib/math/math_lib.h	/^  const DRange& operator += (double d) {$/;"	f	struct:DRange
operator -	include/fastlib/math/math_lib.h	/^  friend DRange operator - (const DRange& a, const DRange& b) {$/;"	f	struct:DRange
operator -	include/fastlib/math/math_lib.h	/^  friend DRange operator - (const DRange& a, double b) {$/;"	f	struct:DRange
operator -	include/fastlib/math/math_lib.h	/^  friend DRange operator - (const DRange& r) {$/;"	f	struct:DRange
operator -=	include/fastlib/math/math_lib.h	/^  const DRange& operator -= (const DRange& other) {$/;"	f	struct:DRange
operator -=	include/fastlib/math/math_lib.h	/^  const DRange& operator -= (double d) {$/;"	f	struct:DRange
operator <	include/fastlib/col/col_string.h	/^  friend bool operator < (char a, const String& b) {$/;"	f	class:String
operator <	include/fastlib/col/col_string.h	/^  friend bool operator < (const String& a, char b) {$/;"	f	class:String
operator <	include/fastlib/col/col_string.h	/^  friend bool operator < (const String& a, const String& b) {$/;"	f	class:String
operator <	include/fastlib/col/col_string.h	/^  friend bool operator < (const String& a, const char *b) {$/;"	f	class:String
operator <	include/fastlib/col/col_string.h	/^  friend bool operator < (const char *a, const String& b) {$/;"	f	class:String
operator <	include/fastlib/math/math_lib.h	/^  friend bool operator < (const DRange& a, const DRange& b) {$/;"	f	struct:DRange
operator <	include/fastlib/math/math_lib.h	/^  friend bool operator < (const DRange& a, double b) {$/;"	f	struct:DRange
operator <	include/fastlib/math/math_lib.h	/^  friend bool operator < (double a, const DRange& b) {$/;"	f	struct:DRange
operator =	include/fastlib/math/math_lib.h	/^  const Value& operator = (Value val_in) {$/;"	f	class:MinMaxVal
operator ==	include/fastlib/col/col_string.h	/^  friend bool operator == (const String& a, char b) {$/;"	f	class:String
operator ==	include/fastlib/col/col_string.h	/^  friend bool operator == (const String& a, const String& b) {$/;"	f	class:String
operator ==	include/fastlib/col/col_string.h	/^  friend bool operator == (const String& a, const char *b) {$/;"	f	class:String
operator ==	include/fastlib/math/math_lib.h	/^  friend bool operator == (const DRange& a, const DRange& b) {$/;"	f	struct:DRange
operator Value	include/fastlib/math/math_lib.h	/^  operator Value() const { return val; }$/;"	f	class:MinMaxVal
operator []	include/fastlib/col/arraylist.h	/^  Elem &operator[] (index_t i) {$/;"	f	class:ArrayList
operator []	include/fastlib/col/arraylist.h	/^  const Elem &operator[] (index_t i) const {$/;"	f	class:ArrayList
operator []	include/fastlib/col/col_string.h	/^  char operator [] (index_t index) const$/;"	f	class:String
operator []	include/fastlib/col/col_string.h	/^  char& operator [] (index_t index)$/;"	f	class:String
operator []	include/fastlib/col/intmap.h	/^  Value& operator [] (index_t index) {$/;"	f	class:DenseIntMap
operator []	include/fastlib/col/intmap.h	/^  const Value& operator [] (index_t index) const {$/;"	f	class:DenseIntMap
operator []	include/fastlib/col/rangeset.h	/^  const Range& operator[] (index_t i) const {$/;"	f	class:RangeSet
operator []	include/fastlib/la/matrix.h	/^  T &operator [] (index_t i) {$/;"	f	class:GenVector
operator []	include/fastlib/la/matrix.h	/^  T operator [] (index_t i) const {$/;"	f	class:GenVector
operator []	include/fastlib/la/matrix.h	/^  double &operator [] (index_t i) {$/;"	f	class:SmallVector
operator []	include/fastlib/la/matrix.h	/^  double operator [] (index_t i) const {$/;"	f	class:SmallVector
operator const char *	include/fastlib/col/col_string.h	/^  operator const char * () const$/;"	f	class:String
operator delete	mlpack/disk_allnn/disk_allnn.h	/^    static void operator delete(void *p) {$/;"	f	class:DiskAllNN::QueryStat
operator new	mlpack/disk_allnn/disk_allnn.h	/^    static void *operator new(size_t size) {$/;"	f	class:DiskAllNN::QueryStat
operator |=	include/fastlib/math/math_lib.h	/^  const DRange& operator |= (const DRange& other) {$/;"	f	struct:DRange
operator |=	include/fastlib/math/math_lib.h	/^  const DRange& operator |= (double d) {$/;"	f	struct:DRange
operator |=	include/fastlib/tree/bounds.h	/^  DHrectBound& operator |= (const DHrectBound& other) {$/;"	f	class:DHrectBound
operator |=	include/fastlib/tree/bounds.h	/^  DHrectBound& operator |= (const Vector& vector) {$/;"	f	class:DHrectBound
opt_doc	mlpack/optimization/optimizers.h	/^const fx_module_doc opt_doc = {$/;"	v
opt_entries	mlpack/optimization/optimizers.h	/^const fx_entry_doc opt_entries[] = {$/;"	v
opt_module_	mlpack/optimization/optimizers.h	/^  datanode *opt_module_;$/;"	m	class:NelderMead
opt_module_	mlpack/optimization/optimizers.h	/^  datanode *opt_module_;$/;"	m	class:QuasiNewton
optimized_function_	mlpack/optimization/lbfgs/lbfgs.h	/^  OptimizedFunction  *optimized_function_;$/;"	m	class:Lbfgs
order_	mlpack/series_expansion/farfield_expansion.h	/^  int order_;$/;"	m	class:FarFieldExpansion
order_	mlpack/series_expansion/local_expansion.h	/^  int order_;$/;"	m	class:LocalExpansion
order_	mlpack/series_expansion/mult_farfield_expansion.h	/^  int order_;$/;"	m	class:MultFarFieldExpansion
order_	mlpack/series_expansion/mult_local_expansion.h	/^  int order_;$/;"	m	class:MultLocalExpansion
origIndices_	mlpack/quicsvd/cosine_tree.h	/^  ArrayList<int> origIndices_;$/;"	m	class:CosineNode
orig_	include/fastlib/base/otrav_impl.h	/^    const char *orig_;$/;"	m	class:ot__private::Relocator
ortho_range_search	mlpack/range_search/ortho_range_search.h	/^  void ortho_range_search(Tree *search_window_node, $/;"	f	class:OrthoRangeSearch
ortho_slow_range_search	mlpack/range_search/ortho_range_search.h	/^  void ortho_slow_range_search(Tree *search_window_node,$/;"	f	class:OrthoRangeSearch
ot	include/fastlib/base/otrav.h	/^namespace ot {$/;"	n
ot	include/fastlib/base/otrav_impl.h	/^namespace ot {$/;"	n
ot__private	include/fastlib/base/otrav_impl.h	/^namespace ot__private {$/;"	n
p	mlpack/hmm/discreteDST.h	/^  Vector p;$/;"	m	class:DiscreteDST
param_	mlpack/svm/svm.h	/^  PARAMETERS param_;$/;"	m	class:SVM
parent	include/fastlib/fx/datanode.h	/^  struct datanode *parent;$/;"	m	struct:datanode	typeref:struct:datanode::datanode
parent_	mlpack/quicsvd/cosine_tree.h	/^  CosineNode *parent_, *left_, *right_;$/;"	m	class:CosineNode
parm_nbc_doc	mlpack/naive_bayes/simple_nbc.h	/^const fx_module_doc parm_nbc_doc = {$/;"	v
parm_nbc_entries	mlpack/naive_bayes/simple_nbc.h	/^const fx_entry_doc parm_nbc_entries[] ={$/;"	v
parm_nbc_main_doc	mlpack/naive_bayes/nbc_main.cc	/^const fx_module_doc parm_nbc_main_doc = {$/;"	v
parm_nbc_main_entries	mlpack/naive_bayes/nbc_main.cc	/^const fx_entry_doc parm_nbc_main_entries[] = {$/;"	v
parm_nbc_main_submodules	mlpack/naive_bayes/nbc_main.cc	/^const fx_submodule_doc parm_nbc_main_submodules[] = {$/;"	v
parm_nbc_submodules	mlpack/naive_bayes/simple_nbc.h	/^const fx_submodule_doc parm_nbc_submodules[] = {$/;"	v
percent_cut	mlpack/fastica/fastica.h	/^  double percent_cut() {$/;"	f	class:FastICA
percent_cut_	mlpack/fastica/fastica.h	/^  double percent_cut_;$/;"	m	class:FastICA
percent_indicator	include/fastlib/base/deprecated.h	/^void percent_indicator(const char *name, uint64 num, uint64 den) {$/;"	f
phi	mlpack/mog/phi.h	/^long double phi(Vector& x , Vector& mean , Matrix& cov) {$/;"	f
phi	mlpack/mog/phi.h	/^long double phi(Vector& x, Vector& mean, Matrix& cov, ArrayList<Matrix>& d_cov, Vector *g_mean, Vector *g_cov){$/;"	f
phi	mlpack/mog/phi.h	/^long double phi(double x, double mean, double var) {$/;"	f
phi	mlpack/naive_bayes/phi.h	/^long double phi(Vector& x , Vector& mean , Matrix& cov) {$/;"	f
phi	mlpack/naive_bayes/phi.h	/^long double phi(Vector& x, Vector& mean, Matrix& cov, ArrayList<Matrix>& d_cov, Vector *g_mean, Vector *g_cov){$/;"	f
phi	mlpack/naive_bayes/phi.h	/^long double phi(double x, double mean, double var) {$/;"	f
plugin_bandwidth_	mlpack/kde/bandwidth_lscv.h	/^  static double plugin_bandwidth_(const Matrix &references) {$/;"	f	class:BandwidthLSCV
point	include/fastlib/data/dataset.h	/^  const double *point(index_t point) const {$/;"	f	class:Dataset
point	include/fastlib/data/dataset.h	/^  double *point(index_t point) {$/;"	f	class:Dataset
poison_ptr	include/fastlib/base/debug.h	/^const T *poison_ptr(T *&x) {$/;"	f
poison_ptr	include/fastlib/base/debug.h	271;"	d
portion_correct	include/fastlib/data/crossvalidation.h	/^  double portion_correct() {$/;"	f	class:SimpleCrossValidator
pos_	include/fastlib/base/otrav_impl.h	/^    size_t pos_;$/;"	m	class:ot__private::Freezer
postponed_e_	mlpack/kde/kde_stat.h	/^  double postponed_e_;$/;"	m	class:KdeStat
postponed_e_	mlpack/kde/kde_stat.h	/^  double postponed_e_;$/;"	m	class:VKdeStat
postponed_l_	mlpack/kde/kde_stat.h	/^  double postponed_l_;$/;"	m	class:KdeStat
postponed_l_	mlpack/kde/kde_stat.h	/^  double postponed_l_;$/;"	m	class:VKdeStat
postponed_n_pruned_	mlpack/kde/kde_stat.h	/^  double postponed_n_pruned_;$/;"	m	class:KdeStat
postponed_n_pruned_	mlpack/kde/kde_stat.h	/^  double postponed_n_pruned_;$/;"	m	class:VKdeStat
postponed_u_	mlpack/kde/kde_stat.h	/^  double postponed_u_;$/;"	m	class:KdeStat
postponed_u_	mlpack/kde/kde_stat.h	/^  double postponed_u_;$/;"	m	class:VKdeStat
postponed_used_error_	mlpack/kde/kde_stat.h	/^  double postponed_used_error_;$/;"	m	class:KdeStat
postponed_used_error_	mlpack/kde/kde_stat.h	/^  double postponed_used_error_;$/;"	m	class:VKdeStat
predictions_	mlpack/regression/ridge_regression.h	/^  Matrix predictions_;$/;"	m	class:RidgeRegression
predictions_	mlpack/regression/ridge_regression_test.cc	/^  Matrix predictions_;$/;"	m	class:RidgeRegressionTest	file:
predictors_	mlpack/regression/ridge_regression.h	/^  Matrix predictors_;$/;"	m	class:RidgeRegression
predictors_	mlpack/regression/ridge_regression_test.cc	/^  Matrix predictors_;$/;"	m	class:RidgeRegressionTest	file:
previous_coordinates_	mlpack/optimization/lbfgs/lbfgs.h	/^  Matrix previous_coordinates_;$/;"	m	class:Lbfgs
previous_gradient_	mlpack/optimization/lbfgs/lbfgs.h	/^  Matrix previous_gradient_;$/;"	m	class:Lbfgs
previous_infeasibility1_	mlpack/mvu/mvu_objectives.h	/^  double previous_infeasibility1_;$/;"	m	class:MaxFurthestNeighbors
print_matrix	mlpack/hmm/support.cc	/^  void print_matrix(TextWriter& writer, const Matrix& a, const char* msg, const char* format) {$/;"	f	namespace:hmm_support
print_matrix	mlpack/hmm/support.cc	/^  void print_matrix(const Matrix& a, const char* msg) {$/;"	f	namespace:hmm_support
print_matrix	mlpack/kalman/kalman_helper.cc	/^void print_matrix(const Matrix& a_mat, const char* name)$/;"	f
print_mixture	mlpack/hmm/mixtureDST.cc	/^void MixtureGauss::print_mixture(const char* s) const {$/;"	f	class:MixtureGauss
print_notify_headers	include/fastlib/base/deprecated.h	45;"	d
print_vector	mlpack/hmm/support.cc	/^  void print_vector(TextWriter& writer, const Vector& a, const char* msg, const char* format) {$/;"	f	namespace:hmm_support
print_vector	mlpack/hmm/support.cc	/^  void print_vector(const Vector& a, const char* msg) {$/;"	f	namespace:hmm_support
prior	mlpack/hmm/mixtureDST.h	/^  Vector prior;$/;"	m	class:MixtureGauss
projMagSq_	mlpack/quicsvd/quicsvd.h	/^  ArrayList<double> projMagSq_;$/;"	m	class:QuicSVD
propagate_one_step	mlpack/kalman/kalman_helper.cc	/^void propagate_one_step(const Matrix& a_mat, const Matrix& b_mat, $/;"	f
propagate_one_step	mlpack/kalman/kalman_helper.cc	/^void propagate_one_step(const Matrix& a_mat, const Vector& x, $/;"	f
proximity	mlpack/kde/gen_metric_tree.h	/^namespace proximity {$/;"	n
pterms_	mlpack/kde/original_ifgt.h	/^  int pterms_;$/;"	m	class:OriginalIFGT
ptr	include/fastlib/la/matrix.h	/^  T *ptr() {$/;"	f	class:GenMatrix
ptr	include/fastlib/la/matrix.h	/^  T *ptr() {$/;"	f	class:GenVector
ptr	include/fastlib/la/matrix.h	/^  const T *ptr() const {$/;"	f	class:GenMatrix
ptr	include/fastlib/la/matrix.h	/^  const T *ptr() const {$/;"	f	class:GenVector
ptr	include/fastlib/la/matrix.h	/^  const double *ptr() const {$/;"	f	class:SmallMatrix
ptr	include/fastlib/la/matrix.h	/^  const double *ptr() const {$/;"	f	class:SmallVector
ptr	include/fastlib/la/matrix.h	/^  double *ptr() {$/;"	f	class:SmallMatrix
ptr	include/fastlib/la/matrix.h	/^  double *ptr() {$/;"	f	class:SmallVector
ptr_	include/fastlib/col/arraylist.h	/^  Elem *ptr_;    \/\/ the stored or aliased array$/;"	m	class:ArrayList
ptr_	include/fastlib/col/intmap.h	/^  Value *ptr_;$/;"	m	class:DenseIntMap
ptr_	include/fastlib/la/matrix.h	/^  T *ptr_;$/;"	m	class:GenMatrix
ptr_	include/fastlib/la/matrix.h	/^  T *ptr_;$/;"	m	class:GenVector
q_mat	mlpack/kalman/kalman_helper.h	/^  Matrix q_mat; $/;"	m	struct:ssm
qpartition	mlpack/quicsvd/cosine_tree.cc	/^index_t qpartition(ArrayList<double>& key, ArrayList<int>& data,$/;"	f
qroot_	mlpack/kde/dualtree_kde.h	/^  Tree *qroot_;$/;"	m	class:DualtreeKde
qroot_	mlpack/kde/dualtree_vkde.h	/^  Tree *qroot_;$/;"	m	class:DualtreeVKde
qset_	mlpack/kde/dualtree_kde.h	/^  Matrix qset_;$/;"	m	class:DualtreeKde
qset_	mlpack/kde/dualtree_vkde.h	/^  Matrix qset_;$/;"	m	class:DualtreeVKde
qset_	mlpack/kde/fft_kde.h	/^  Matrix qset_;$/;"	m	class:FFTKde
qset_	mlpack/kde/fgt_kde.h	/^  Matrix qset_;$/;"	m	class:FGTKde
qset_	mlpack/kde/naive_kde.h	/^  Matrix qset_;$/;"	m	class:NaiveKde
qsort	mlpack/quicsvd/cosine_tree.cc	/^void qsort(ArrayList<double>& key, ArrayList<int>& data,$/;"	f
qsort_compar_	mlpack/series_expansion/bounds_aux.h	/^  static int qsort_compar_(const void *a, const void *b) {$/;"	f	namespace:bounds_aux
qsort_comparator	mlpack/kde/dualtree_kde_common.h	/^  static int qsort_comparator(const void *a, const void *b) {$/;"	f	class:DualtreeKdeCommon
queries_	mlpack/allkfn/allkfn.h	/^  Matrix queries_;$/;"	m	class:AllkFN
queries_	mlpack/allknn/allknn.h	/^  Matrix queries_;$/;"	m	class:AllkNN
queries_	mlpack/allnn/allnn.h	/^  Matrix queries_;$/;"	m	class:AllNN
queries_	mlpack/disk_allnn/disk_allnn.h	/^  Matrix queries_;$/;"	m	class:DiskAllNN
query_set_	mlpack/kde/original_ifgt.h	/^  Matrix query_set_;$/;"	m	class:OriginalIFGT
query_tree_	mlpack/allkfn/allkfn.h	/^  TreeType* query_tree_;$/;"	m	class:AllkFN
query_tree_	mlpack/allknn/allknn.h	/^  TreeType* query_tree_;$/;"	m	class:AllkNN
query_tree_	mlpack/allnn/allnn.h	/^  TreeType* query_tree_;$/;"	m	class:AllNN
query_tree_	mlpack/disk_allnn/disk_allnn.h	/^  TreeType* query_tree_;$/;"	m	class:DiskAllNN
queue_	include/fastlib/par/grain.h	/^  GrainQueue<Grain> *queue_;$/;"	m	class:ThreadedGrainRunner
queue_	include/fastlib/par/grain.h	/^  MinHeap<double, Grain*> queue_;$/;"	m	class:GrainQueue
quicsvd_main_doc	mlpack/quicsvd/quicsvd_main.cc	/^const fx_module_doc quicsvd_main_doc = {$/;"	v
quicsvd_main_entries	mlpack/quicsvd/quicsvd_main.cc	/^const fx_entry_doc quicsvd_main_entries[] = {$/;"	v
quicsvd_main_submodules	mlpack/quicsvd/quicsvd_main.cc	/^const fx_submodule_doc quicsvd_main_submodules[] = {$/;"	v
r_mat	mlpack/kalman/kalman_helper.h	/^  Matrix r_mat; $/;"	m	struct:ssm
radius	include/fastlib/tree/bounds.h	/^  double radius() const {$/;"	f	class:DBallBound
radius_	include/fastlib/tree/bounds.h	/^  double radius_;$/;"	m	class:DBallBound
ranges	include/fastlib/col/rangeset.h	/^  const ArrayList<Range>& ranges() const {$/;"	f	class:RangeSet
ranges_	include/fastlib/col/rangeset.h	/^  ArrayList<Range> ranges_;$/;"	m	class:RangeSet
re	include/fastlib/base/fortran.h	/^  f77_double re;$/;"	m	struct:__anon15
re	include/fastlib/base/fortran.h	/^  f77_real re;$/;"	m	struct:__anon14
read_matrix	mlpack/hmm/support.cc	/^ success_t read_matrix(TextLineReader& reader, Matrix* matrix) {$/;"	f	namespace:hmm_support
read_vector	mlpack/hmm/support.cc	/^  success_t read_vector(TextLineReader& reader, Vector* vec) {$/;"	f	namespace:hmm_support
real	mlpack/kde/fft_kde.h	/^    double real;$/;"	m	struct:FFTKde::complex
ref	include/fastlib/la/matrix.h	/^  T &ref(index_t r, index_t c) {$/;"	f	class:GenMatrix
ref	include/fastlib/la/matrix.h	/^  double &ref(index_t r, index_t c) {$/;"	f	class:SmallMatrix
reference_set_	mlpack/kde/original_ifgt.h	/^  Matrix reference_set_;$/;"	m	class:OriginalIFGT
reference_tree_	mlpack/allkfn/allkfn.h	/^  TreeType* reference_tree_;$/;"	m	class:AllkFN
reference_tree_	mlpack/allknn/allknn.h	/^  TreeType* reference_tree_;$/;"	m	class:AllkNN
reference_tree_	mlpack/allnn/allnn.h	/^  TreeType* reference_tree_;$/;"	m	class:AllNN
reference_tree_	mlpack/disk_allnn/disk_allnn.h	/^  TreeType* reference_tree_;$/;"	m	class:DiskAllNN
reference_weights_	mlpack/kde/original_ifgt.h	/^  Vector reference_weights_;$/;"	m	class:OriginalIFGT
references_	mlpack/allkfn/allkfn.h	/^  Matrix references_;$/;"	m	class:AllkFN
references_	mlpack/allknn/allknn.h	/^  Matrix references_;$/;"	m	class:AllkNN
references_	mlpack/allnn/allnn.h	/^  Matrix references_;$/;"	m	class:AllNN
references_	mlpack/disk_allnn/disk_allnn.h	/^  Matrix references_;$/;"	m	class:DiskAllNN
relative_error_	mlpack/kde/dualtree_kde.h	/^  double relative_error_;$/;"	m	class:DualtreeKde
relative_error_	mlpack/kde/dualtree_kde_cv.h	/^  double relative_error_;$/;"	m	class:DualtreeKdeCV
relative_error_	mlpack/kde/dualtree_vkde.h	/^  double relative_error_;$/;"	m	class:DualtreeVKde
retrieve_weights	mlpack/kde/fft_kde.h	/^  void retrieve_weights(int query_pt_num, double volume, int level, int pos, $/;"	f	class:FFTKde
right	include/fastlib/tree/spacetree.h	/^  BinarySpaceTree *right() const {$/;"	f	class:BinarySpaceTree
right	mlpack/kde/general_spacetree.h	/^  GeneralBinarySpaceTree *right() const {$/;"	f	class:GeneralBinarySpaceTree
right_	include/fastlib/tree/spacetree.h	/^  BinarySpaceTree *right_;$/;"	m	class:BinarySpaceTree
right_	mlpack/kde/general_spacetree.h	/^  GeneralBinarySpaceTree *right_;$/;"	m	class:GeneralBinarySpaceTree
right_	mlpack/quicsvd/cosine_tree.h	/^  CosineNode *parent_, *left_, *right_;$/;"	m	class:CosineNode
right_usage	mlpack/disk_allnn/disk_allnn.h	/^    ptrdiff_t right_usage() {$/;"	f	class:DiskAllNN::QueryStat
right_usage_	mlpack/disk_allnn/disk_allnn.h	/^    ptrdiff_t right_usage_;$/;"	m	class:DiskAllNN::QueryStat
ro_bfgs_	mlpack/optimization/lbfgs/lbfgs.h	/^  Vector ro_bfgs_;$/;"	m	class:Lbfgs
root_	mlpack/quicsvd/quicsvd.h	/^  CosineNode root_;$/;"	m	class:QuicSVD
root_	mlpack/range_search/ortho_range_search.h	/^  Tree *root_;$/;"	m	class:OrthoRangeSearch
root_module_	include/fastlib/data/crossvalidation.h	/^  datanode *root_module_;$/;"	m	class:GeneralCrossValidator
root_module_	include/fastlib/data/crossvalidation.h	/^  datanode *root_module_;$/;"	m	class:SimpleCrossValidator
rowMean	mlpack/infomax_ica/infomax_ica.cc	/^Vector InfomaxICA::rowMean(const Matrix &m){$/;"	f	class:InfomaxICA
rroot_	mlpack/kde/dualtree_kde.h	/^  Tree *rroot_;$/;"	m	class:DualtreeKde
rroot_	mlpack/kde/dualtree_kde_cv.h	/^  Tree *rroot_;$/;"	m	class:DualtreeKdeCV
rroot_	mlpack/kde/dualtree_vkde.h	/^  Tree *rroot_;$/;"	m	class:DualtreeVKde
rset_	mlpack/kde/dualtree_kde.h	/^  Matrix rset_;$/;"	m	class:DualtreeKde
rset_	mlpack/kde/dualtree_kde_cv.h	/^  Matrix rset_;$/;"	m	class:DualtreeKdeCV
rset_	mlpack/kde/dualtree_vkde.h	/^  Matrix rset_;$/;"	m	class:DualtreeVKde
rset_	mlpack/kde/fft_kde.h	/^  Matrix rset_;$/;"	m	class:FFTKde
rset_	mlpack/kde/fgt_kde.h	/^  Matrix rset_;$/;"	m	class:FGTKde
rset_	mlpack/kde/naive_kde.h	/^  Matrix rset_;$/;"	m	class:NaiveKde
rset_weight_sum_	mlpack/kde/dualtree_kde.h	/^  double rset_weight_sum_;$/;"	m	class:DualtreeKde
rset_weight_sum_	mlpack/kde/dualtree_kde_cv.h	/^  double rset_weight_sum_;$/;"	m	class:DualtreeKdeCV
rset_weight_sum_	mlpack/kde/dualtree_vkde.h	/^  double rset_weight_sum_;$/;"	m	class:DualtreeVKde
rset_weights_	mlpack/kde/dualtree_kde.h	/^  Vector rset_weights_;$/;"	m	class:DualtreeKde
rset_weights_	mlpack/kde/dualtree_kde_cv.h	/^  Vector rset_weights_;$/;"	m	class:DualtreeKdeCV
rset_weights_	mlpack/kde/dualtree_vkde.h	/^  Vector rset_weights_;$/;"	m	class:DualtreeVKde
rset_weights_	mlpack/kde/naive_kde.h	/^  Vector rset_weights_;$/;"	m	class:NaiveKde
run_tests	mlpack/quicsvd/cosine_tree.h	/^  void run_tests() {$/;"	f	class:CosineNodeTest
run_tests	mlpack/quicsvd/quicsvd.h	/^  void run_tests() {$/;"	f	class:QuicSVDTest
runner_	include/fastlib/par/grain.h	/^    ThreadedGrainRunner *runner_;$/;"	m	struct:ThreadedGrainRunner::ThreadTask
s_bfgs_	mlpack/optimization/lbfgs/lbfgs.h	/^  ArrayList<Matrix> s_bfgs_;$/;"	m	class:Lbfgs
s_mat	mlpack/kalman/kalman_helper.h	/^  Matrix s_mat; $/;"	m	struct:ssm
sampleCovariance	mlpack/infomax_ica/infomax_ica.cc	/^Matrix InfomaxICA::sampleCovariance(const Matrix &m){$/;"	f	class:InfomaxICA
sample_multiple_	mlpack/kde/dualtree_kde.h	/^  static const int sample_multiple_ = 1;$/;"	m	class:DualtreeKde
sample_multiple_	mlpack/kde/dualtree_kde_cv.h	/^  static const int sample_multiple_ = 1;$/;"	m	class:DualtreeKdeCV
sample_multiple_	mlpack/kde/dualtree_vkde.h	/^  static const int sample_multiple_ = 10;$/;"	m	class:DualtreeVKde
schur	mlpack/kalman/kalman_helper.cc	/^void schur(const Matrix& a_mat, const Matrix& b_mat, const Matrix& c_mat, $/;"	f
sea_	mlpack/series_expansion/farfield_expansion.h	/^  const typename TKernelAux::TSeriesExpansionAux *sea_;$/;"	m	class:FarFieldExpansion
sea_	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  TSeriesExpansionAux sea_;$/;"	m	class:InversePowDistGradientKernelAux
sea_	mlpack/series_expansion/inverse_pow_dist_kernel_aux.h	/^  TSeriesExpansionAux sea_;$/;"	m	class:InversePowDistKernelAux
sea_	mlpack/series_expansion/kernel_aux.h	/^  TSeriesExpansionAux sea_;$/;"	m	class:EpanKernelAux
sea_	mlpack/series_expansion/kernel_aux.h	/^  TSeriesExpansionAux sea_;$/;"	m	class:GaussianKernelAux
sea_	mlpack/series_expansion/kernel_aux.h	/^  TSeriesExpansionAux sea_;$/;"	m	class:GaussianKernelMultAux
sea_	mlpack/series_expansion/local_expansion.h	/^  const typename TKernelAux::TSeriesExpansionAux *sea_;$/;"	m	class:LocalExpansion
sea_	mlpack/series_expansion/mult_farfield_expansion.h	/^  const typename TKernelAux::TSeriesExpansionAux *sea_;$/;"	m	class:MultFarFieldExpansion
sea_	mlpack/series_expansion/mult_local_expansion.h	/^  const typename TKernelAux::TSeriesExpansionAux *sea_;$/;"	m	class:MultLocalExpansion
second_farfield_expansion_	mlpack/kde/kde_cv_stat.h	/^  typename TKernelAux::TFarFieldExpansion second_farfield_expansion_;$/;"	m	class:KdeCVStat
second_ka_	mlpack/kde/dualtree_kde_cv.h	/^  TKernelAux second_ka_;$/;"	m	class:DualtreeKdeCV
second_mult_const_	mlpack/kde/dualtree_kde_cv.h	/^  double second_mult_const_;$/;"	m	class:DualtreeKdeCV
second_sum_e_	mlpack/kde/dualtree_kde_cv.h	/^  double second_sum_e_;$/;"	m	class:DualtreeKdeCV
second_sum_l_	mlpack/kde/dualtree_kde_cv.h	/^  double second_sum_l_;$/;"	m	class:DualtreeKdeCV
second_sum_u_	mlpack/kde/dualtree_kde_cv.h	/^  double second_sum_u_;$/;"	m	class:DualtreeKdeCV
second_used_error_	mlpack/kde/dualtree_kde_cv.h	/^  double second_used_error_;$/;"	m	class:DualtreeKdeCV
set	include/fastlib/data/dataset.h	/^  void set(index_t feature, index_t point, double d) {$/;"	f	class:Dataset
set	include/fastlib/la/matrix.h	/^  void set(index_t r, index_t c, T v) {$/;"	f	class:GenMatrix
set	include/fastlib/la/matrix.h	/^  void set(index_t r, index_t c, double v) {$/;"	f	class:SmallMatrix
set	mlpack/hmm/discreteDST.h	/^  void set(const Vector& p_) { p.CopyValues(p_); }$/;"	f	class:DiscreteDST
set	mlpack/kernel_pca/kernel_pca.h	/^    void set(double bandwidth) {$/;"	f	class:KernelPCA::GaussianKernel
setB	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::setB(const int b){$/;"	f	class:InfomaxICA
setEpsilon	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::setEpsilon(const double epsilon){$/;"	f	class:InfomaxICA
setL2Err	mlpack/quicsvd/cosine_tree.h	/^  void setL2Err(double L2Err) {$/;"	f	class:CosineNode
setLambda	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::setLambda(const double lambda){$/;"	f	class:InfomaxICA
setModel	mlpack/hmm/discreteHMM.cc	/^void DiscreteHMM::setModel(const Matrix& transmission, const Matrix& emission) {$/;"	f	class:DiscreteHMM
setModel	mlpack/hmm/gaussianHMM.cc	/^void GaussianHMM::setModel(const Matrix& transmission,  const ArrayList<Vector>& list_mean_vec,const ArrayList<Matrix>& list_covariance_mat) {$/;"	f	class:GaussianHMM
setModel	mlpack/hmm/mixgaussHMM.cc	/^void MixtureofGaussianHMM::setModel(const Matrix& transmission,$/;"	f	class:MixtureofGaussianHMM
set_center	mlpack/series_expansion/farfield_expansion.h	/^  void set_center(const Vector &center) {$/;"	f	class:FarFieldExpansion
set_center	mlpack/series_expansion/mult_farfield_expansion.h	/^  void set_center(const Vector &center) {$/;"	f	class:MultFarFieldExpansion
set_children	include/fastlib/tree/spacetree.h	/^  void set_children(const Dataset& data,$/;"	f	class:BinarySpaceTree
set_children	mlpack/kde/general_spacetree.h	/^  void set_children$/;"	f	class:GeneralBinarySpaceTree
set_coordinates	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void  Lbfgs<OptimizedFunction>::set_coordinates(Matrix &coordinates) {$/;"	f	class:Lbfgs
set_d_omega	mlpack/mog/mog_l2e.h	/^  void set_d_omega(Matrix& d_omega) {$/;"	f	class:MoGL2E
set_d_sigma	mlpack/mog/mog_l2e.h	/^  void set_d_sigma(index_t i, index_t j, Matrix& d_sigma_i_j) {$/;"	f	class:MoGL2E
set_lagrange_mult	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::set_lagrange_mult(double val) {$/;"	f	class:MaxFurthestNeighbors
set_left_usage	mlpack/disk_allnn/disk_allnn.h	/^    void set_left_usage(ptrdiff_t usage) {$/;"	f	class:DiskAllNN::QueryStat
set_max_distance_so_far	mlpack/allknn/allknn.h	/^    void set_max_distance_so_far(double new_dist) {$/;"	f	class:AllkNN::QueryStat
set_max_distance_so_far	mlpack/allnn/allnn.h	/^    void set_max_distance_so_far(double new_dist) {$/;"	f	class:AllNN::QueryStat
set_max_distance_so_far	mlpack/disk_allnn/disk_allnn.h	/^    void set_max_distance_so_far(double new_dist) {$/;"	f	class:DiskAllNN::QueryStat
set_max_iterations	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::set_max_iterations(index_t max_iterations) {$/;"	f	class:Lbfgs
set_min_distance_so_far	mlpack/allkfn/allkfn.h	/^    void set_min_distance_so_far(double new_dist) {$/;"	f	class:AllkFN::QueryStat
set_mu	mlpack/mog/mog_em.h	/^  void set_mu(index_t i, Vector& mu) {$/;"	f	class:MoGEM
set_mu	mlpack/mog/mog_em.h	/^  void set_mu(index_t i, index_t length, const double *mu) {$/;"	f	class:MoGEM
set_mu	mlpack/mog/mog_l2e.h	/^  void set_mu(index_t i, Vector& mu) {$/;"	f	class:MoGL2E
set_mu	mlpack/mog/mog_l2e.h	/^  void set_mu(index_t i, index_t length, const double *mu) {$/;"	f	class:MoGL2E
set_name	include/fastlib/data/dataset.h	/^  void set_name(const char *name_in) {$/;"	f	class:DatasetInfo
set_omega	mlpack/mog/mog_em.h	/^  void set_omega(Vector& omega) {$/;"	f	class:MoGEM
set_omega	mlpack/mog/mog_em.h	/^  void set_omega(index_t length, const double *omega) {$/;"	f	class:MoGEM
set_omega	mlpack/mog/mog_l2e.h	/^  void set_omega(Vector& omega) {$/;"	f	class:MoGL2E
set_omega	mlpack/mog/mog_l2e.h	/^  void set_omega(index_t length, const double *omega) {$/;"	f	class:MoGL2E
set_order	mlpack/series_expansion/farfield_expansion.h	/^  void set_order(int new_order) { order_ = new_order; }$/;"	f	class:FarFieldExpansion
set_order	mlpack/series_expansion/local_expansion.h	/^  void set_order(int new_order) { order_ = new_order; }$/;"	f	class:LocalExpansion
set_order	mlpack/series_expansion/mult_farfield_expansion.h	/^  void set_order(int new_order) { order_ = new_order; }$/;"	f	class:MultFarFieldExpansion
set_order	mlpack/series_expansion/mult_local_expansion.h	/^  void set_order(int new_order) { order_ = new_order; }$/;"	f	class:MultLocalExpansion
set_portion_of_matrix	mlpack/kalman/kalman_helper.cc	/^void set_portion_of_matrix(const Matrix& a_mat, const int& r_in,$/;"	f
set_portion_of_matrix	mlpack/kalman/kalman_helper.cc	/^void set_portion_of_matrix(const Vector& a, const int& r_in,const int& r_out, $/;"	f
set_radius	include/fastlib/tree/bounds.h	/^  void set_radius(double d) {$/;"	f	class:DBallBound
set_right_usage	mlpack/disk_allnn/disk_allnn.h	/^    void set_right_usage(ptrdiff_t usage) {$/;"	f	class:DiskAllNN::QueryStat
set_sigma	mlpack/mog/mog_em.h	/^  void set_sigma(index_t i, Matrix& sigma) {$/;"	f	class:MoGEM
set_sigma	mlpack/mog/mog_l2e.h	/^  void set_sigma(index_t i, Matrix& sigma) {$/;"	f	class:MoGL2E
set_sigma	mlpack/mvu/mvu_objectives_impl.h	/^void MaxFurthestNeighbors::set_sigma(double sigma) {$/;"	f	class:MaxFurthestNeighbors
set_sigma	mlpack/mvu/mvu_objectives_impl.h	/^void MaxVariance::set_sigma(double sigma) {$/;"	f	class:MaxVariance
set_sigma	mlpack/optimization/lbfgs/lbfgs_impl.h	/^void Lbfgs<OptimizedFunction>::set_sigma(double sigma) {$/;"	f	class:Lbfgs
set_top	include/fastlib/col/heap.h	/^  void set_top(Value v) {$/;"	f	class:MinHeap
should_free_	include/fastlib/la/matrix.h	/^  bool should_free_;$/;"	m	class:GenMatrix
should_free_	include/fastlib/la/matrix.h	/^  bool should_free_;$/;"	m	class:GenVector
show_warnings_	mlpack/optimization/lbfgs/lbfgs.h	/^  bool show_warnings_;$/;"	m	class:Lbfgs
sigma	mlpack/mog/mog_em.h	/^  ArrayList<Matrix>& sigma() {$/;"	f	class:MoGEM
sigma	mlpack/mog/mog_em.h	/^  Matrix& sigma(index_t i) {$/;"	f	class:MoGEM
sigma	mlpack/mog/mog_l2e.h	/^  ArrayList<Matrix>& sigma() {$/;"	f	class:MoGL2E
sigma	mlpack/mog/mog_l2e.h	/^  Matrix& sigma(index_t i) {$/;"	f	class:MoGL2E
sigma	mlpack/optimization/lbfgs/lbfgs_impl.h	/^double Lbfgs<OptimizedFunction>::sigma() {$/;"	f	class:Lbfgs
sigma_	mlpack/mog/mog_em.h	/^  ArrayList<Matrix> sigma_;$/;"	m	class:MoGEM
sigma_	mlpack/mog/mog_l2e.h	/^  ArrayList<Matrix> sigma_;$/;"	m	class:MoGL2E
sigma_	mlpack/mvu/mvu_objectives.h	/^  double sigma_;$/;"	m	class:MaxFurthestNeighbors
sigma_	mlpack/mvu/mvu_objectives.h	/^  double sigma_;$/;"	m	class:MaxVariance
sigma_	mlpack/optimization/lbfgs/lbfgs.h	/^  double sigma_;$/;"	m	class:Lbfgs
silent_	mlpack/optimization/lbfgs/lbfgs.h	/^  bool silent_;$/;"	m	class:Lbfgs
size	include/fastlib/base/otrav_impl.h	/^    size_t size() {$/;"	f	class:ot__private::Deserializer
size	include/fastlib/base/otrav_impl.h	/^    size_t size() {$/;"	f	class:ot__private::Freezer
size	include/fastlib/base/otrav_impl.h	/^    size_t size() {$/;"	f	class:ot__private::Serializer
size	include/fastlib/col/arraylist.h	/^  index_t size() const {$/;"	f	class:ArrayList
size	include/fastlib/col/heap.h	/^  index_t size() const {$/;"	f	class:MinHeap
size	include/fastlib/col/intmap.h	/^  index_t size() const {$/;"	f	class:DenseIntMap
size	include/fastlib/col/rangeset.h	/^  index_t size() const {$/;"	f	class:RangeSet
size	include/fastlib/par/grain.h	/^  index_t size() const {$/;"	f	class:GrainQueue
size_	include/fastlib/base/otrav_impl.h	/^    size_t size_;$/;"	m	class:ot__private::Deserializer
size_	include/fastlib/base/otrav_impl.h	/^    size_t size_;$/;"	m	class:ot__private::Serializer
size_	include/fastlib/col/arraylist.h	/^  index_t size_; \/\/ number of active objects$/;"	m	class:ArrayList
size_	include/fastlib/col/intmap.h	/^  index_t size_;$/;"	m	class:DenseIntMap
size_	mlpack/kde/fft_kde.h	/^  ArrayList<int> size_;$/;"	m	class:FFTKde
skip_blank	mlpack/hmm/support.cc	/^  bool skip_blank(TextLineReader& reader) {$/;"	f	namespace:hmm_support
sphere	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::sphere(Matrix &data){$/;"	f	class:InfomaxICA
splitIndices	mlpack/quicsvd/cosine_tree.cc	/^void splitIndices(ArrayList<int>& indices, int leftSize,$/;"	f
sqrtm	mlpack/infomax_ica/infomax_ica.cc	/^Matrix InfomaxICA::sqrtm(const Matrix &m){$/;"	f	class:InfomaxICA
squared_component_	mlpack/series_expansion/kernel_aux.h	/^  InversePowDistKernelAux squared_component_;$/;"	m	class:EpanKernelAux
ssm	mlpack/kalman/kalman_helper.h	/^struct ssm {$/;"	s
stabilization	mlpack/fastica/fastica.h	/^  bool stabilization() {$/;"	f	class:FastICA
stabilization_	mlpack/fastica/fastica.h	/^  bool stabilization_;$/;"	m	class:FastICA
start	include/fastlib/fx/stopwatch.h	/^  struct timestamp start;$/;"	m	struct:stopwatch	typeref:struct:stopwatch::timestamp
start_accumulate	mlpack/hmm/discreteDST.h	/^  void start_accumulate() { ACC_p.SetZero(); }$/;"	f	class:DiscreteDST
start_accumulate	mlpack/hmm/mixtureDST.h	/^  void start_accumulate() {$/;"	f	class:MixtureGauss
stat	include/fastlib/tree/spacetree.h	/^  Statistic& stat() {$/;"	f	class:BinarySpaceTree
stat	include/fastlib/tree/spacetree.h	/^  const Statistic& stat() const {$/;"	f	class:BinarySpaceTree
stat	mlpack/kde/general_spacetree.h	/^  Statistic& stat() {$/;"	f	class:GeneralBinarySpaceTree
stat	mlpack/kde/general_spacetree.h	/^  const Statistic& stat() const {$/;"	f	class:GeneralBinarySpaceTree
stat_	include/fastlib/tree/spacetree.h	/^  Statistic stat_;$/;"	m	class:BinarySpaceTree
stat_	mlpack/kde/general_spacetree.h	/^  Statistic stat_;$/;"	m	class:GeneralBinarySpaceTree
status_	include/fastlib/par/thread.h	/^  enum {UNINIT, READY, ATTACHED, DETACHED, DONE} status_;$/;"	m	class:Thread	typeref:enum:Thread::__anon18
step_	mlpack/optimization/lbfgs/lbfgs.h	/^  double step_;$/;"	m	class:Lbfgs
step_size_	mlpack/optimization/lbfgs/lbfgs.h	/^  double step_size_;$/;"	m	class:Lbfgs
stopwatch	include/fastlib/fx/stopwatch.h	/^struct stopwatch {$/;"	s
stream_	include/fastlib/base/otrav_impl.h	/^    FILE *stream_;$/;"	m	class:ot::StandardFormat
stream_	include/fastlib/base/otrav_impl.h	/^    FILE *stream_;$/;"	m	class:ot::XMLFormat
stream_	include/fastlib/base/otrav_impl.h	/^    FILE *stream_;$/;"	m	class:ot__private::Deserializer
stream_	include/fastlib/base/otrav_impl.h	/^    FILE *stream_;$/;"	m	class:ot__private::Serializer
stride_align	include/fastlib/base/compiler.h	293;"	d
stride_align_max	include/fastlib/base/compiler.h	307;"	d
strideof	include/fastlib/base/compiler.h	266;"	d
strideof	include/fastlib/base/compiler.h	281;"	d
subMeans	mlpack/infomax_ica/infomax_ica.cc	/^Matrix InfomaxICA::subMeans(const Matrix &m){$/;"	f	class:InfomaxICA
submodules	include/fastlib/fx/fx.h	/^  const struct fx_submodule_doc *submodules;$/;"	m	struct:fx_module_doc	typeref:struct:fx_module_doc::fx_submodule_doc
success_t	include/fastlib/base/common.h	/^} success_t;$/;"	t	typeref:enum:__anon2
sumProjMagSq_	mlpack/quicsvd/quicsvd.h	/^  double sumProjMagSq_;$/;"	m	class:QuicSVD
sum_of_furthest_distances_	mlpack/mvu/mvu_objectives.h	/^  double sum_of_furthest_distances_;$/;"	m	class:MaxFurthestNeighbors
sum_of_furthest_distances_	mlpack/mvu/mvu_objectives.h	/^  double sum_of_furthest_distances_;$/;"	m	class:MaxVariance
sum_of_nearest_distances_	mlpack/mvu/mvu_objectives.h	/^  double sum_of_nearest_distances_;$/;"	m	class:MaxFurthestNeighbors
sv_	mlpack/svm/svm.h	/^  Matrix sv_;$/;"	m	class:SVM
sv_coef_	mlpack/svm/svm.h	/^  Matrix sv_coef_;$/;"	m	class:SVM
sv_index_	mlpack/svm/svm.h	/^  ArrayList<index_t> sv_index_;$/;"	m	class:SVM
sv_list_ct_	mlpack/svm/svm.h	/^  ArrayList<index_t> sv_list_ct_;$/;"	m	class:SVM
sv_list_startpos_	mlpack/svm/svm.h	/^  ArrayList<index_t> sv_list_startpos_;$/;"	m	class:SVM
svm_main_doc	mlpack/svm/svm_main.cc	/^const fx_module_doc svm_main_doc = {$/;"	v
svm_main_entries_doc	mlpack/svm/svm_main.cc	/^const fx_entry_doc svm_main_entries_doc[] = {$/;"	v
tailp_	include/fastlib/col/queue.h	/^  Node **tailp_;$/;"	m	class:Queue
targetRelErr_	mlpack/quicsvd/quicsvd.h	/^  double targetRelErr_;$/;"	m	class:QuicSVD
task	include/fastlib/par/thread.h	/^  Task* task() const {$/;"	f	class:Thread
task_	include/fastlib/par/thread.h	/^  Task *task_;$/;"	m	class:Thread
tau_	mlpack/kde/fgt_kde.h	/^  double tau_;$/;"	m	class:FGTKde
test_CosineTreeNode	mlpack/quicsvd/cosine_tree.h	/^  void test_CosineTreeNode() {$/;"	f	class:CosineNodeTest
test_QuicSVD	mlpack/quicsvd/quicsvd.h	/^  void test_QuicSVD() {$/;"	f	class:QuicSVDTest
test__void_func	include/fastlib/base/test.h	/^typedef void (*test__void_func)();$/;"	t
test_result_	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  const char *train_result_, *test_result_;$/;"	m	class:TestClassSimpleNBC	file:
test_simple_nbc_main_doc	mlpack/naive_bayes/test_simple_nbc_main.cc	/^const fx_module_doc test_simple_nbc_main_doc = {$/;"	v
test_simple_nbc_main_entries	mlpack/naive_bayes/test_simple_nbc_main.cc	/^const fx_entry_doc test_simple_nbc_main_entries[] = {$/;"	v
test_simple_nbc_main_submodules	mlpack/naive_bayes/test_simple_nbc_main.cc	/^const fx_submodule_doc test_simple_nbc_main_submodules[] = {$/;"	v
testdata_	mlpack/infomax_ica/test_infomax_ica.h	/^  Matrix testdata_;$/;"	m	class:TestInfomaxICA
text	include/fastlib/fx/fx.h	/^  const char *text;$/;"	m	struct:fx_entry_doc
text	include/fastlib/fx/fx.h	/^  const char *text;$/;"	m	struct:fx_module_doc
text	include/fastlib/fx/fx.h	/^  const char *text;$/;"	m	struct:fx_submodule_doc
thread_	include/fastlib/par/thread.h	/^  pthread_t thread_;$/;"	m	class:Thread
threshold_	mlpack/kde/dualtree_kde.h	/^  double threshold_;$/;"	m	class:DualtreeKde
threshold_	mlpack/kde/dualtree_kde_cv.h	/^  double threshold_;$/;"	m	class:DualtreeKdeCV
threshold_	mlpack/kde/dualtree_vkde.h	/^  double threshold_;$/;"	m	class:DualtreeVKde
timestamp	include/fastlib/fx/stopwatch.h	/^struct timestamp {$/;"	s
top	include/fastlib/col/heap.h	/^  Value top() const {$/;"	f	class:MinHeap
top	include/fastlib/col/queue.h	/^  T& top() {$/;"	f	class:Queue
top	include/fastlib/col/queue.h	/^  const T& top() const {$/;"	f	class:Queue
top_key	include/fastlib/col/heap.h	/^  Key top_key() const {$/;"	f	class:MinHeap
total	include/fastlib/fx/stopwatch.h	/^  struct timestamp total;$/;"	m	struct:stopwatch	typeref:struct:stopwatch::timestamp
total	mlpack/hmm/mixtureDST.h	/^  double total;$/;"	m	class:MixtureGauss
total_num_coeffs_	mlpack/kde/original_ifgt.h	/^  int total_num_coeffs_;$/;"	m	class:OriginalIFGT
total_num_sv_	mlpack/svm/svm.h	/^  index_t total_num_sv_;$/;"	m	class:SVM
train_baumwelch	mlpack/hmm/train.cc	/^success_t train_baumwelch() {$/;"	f
train_baumwelch_discrete	mlpack/hmm/train.cc	/^success_t train_baumwelch_discrete() {$/;"	f
train_baumwelch_gaussian	mlpack/hmm/train.cc	/^success_t train_baumwelch_gaussian() {$/;"	f
train_baumwelch_mixture	mlpack/hmm/train.cc	/^success_t train_baumwelch_mixture() {$/;"	f
train_labels_ct_	mlpack/svm/svm.h	/^  ArrayList<index_t> train_labels_ct_;$/;"	m	class:SVM
train_labels_index_	mlpack/svm/svm.h	/^  ArrayList<index_t> train_labels_index_;$/;"	m	class:SVM
train_labels_list_	mlpack/svm/svm.h	/^  ArrayList<double> train_labels_list_;$/;"	m	class:SVM
train_labels_startpos_	mlpack/svm/svm.h	/^  ArrayList<index_t> train_labels_startpos_;$/;"	m	class:SVM
train_result_	mlpack/naive_bayes/test_simple_nbc_main.cc	/^  const char *train_result_, *test_result_;$/;"	m	class:TestClassSimpleNBC	file:
train_viterbi	mlpack/hmm/train.cc	/^success_t train_viterbi() {$/;"	f
train_viterbi_discrete	mlpack/hmm/train.cc	/^success_t train_viterbi_discrete() {$/;"	f
train_viterbi_gaussian	mlpack/hmm/train.cc	/^success_t train_viterbi_gaussian() {$/;"	f
train_viterbi_mixture	mlpack/hmm/train.cc	/^success_t train_viterbi_mixture() {$/;"	f
trainset_sv_indicator_	mlpack/svm/svm.h	/^  ArrayList<bool> trainset_sv_indicator_;$/;"	m	class:SVM
transmission	mlpack/hmm/discreteHMM.h	/^  const Matrix& transmission() const { return transmission_; }$/;"	f	class:DiscreteHMM
transmission	mlpack/hmm/gaussianHMM.h	/^  const Matrix& transmission() const { return transmission_; }$/;"	f	class:GaussianHMM
transmission	mlpack/hmm/mixgaussHMM.h	/^  const Matrix& transmission() const { return transmission_; }$/;"	f	class:MixtureofGaussianHMM
transmission_	mlpack/hmm/discreteHMM.h	/^  Matrix transmission_;$/;"	m	class:DiscreteHMM
transmission_	mlpack/hmm/gaussianHMM.h	/^  Matrix transmission_;$/;"	m	class:GaussianHMM
transmission_	mlpack/hmm/mixgaussHMM.h	/^  Matrix transmission_;$/;"	m	class:MixtureofGaussianHMM
traversal_mapping_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  ArrayList< ArrayList<int> > traversal_mapping_;$/;"	m	class:MultSeriesExpansionAux
tree	include/fastlib/tree/kdtree.h	/^namespace tree {$/;"	n
tree_buffer_	mlpack/range_search/ortho_range_search.h	/^  Tree *tree_buffer_;$/;"	m	class:OrthoRangeSearch
tree_gen_metric_tree_private	mlpack/kde/gen_metric_tree_impl.h	/^namespace tree_gen_metric_tree_private {$/;"	n
tree_kdtree_private	include/fastlib/tree/kdtree_impl.h	/^namespace tree_kdtree_private {$/;"	n
true_factors_	mlpack/regression/ridge_regression_test.cc	/^  Matrix true_factors_;$/;"	m	class:RidgeRegressionTest	file:
tsc_t	include/fastlib/fx/stopwatch.h	/^typedef uint64 tsc_t;$/;"	t
type	include/fastlib/data/dataset.h	/^  Type type() const {$/;"	f	class:DatasetFeature
type_	include/fastlib/base/otrav_impl.h	/^    const char *type_;$/;"	m	class:ot__private::Printer
type_	include/fastlib/data/dataset.h	/^  Type type_;$/;"	m	class:DatasetFeature
uint16	include/fastlib/base/basic_types.h	/^typedef unsigned short uint16;$/;"	t
uint32	include/fastlib/base/basic_types.h	/^typedef unsigned int uint32;$/;"	t
uint64	include/fastlib/base/basic_types.h	/^typedef unsigned long uint64;$/;"	t
uint8	include/fastlib/base/basic_types.h	/^typedef unsigned char uint8;$/;"	t
unlikely	include/fastlib/base/compiler.h	129;"	d
unshrinked_	mlpack/svm/smo.h	/^  bool unshrinked_; \/* indicator: where unshrinking has be carried out  *\/$/;"	m	class:SMO
unweighted_coeffs_	mlpack/kde/original_ifgt.h	/^  Matrix unweighted_coeffs_;$/;"	m	class:OriginalIFGT
upper_mapping_index_	mlpack/series_expansion/mult_series_expansion_aux.h	/^  ArrayList< ArrayList<int> > upper_mapping_index_;$/;"	m	class:MultSeriesExpansionAux
upper_mapping_index_	mlpack/series_expansion/series_expansion_aux.h	/^  ArrayList< ArrayList<int> > upper_mapping_index_;$/;"	m	class:SeriesExpansionAux
usage	mlpack/hmm/generate.cc	/^void usage() {$/;"	f
usage	mlpack/hmm/loglik.cc	/^void usage() {$/;"	f
usage	mlpack/hmm/train.cc	/^void usage() {$/;"	f
usage	mlpack/hmm/viterbi.cc	/^void usage() {$/;"	f
use_default_termination_	mlpack/optimization/lbfgs/lbfgs.h	/^  bool use_default_termination_;$/;"	m	class:Lbfgs
used_error_	mlpack/kde/dualtree_kde.h	/^  Vector used_error_;$/;"	m	class:DualtreeKde
used_error_	mlpack/kde/dualtree_vkde.h	/^  Vector used_error_;$/;"	m	class:DualtreeVKde
used_error_	mlpack/kde/kde_stat.h	/^  double used_error_;$/;"	m	class:KdeStat
used_error_	mlpack/kde/kde_stat.h	/^  double used_error_;$/;"	m	class:VKdeStat
v_length	mlpack/hmm/mixtureDST.h	/^  int v_length() const { return means[0].length(); }$/;"	f	class:MixtureGauss
val	include/fastlib/fx/datanode.h	/^  char *val;$/;"	m	struct:datanode
val	include/fastlib/math/math_lib.h	/^  Value val;$/;"	m	class:MinMaxVal
val_type	include/fastlib/fx/datanode.h	/^  int val_type;$/;"	m	struct:datanode
val_type	include/fastlib/fx/fx.h	/^  fx_val_t val_type;$/;"	m	struct:fx_entry_doc
value	include/fastlib/col/heap.h	/^    TValue value;$/;"	m	struct:MinHeap::Entry
value_	include/fastlib/par/thread.h	/^  int value_;$/;"	m	class:ValueCondition
value_name	include/fastlib/data/dataset.h	/^  const String& value_name(int value) const {$/;"	f	class:DatasetFeature
value_names	include/fastlib/data/dataset.h	/^  ArrayList<String>& value_names() {$/;"	f	class:DatasetFeature
value_names_	include/fastlib/data/dataset.h	/^  ArrayList<String> value_names_;$/;"	m	class:DatasetFeature
variances_	mlpack/naive_bayes/simple_nbc.h	/^  Matrix means_, variances_;$/;"	m	class:SimpleNaiveBayesClassifier
vectorize	mlpack/infomax_ica/infomax_ica.cc	/^void InfomaxICA::vectorize(const Matrix &m, Vector &v){$/;"	f	class:InfomaxICA
viterbi_discrete	mlpack/hmm/viterbi.cc	/^success_t viterbi_discrete() {$/;"	f
viterbi_gaussian	mlpack/hmm/viterbi.cc	/^success_t viterbi_gaussian() {$/;"	f
viterbi_mixture	mlpack/hmm/viterbi.cc	/^success_t viterbi_mixture() {$/;"	f
w_	mlpack/infomax_ica/infomax_ica.h	/^  Matrix w_;$/;"	m	class:InfomaxICA
w_delta	mlpack/infomax_ica/infomax_ica.cc	/^double InfomaxICA::w_delta(const Matrix &w_prev, const Matrix &w_pres){$/;"	f	class:InfomaxICA
weight_sum_	mlpack/kde/kde_cv_stat.h	/^  double weight_sum_;$/;"	m	class:VKdeCVStat
weight_sum_	mlpack/kde/kde_stat.h	/^  double weight_sum_;$/;"	m	class:VKdeStat
weighted_coeffs_	mlpack/kde/original_ifgt.h	/^  Matrix weighted_coeffs_;$/;"	m	class:OriginalIFGT
width	include/fastlib/math/math_lib.h	/^  double width() const {$/;"	f	struct:DRange
wolfe_beta_	mlpack/optimization/lbfgs/lbfgs.h	/^  double wolfe_beta_;$/;"	m	class:Lbfgs
wolfe_sigma1_	mlpack/optimization/lbfgs/lbfgs.h	/^  double wolfe_sigma1_;$/;"	m	class:Lbfgs
wolfe_sigma2_	mlpack/optimization/lbfgs/lbfgs.h	/^  double wolfe_sigma2_;$/;"	m	class:Lbfgs
wss_	mlpack/svm/smo.h	/^  int wss_; \/\/ working set selection scheme, 1 for 1st order expansion; 2 for 2nd order expansion$/;"	m	class:SMO
wss_	mlpack/svm/svm.h	/^    double wss_;$/;"	m	struct:SVM::PARAMETERS
x	include/fastlib/base/compiler.h	/^  struct S {T x; char c;};$/;"	m	struct:compiler_strideof::S
y_	mlpack/svm/smo.h	/^  ArrayList<int> y_; \/* list that stores "labels" *\/$/;"	m	class:SMO
y_bfgs_	mlpack/optimization/lbfgs/lbfgs.h	/^  ArrayList<Matrix> y_bfgs_;$/;"	m	class:Lbfgs
~AllNN	mlpack/allnn/allnn.h	/^  ~AllNN() {$/;"	f	class:AllNN
~AllkFN	mlpack/allkfn/allkfn.h	/^  ~AllkFN() {$/;"	f	class:AllkFN
~AllkNN	mlpack/allknn/allknn.h	/^  ~AllkNN() {$/;"	f	class:AllkNN
~CosineNodeTest	mlpack/quicsvd/cosine_tree.h	/^  ~CosineNodeTest() {$/;"	f	class:CosineNodeTest
~DiskAllNN	mlpack/disk_allnn/disk_allnn.h	/^  ~DiskAllNN() {$/;"	f	class:DiskAllNN
~DoneCondition	include/fastlib/par/thread.h	/^  ~DoneCondition() {}$/;"	f	class:DoneCondition
~DualtreeKde	mlpack/kde/dualtree_kde.h	/^  ~DualtreeKde() { $/;"	f	class:DualtreeKde
~DualtreeKdeCV	mlpack/kde/dualtree_kde_cv.h	/^  ~DualtreeKdeCV() {    $/;"	f	class:DualtreeKdeCV
~DualtreeVKde	mlpack/kde/dualtree_vkde.h	/^  ~DualtreeVKde() { $/;"	f	class:DualtreeVKde
~EmptyStatistic	include/fastlib/tree/statistic.h	/^  ~EmptyStatistic() {}$/;"	f	class:EmptyStatistic
~FFTKde	mlpack/kde/fft_kde.h	/^  ~FFTKde() {}$/;"	f	class:FFTKde
~FGTKde	mlpack/kde/fgt_kde.h	/^  ~FGTKde() {}$/;"	f	class:FGTKde
~GenMatrix	include/fastlib/la/matrix.h	/^  ~GenMatrix() {$/;"	f	class:GenMatrix
~GenVector	include/fastlib/la/matrix.h	/^  ~GenVector() {$/;"	f	class:GenVector
~GeneralCrossValidator	include/fastlib/data/crossvalidation.h	/^  ~GeneralCrossValidator() {}$/;"	f	class:GeneralCrossValidator
~GrainQueue	include/fastlib/par/grain.h	/^  ~GrainQueue() {}$/;"	f	class:GrainQueue
~KdeCVStat	mlpack/kde/kde_cv_stat.h	/^  ~KdeCVStat() { }$/;"	f	class:KdeCVStat
~KdeStat	mlpack/kde/kde_stat.h	/^  ~KdeStat() { }$/;"	f	class:KdeStat
~KernelPCA	mlpack/kernel_pca/kernel_pca.h	/^  ~KernelPCA() {$/;"	f	class:KernelPCA
~Lockable	include/fastlib/par/thread.h	/^  ~Lockable() {}$/;"	f	class:Lockable
~MoGEM	mlpack/mog/mog_em.h	/^  ~MoGEM() {$/;"	f	class:MoGEM
~MoGL2E	mlpack/mog/mog_l2e.h	/^  ~MoGL2E() {$/;"	f	class:MoGL2E
~Mutex	include/fastlib/par/thread.h	/^  ~Mutex() {$/;"	f	class:Mutex
~NaiveKde	mlpack/kde/naive_kde.h	/^  ~NaiveKde() {$/;"	f	class:NaiveKde
~NaiveOrthoRangeSearch	mlpack/range_search/naive_ortho_range_search.h	/^  ~NaiveOrthoRangeSearch() {}$/;"	f	class:NaiveOrthoRangeSearch
~NelderMead	mlpack/optimization/optimizers.h	/^  ~NelderMead() {$/;"	f	class:NelderMead
~OriginalIFGT	mlpack/kde/original_ifgt.h	/^  ~OriginalIFGT() {}$/;"	f	class:OriginalIFGT
~OrthoRangeSearch	mlpack/range_search/ortho_range_search.h	/^  ~OrthoRangeSearch() {$/;"	f	class:OrthoRangeSearch
~QuasiNewton	mlpack/optimization/optimizers.h	/^  ~QuasiNewton(){ $/;"	f	class:QuasiNewton
~Queue	include/fastlib/col/queue.h	/^  ~Queue() {$/;"	f	class:Queue
~QuicSVDTest	mlpack/quicsvd/quicsvd.h	/^  ~QuicSVDTest() {$/;"	f	class:QuicSVDTest
~SMO	mlpack/svm/smo.h	/^  ~SMO() {}$/;"	f	class:SMO
~SimpleCrossValidator	include/fastlib/data/crossvalidation.h	/^  ~SimpleCrossValidator() {}$/;"	f	class:SimpleCrossValidator
~SimpleNaiveBayesClassifier	mlpack/naive_bayes/simple_nbc.h	/^  ~SimpleNaiveBayesClassifier(){$/;"	f	class:SimpleNaiveBayesClassifier
~SmallMatrix	include/fastlib/la/matrix.h	/^  ~SmallMatrix() {}$/;"	f	class:SmallMatrix
~SmallVector	include/fastlib/la/matrix.h	/^  ~SmallVector() {}$/;"	f	class:SmallVector
~Task	include/fastlib/par/task.h	/^  virtual ~Task() {}$/;"	f	class:Task
~TextLineReader	include/fastlib/file/textfile.h	/^  ~TextLineReader() {$/;"	f	class:TextLineReader
~TextTokenizer	include/fastlib/file/textfile.h	/^  ~TextTokenizer() {$/;"	f	class:TextTokenizer
~TextWriter	include/fastlib/file/textfile.h	/^  ~TextWriter() {$/;"	f	class:TextWriter
~Thread	include/fastlib/par/thread.h	/^  ~Thread() {$/;"	f	class:Thread
~ThreadedGrainRunner	include/fastlib/par/grain.h	/^  ~ThreadedGrainRunner() {}$/;"	f	class:ThreadedGrainRunner
~VKdeCVStat	mlpack/kde/kde_cv_stat.h	/^  ~VKdeCVStat() {$/;"	f	class:VKdeCVStat
~VKdeStat	mlpack/kde/kde_stat.h	/^  ~VKdeStat() {$/;"	f	class:VKdeStat
~ValueCondition	include/fastlib/par/thread.h	/^  ~ValueCondition() {}$/;"	f	class:ValueCondition
~WaitCondition	include/fastlib/par/thread.h	/^  ~WaitCondition() {$/;"	f	class:WaitCondition
